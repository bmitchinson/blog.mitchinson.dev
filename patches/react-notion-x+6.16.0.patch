diff --git a/node_modules/react-notion-x/build/dev/index.js b/node_modules/react-notion-x/build/dev/index.js
index 0c7f183..4dfb474 100644
--- a/node_modules/react-notion-x/build/dev/index.js
+++ b/node_modules/react-notion-x/build/dev/index.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -80,18 +102,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -99,11 +132,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -115,12 +151,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -148,7 +194,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -171,7 +218,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle3(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -180,9 +228,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -193,7 +241,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -203,7 +254,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -211,10 +263,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle3;
-  }
+  },
 });
 
 // src/renderer.tsx
@@ -229,7 +285,7 @@ import {
   getBlockParentPage as getBlockParentPage2,
   getPageTableOfContents,
   getTextContent as getTextContent2,
-  uuidToId as uuidToId2
+  uuidToId as uuidToId2,
 } from "notion-utils";
 
 // src/components/asset-wrapper.tsx
@@ -252,17 +308,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -295,18 +359,24 @@ var groupBlockContent = (blockMap) => {
     var _a, _b;
     const blockValue = (_a = blockMap[id]) == null ? void 0 : _a.value;
     if (blockValue) {
-      (_b = blockValue.content) == null ? void 0 : _b.forEach((blockId) => {
-        var _a2, _b2;
-        const blockType = (_b2 = (_a2 = blockMap[blockId]) == null ? void 0 : _a2.value) == null ? void 0 : _b2.type;
-        if (blockType && blockType !== lastType) {
-          index++;
-          lastType = blockType;
-          output[index] = [];
-        }
-        if (index > -1) {
-          output[index].push(blockId);
-        }
-      });
+      (_b = blockValue.content) == null
+        ? void 0
+        : _b.forEach((blockId) => {
+            var _a2, _b2;
+            const blockType =
+              (_b2 = (_a2 = blockMap[blockId]) == null ? void 0 : _a2.value) ==
+              null
+                ? void 0
+                : _b2.type;
+            if (blockType && blockType !== lastType) {
+              index++;
+              lastType = blockType;
+              output[index] = [];
+            }
+            if (index > -1) {
+              output[index].push(blockId);
+            }
+          });
     }
     lastType = void 0;
   });
@@ -329,7 +399,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -337,13 +407,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -360,11 +430,18 @@ import * as React2 from "react";
 // src/icons/check.tsx
 import * as React from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -372,17 +449,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React2.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React2.createElement(check_default, null));
+    content = /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React2.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React2.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React2.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React2.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/components/header.tsx
@@ -393,13 +478,22 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React3 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React3.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React3.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React3.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React3.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/page-icon.tsx
@@ -409,15 +503,27 @@ import { getBlockIcon, getBlockTitle } from "notion-utils";
 // src/icons/default-page-icon.tsx
 import * as React4 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React4.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React4.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React4.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React4.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/lazy-image.tsx
@@ -425,32 +531,43 @@ import * as React5 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React5.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React5.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -460,18 +577,18 @@ var LazyImage = (_a) => {
   const attachZoom = React5.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React5.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
         src,
@@ -483,51 +600,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React5.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React5.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React5.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
@@ -538,38 +670,51 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React5.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -577,113 +722,176 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React6.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React6.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React6.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React6.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React6.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React6.memo(PageIconImpl);
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React14 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle3 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle3,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React7 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React7.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React7.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React7.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React7.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React8 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React8.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React8.createElement("defs", null, /* @__PURE__ */ React8.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React8.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React8.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React8.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React8.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React8.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React8.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React8.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React8.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React8.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React8.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React8.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React8.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React8.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React8.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React8.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React8.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React8.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React8.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React8.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/page-title.tsx
@@ -700,12 +908,23 @@ import * as React10 from "react";
 // src/icons/type-github.tsx
 import * as React9 from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React9.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React9.createElement("g", null, /* @__PURE__ */ React9.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React9.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React9.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -713,18 +932,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React10.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React10.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -739,24 +973,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React10.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React10.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React10.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React10.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React10.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React10.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React10.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React10.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React10.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React10.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React10.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React10.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/graceful-image.tsx
@@ -764,215 +1032,338 @@ import * as React11 from "react";
 import { Img } from "react-image";
 var GracefulImage = (props) => {
   if (isBrowser) {
-    return /* @__PURE__ */ React11.createElement(Img, __spreadValues({}, props));
+    return /* @__PURE__ */ React11.createElement(
+      Img,
+      __spreadValues({}, props)
+    );
   } else {
-    return /* @__PURE__ */ React11.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React11.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React12.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React12.createElement(React12.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React12.createElement(
+    React12.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React12.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React12.createElement(
+                React12.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React12.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React12.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React12.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React12.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React12.createElement(
+                      GracefulImage,
+                      {
+                        className: "notion-user",
+                        src: mapImageUrl(user.profile_photo, block),
+                        alt: name,
+                      }
+                    );
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React12.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React12.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React12.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React12.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React12.createElement(
+                  "b",
+                  null,
+                  element
+                );
+              case "i":
+                return /* @__PURE__ */ React12.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React12.createElement(
+                  "s",
+                  null,
+                  element
+                );
+              case "_":
+                return /* @__PURE__ */ React12.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React12.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React12.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React12.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React12.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React12.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React12.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React12.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React12.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React12.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React12.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React12.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React12.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React12.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React12.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React12.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React12.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React12.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React12.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React12.createElement(React12.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React12.createElement(React12.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React12.createElement(React12.Fragment, null, text));
+          return /* @__PURE__ */ React12.createElement(
+            React12.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/components/page-title.tsx
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle2(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React13.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React13.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React13.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React13.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React13.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React13.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React13.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React13.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React13.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React13.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React13.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React13.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
+  return /* @__PURE__ */ React13.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React13.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React13.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React13.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
 };
 var PageTitle = React13.memo(PageTitleImpl);
 
@@ -984,7 +1375,7 @@ var SearchDialog = class extends React14.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -995,7 +1386,11 @@ var SearchDialog = class extends React14.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -1004,67 +1399,81 @@ var SearchDialog = class extends React14.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle3(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle3(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React14.createRef();
   }
   componentDidMount() {
@@ -1075,87 +1484,189 @@ var SearchDialog = class extends React14.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React14.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React14.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React14.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React14.createElement(SearchIcon, null)), /* @__PURE__ */ React14.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React14.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React14.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React14.createElement(React14.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React14.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React14.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React14.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React14.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React14.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React14.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React14.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React14.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React14.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React14.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React14.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React14.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React14.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React14.createElement(
+                React14.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React14.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React14.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React14.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React14.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React14.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React14.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React14.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React14.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React14.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React14.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React14.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React14.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React14.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React14.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React14.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React14.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React14.createElement("div", null, /* @__PURE__ */ React14.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React14.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React14.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React14.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React15.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React15.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React15.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React15.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React15.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React15.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React15.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React15.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -1166,38 +1677,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React15.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React15.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React15.createElement(React15.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React15.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React15.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React15.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React15.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React15.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React15.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React15.createElement(
+        React15.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React15.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React15.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React15.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React15.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React15.useState(isShowingSearch);
   React15.useEffect(() => {
@@ -1223,20 +1767,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React15.createElement(React15.Fragment, null, hasSearch && /* @__PURE__ */ React15.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React15.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React15.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React15.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React15.createElement(
+    React15.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React15.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React15.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React15.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React15.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/next.tsx
@@ -1244,83 +1806,98 @@ import * as React16 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React16.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React16.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React16.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React16.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React16.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React16.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React16.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React17.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React17.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React17.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React17.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React17.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React17.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React17.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React17.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyLink = (_a) => {
-  var _b = _a, { href, rel, target, title } = _b, rest = __objRest(_b, ["href", "rel", "target", "title"]);
-  return /* @__PURE__ */ React17.createElement("span", __spreadValues({}, rest));
+  var _b = _a,
+    { href, rel, target, title } = _b,
+    rest = __objRest(_b, ["href", "rel", "target", "title"]);
+  return /* @__PURE__ */ React17.createElement(
+    "span",
+    __spreadValues({}, rest)
+  );
 };
 var dummyComponent = (name) => () => {
   console.warn(
@@ -1358,7 +1935,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -1367,7 +1944,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -1387,23 +1964,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React17.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -1425,17 +2004,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React17.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React17.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React17.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -1445,9 +2036,11 @@ var useNotionContext = () => {
 // src/components/lite-youtube-embed.tsx
 import * as React18 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -1459,7 +2052,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React18.useMemo(
@@ -1471,64 +2064,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React18.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React18.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React18.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React18.useState(false);
   const warmConnections = React18.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React18.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React18.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React18.createElement(React18.Fragment, null, /* @__PURE__ */ React18.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React18.createElement(React18.Fragment, null, /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React18.createElement(React18.Fragment, null, /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React18.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React18.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React18.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React18.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React18.createElement(
+    React18.Fragment,
+    null,
+    /* @__PURE__ */ React18.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React18.createElement(
+        React18.Fragment,
+        null,
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React18.createElement(
+        React18.Fragment,
+        null,
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React18.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React18.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React18.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React18.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -1545,7 +2165,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -1560,7 +2180,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -1570,7 +2190,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -1631,28 +2251,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React19.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React19.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React19.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React19.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -1662,29 +2291,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React19.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React19.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React19.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -1699,7 +2353,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React19.createElement("iframe", {
@@ -1710,29 +2364,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React19.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React19.createElement(React19.Fragment, null, /* @__PURE__ */ React19.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React19.createElement(
+    React19.Fragment,
+    null,
+    /* @__PURE__ */ React19.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -1743,7 +2415,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId2(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -1752,32 +2433,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React20.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React20.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React20.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React20.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React20.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React20.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React20.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React20.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId2(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React20.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React20.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -1802,14 +2512,25 @@ import * as React21 from "react";
 var Audio = ({ block, className }) => {
   var _a, _b, _c;
   const { recordMap } = useNotionContext();
-  const source = recordMap.signed_urls[block.id] || ((_c = (_b = (_a = block.properties) == null ? void 0 : _a.source) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]);
-  return /* @__PURE__ */ React21.createElement("div", {
-    className: cs("notion-audio", className)
-  }, /* @__PURE__ */ React21.createElement("audio", {
-    controls: true,
-    preload: "none",
-    src: source
-  }));
+  const source =
+    recordMap.signed_urls[block.id] ||
+    ((_c =
+      (_b = (_a = block.properties) == null ? void 0 : _a.source) == null
+        ? void 0
+        : _b[0]) == null
+      ? void 0
+      : _c[0]);
+  return /* @__PURE__ */ React21.createElement(
+    "div",
+    {
+      className: cs("notion-audio", className),
+    },
+    /* @__PURE__ */ React21.createElement("audio", {
+      controls: true,
+      preload: "none",
+      src: source,
+    })
+  );
 };
 
 // src/components/file.tsx
@@ -1818,43 +2539,87 @@ import * as React23 from "react";
 // src/icons/file-icon.tsx
 import * as React22 from "react";
 var FileIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React22.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React22.createElement("path", {
-    d: "M22,8v12c0,3.866-3.134,7-7,7s-7-3.134-7-7V8c0-2.762,2.238-5,5-5s5,2.238,5,5v12c0,1.657-1.343,3-3,3s-3-1.343-3-3V8h-2v12c0,2.762,2.238,5,5,5s5-2.238,5-5V8c0-3.866-3.134-7-7-7S6,4.134,6,8v12c0,4.971,4.029,9,9,9s9-4.029,9-9V8H22z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React22.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React22.createElement("path", {
+      d: "M22,8v12c0,3.866-3.134,7-7,7s-7-3.134-7-7V8c0-2.762,2.238-5,5-5s5,2.238,5,5v12c0,1.657-1.343,3-3,3s-3-1.343-3-3V8h-2v12c0,2.762,2.238,5,5,5s5-2.238,5-5V8c0-3.866-3.134-7-7-7S6,4.134,6,8v12c0,4.971,4.029,9,9,9s9-4.029,9-9V8H22z",
+    })
+  );
 };
 
 // src/components/file.tsx
 var File = ({ block, className }) => {
   var _a, _b, _c, _d, _e;
   const { components, recordMap } = useNotionContext();
-  const source = recordMap.signed_urls[block.id] || ((_c = (_b = (_a = block.properties) == null ? void 0 : _a.source) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]);
-  return /* @__PURE__ */ React23.createElement("div", {
-    className: cs("notion-file", className)
-  }, /* @__PURE__ */ React23.createElement(components.Link, {
-    className: "notion-file-link",
-    href: source,
-    target: "_blank",
-    rel: "noopener noreferrer"
-  }, /* @__PURE__ */ React23.createElement(FileIcon, {
-    className: "notion-file-icon"
-  }), /* @__PURE__ */ React23.createElement("div", {
-    className: "notion-file-info"
-  }, /* @__PURE__ */ React23.createElement("div", {
-    className: "notion-file-title"
-  }, /* @__PURE__ */ React23.createElement(Text, {
-    value: ((_d = block.properties) == null ? void 0 : _d.title) || [["File"]],
-    block
-  })), ((_e = block.properties) == null ? void 0 : _e.size) && /* @__PURE__ */ React23.createElement("div", {
-    className: "notion-file-size"
-  }, /* @__PURE__ */ React23.createElement(Text, {
-    value: block.properties.size,
-    block
-  })))));
+  const source =
+    recordMap.signed_urls[block.id] ||
+    ((_c =
+      (_b = (_a = block.properties) == null ? void 0 : _a.source) == null
+        ? void 0
+        : _b[0]) == null
+      ? void 0
+      : _c[0]);
+  return /* @__PURE__ */ React23.createElement(
+    "div",
+    {
+      className: cs("notion-file", className),
+    },
+    /* @__PURE__ */ React23.createElement(
+      components.Link,
+      {
+        className: "notion-file-link",
+        href: source,
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      /* @__PURE__ */ React23.createElement(FileIcon, {
+        className: "notion-file-icon",
+      }),
+      /* @__PURE__ */ React23.createElement(
+        "div",
+        {
+          className: "notion-file-info",
+        },
+        /* @__PURE__ */ React23.createElement(
+          "div",
+          {
+            className: "notion-file-title",
+          },
+          /* @__PURE__ */ React23.createElement(Text, {
+            value: ((_d = block.properties) == null ? void 0 : _d.title) || [
+              ["File"],
+            ],
+            block,
+          })
+        ),
+        ((_e = block.properties) == null ? void 0 : _e.size) &&
+          /* @__PURE__ */ React23.createElement(
+            "div",
+            {
+              className: "notion-file-size",
+            },
+            /* @__PURE__ */ React23.createElement(Text, {
+              value: block.properties.size,
+              block,
+            })
+          )
+      )
+    )
+  );
 };
 
 // src/components/google-drive.tsx
@@ -1863,41 +2628,75 @@ var GoogleDrive = ({ block, className }) => {
   var _a;
   const { components, mapImageUrl } = useNotionContext();
   const properties = (_a = block.format) == null ? void 0 : _a.drive_properties;
-  if (!properties)
-    return null;
+  if (!properties) return null;
   let domain;
   try {
     const url = new URL(properties.url);
     domain = url.hostname;
-  } catch (err) {
-  }
-  return /* @__PURE__ */ React24.createElement("div", {
-    className: cs("notion-google-drive", className)
-  }, /* @__PURE__ */ React24.createElement(components.Link, {
-    className: "notion-google-drive-link",
-    href: properties.url,
-    target: "_blank",
-    rel: "noopener noreferrer"
-  }, /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-preview"
-  }, /* @__PURE__ */ React24.createElement(GracefulImage, {
-    src: mapImageUrl(properties.thumbnail, block),
-    alt: properties.title || "Google Drive Document",
-    loading: "lazy"
-  })), /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body"
-  }, properties.title && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-title"
-  }, properties.title), properties.icon && domain && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-source"
-  }, properties.icon && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-source-icon",
-    style: {
-      backgroundImage: `url(${properties.icon})`
-    }
-  }), domain && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-source-domain"
-  }, domain)))));
+  } catch (err) {}
+  return /* @__PURE__ */ React24.createElement(
+    "div",
+    {
+      className: cs("notion-google-drive", className),
+    },
+    /* @__PURE__ */ React24.createElement(
+      components.Link,
+      {
+        className: "notion-google-drive-link",
+        href: properties.url,
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      /* @__PURE__ */ React24.createElement(
+        "div",
+        {
+          className: "notion-google-drive-preview",
+        },
+        /* @__PURE__ */ React24.createElement(GracefulImage, {
+          src: mapImageUrl(properties.thumbnail, block),
+          alt: properties.title || "Google Drive Document",
+          loading: "lazy",
+        })
+      ),
+      /* @__PURE__ */ React24.createElement(
+        "div",
+        {
+          className: "notion-google-drive-body",
+        },
+        properties.title &&
+          /* @__PURE__ */ React24.createElement(
+            "div",
+            {
+              className: "notion-google-drive-body-title",
+            },
+            properties.title
+          ),
+        properties.icon &&
+          domain &&
+          /* @__PURE__ */ React24.createElement(
+            "div",
+            {
+              className: "notion-google-drive-body-source",
+            },
+            properties.icon &&
+              /* @__PURE__ */ React24.createElement("div", {
+                className: "notion-google-drive-body-source-icon",
+                style: {
+                  backgroundImage: `url(${properties.icon})`,
+                },
+              }),
+            domain &&
+              /* @__PURE__ */ React24.createElement(
+                "div",
+                {
+                  className: "notion-google-drive-body-source-domain",
+                },
+                domain
+              )
+          )
+      )
+    )
+  );
 };
 
 // src/components/page-aside.tsx
@@ -1911,36 +2710,34 @@ var PageAside = ({
   pageAside,
   hasToc,
   hasAside,
-  className
+  className,
 }) => {
   const throttleMs = 100;
   const actionSectionScrollSpy = React25.useMemo(
-    () => (0, import_lodash2.default)(() => {
-      const sections = document.getElementsByClassName("notion-h");
-      let prevBBox = null;
-      let currentSectionId = activeSection;
-      for (let i = 0; i < sections.length; ++i) {
-        const section = sections[i];
-        if (!section || !(section instanceof Element))
-          continue;
-        if (!currentSectionId) {
-          currentSectionId = section.getAttribute("data-id");
-        }
-        const bbox = section.getBoundingClientRect();
-        const prevHeight = prevBBox ? bbox.top - prevBBox.bottom : 0;
-        const offset = Math.max(150, prevHeight / 4);
-        if (bbox.top - offset < 0) {
-          currentSectionId = section.getAttribute("data-id");
-          prevBBox = bbox;
-          continue;
+    () =>
+      (0, import_lodash2.default)(() => {
+        const sections = document.getElementsByClassName("notion-h");
+        let prevBBox = null;
+        let currentSectionId = activeSection;
+        for (let i = 0; i < sections.length; ++i) {
+          const section = sections[i];
+          if (!section || !(section instanceof Element)) continue;
+          if (!currentSectionId) {
+            currentSectionId = section.getAttribute("data-id");
+          }
+          const bbox = section.getBoundingClientRect();
+          const prevHeight = prevBBox ? bbox.top - prevBBox.bottom : 0;
+          const offset = Math.max(150, prevHeight / 4);
+          if (bbox.top - offset < 0) {
+            currentSectionId = section.getAttribute("data-id");
+            prevBBox = bbox;
+            continue;
+          }
+          break;
         }
-        break;
-      }
-      setActiveSection(currentSectionId);
-    }, throttleMs),
-    [
-      setActiveSection
-    ]
+        setActiveSection(currentSectionId);
+      }, throttleMs),
+    [setActiveSection]
   );
   React25.useEffect(() => {
     if (!hasToc) {
@@ -1955,32 +2752,59 @@ var PageAside = ({
   if (!hasAside) {
     return null;
   }
-  return /* @__PURE__ */ React25.createElement("aside", {
-    className: cs("notion-aside", className)
-  }, hasToc && /* @__PURE__ */ React25.createElement("div", {
-    className: "notion-aside-table-of-contents"
-  }, /* @__PURE__ */ React25.createElement("div", {
-    className: "notion-aside-table-of-contents-header"
-  }, "Table of Contents"), /* @__PURE__ */ React25.createElement("nav", {
-    className: "notion-table-of-contents"
-  }, toc.map((tocItem) => {
-    const id = uuidToId(tocItem.id);
-    return /* @__PURE__ */ React25.createElement("a", {
-      key: id,
-      href: `#${id}`,
-      className: cs(
-        "notion-table-of-contents-item",
-        `notion-table-of-contents-item-indent-level-${tocItem.indentLevel}`,
-        activeSection === id && "notion-table-of-contents-active-item"
-      )
-    }, /* @__PURE__ */ React25.createElement("span", {
-      className: "notion-table-of-contents-item-body",
-      style: {
-        display: "inline-block",
-        marginLeft: tocItem.indentLevel * 16
-      }
-    }, tocItem.text));
-  }))), pageAside);
+  return /* @__PURE__ */ React25.createElement(
+    "aside",
+    {
+      className: cs("notion-aside", className),
+    },
+    hasToc &&
+      /* @__PURE__ */ React25.createElement(
+        "div",
+        {
+          className: "notion-aside-table-of-contents",
+        },
+        /* @__PURE__ */ React25.createElement(
+          "div",
+          {
+            className: "notion-aside-table-of-contents-header",
+          },
+          "Table of Contents"
+        ),
+        /* @__PURE__ */ React25.createElement(
+          "nav",
+          {
+            className: "notion-table-of-contents",
+          },
+          toc.map((tocItem) => {
+            const id = uuidToId(tocItem.id);
+            return /* @__PURE__ */ React25.createElement(
+              "a",
+              {
+                key: id,
+                href: `#${id}`,
+                className: cs(
+                  "notion-table-of-contents-item",
+                  `notion-table-of-contents-item-indent-level-${tocItem.indentLevel}`,
+                  activeSection === id && "notion-table-of-contents-active-item"
+                ),
+              },
+              /* @__PURE__ */ React25.createElement(
+                "span",
+                {
+                  className: "notion-table-of-contents-item-body",
+                  style: {
+                    display: "inline-block",
+                    marginLeft: tocItem.indentLevel * 16,
+                  },
+                },
+                tocItem.text
+              )
+            );
+          })
+        )
+      ),
+    pageAside
+  );
 };
 
 // src/components/sync-pointer-block.tsx
@@ -1994,38 +2818,98 @@ var SyncPointerBlock = ({ block, level }) => {
     return null;
   }
   const syncPointerBlock = block;
-  const referencePointerId = (_b = (_a = syncPointerBlock == null ? void 0 : syncPointerBlock.format) == null ? void 0 : _a.transclusion_reference_pointer) == null ? void 0 : _b.id;
+  const referencePointerId =
+    (_b =
+      (_a = syncPointerBlock == null ? void 0 : syncPointerBlock.format) == null
+        ? void 0
+        : _a.transclusion_reference_pointer) == null
+      ? void 0
+      : _b.id;
   if (!referencePointerId) {
     return null;
   }
   return /* @__PURE__ */ React26.createElement(NotionBlockRenderer, {
     key: referencePointerId,
     level,
-    blockId: referencePointerId
+    blockId: referencePointerId,
   });
 };
 
 // src/icons/link-icon.tsx
 import * as React27 from "react";
 var LinkIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React27.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 16 16",
-    width: "16",
-    height: "16"
-  }), /* @__PURE__ */ React27.createElement("path", {
-    fillRule: "evenodd",
-    d: "M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React27.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 16 16",
+        width: "16",
+        height: "16",
+      }
+    ),
+    /* @__PURE__ */ React27.createElement("path", {
+      fillRule: "evenodd",
+      d: "M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z",
+    })
+  );
 };
 
 // src/block.tsx
 var tocIndentLevelCache = {};
 var pageCoverStyleCache = {};
 var Block = (props) => {
-  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L, _M, _N, _O, _P, _Q;
+  var _a,
+    _b,
+    _c,
+    _d,
+    _e,
+    _f,
+    _g,
+    _h,
+    _i,
+    _j,
+    _k,
+    _l,
+    _m,
+    _n,
+    _o,
+    _p,
+    _q,
+    _r,
+    _s,
+    _t,
+    _u,
+    _v,
+    _w,
+    _x,
+    _y,
+    _z,
+    _A,
+    _B,
+    _C,
+    _D,
+    _E,
+    _F,
+    _G,
+    _H,
+    _I,
+    _J,
+    _K,
+    _L,
+    _M,
+    _N,
+    _O,
+    _P,
+    _Q;
   const ctx2 = useNotionContext();
   const {
     components,
@@ -2038,7 +2922,7 @@ var Block = (props) => {
     minTableOfContentsItems,
     defaultPageIcon,
     defaultPageCover,
-    defaultPageCoverPosition
+    defaultPageCoverPosition,
   } = ctx2;
   const [activeSection, setActiveSection] = React28.useState(null);
   const {
@@ -2055,16 +2939,17 @@ var Block = (props) => {
     pageAside,
     pageCover,
     hideBlockId,
-    disableHeader
+    disableHeader,
   } = props;
   if (!block) {
     return null;
   }
   if (level === 0 && block.type === "collection_view") {
-    ;
     block.type = "collection_view_page";
   }
-  const blockId = hideBlockId ? "notion-block" : `notion-block-${uuidToId2(block.id)}`;
+  const blockId = hideBlockId
+    ? "notion-block"
+    : `notion-block-${uuidToId2(block.id)}`;
   switch (block.type) {
     case "collection_view_page":
     case "page":
@@ -2074,132 +2959,226 @@ var Block = (props) => {
           page_cover = defaultPageCover,
           page_cover_position = defaultPageCoverPosition,
           page_full_width,
-          page_small_text
+          page_small_text,
         } = block.format || {};
         if (fullPage) {
-          const properties = block.type === "page" ? block.properties : {
-            title: (_b = (_a = recordMap.collection[getBlockCollectionId(block, recordMap)]) == null ? void 0 : _a.value) == null ? void 0 : _b.name
-          };
+          const properties =
+            block.type === "page"
+              ? block.properties
+              : {
+                  title:
+                    (_b =
+                      (_a =
+                        recordMap.collection[
+                          getBlockCollectionId(block, recordMap)
+                        ]) == null
+                        ? void 0
+                        : _a.value) == null
+                      ? void 0
+                      : _b.name,
+                };
           const coverPosition = (1 - (page_cover_position || 0.5)) * 100;
           const pageCoverObjectPosition = `center ${coverPosition}%`;
           let pageCoverStyle = pageCoverStyleCache[pageCoverObjectPosition];
           if (!pageCoverStyle) {
             pageCoverStyle = pageCoverStyleCache[pageCoverObjectPosition] = {
-              objectPosition: pageCoverObjectPosition
+              objectPosition: pageCoverObjectPosition,
             };
           }
-          const pageIcon = (_c = getBlockIcon2(block, recordMap)) != null ? _c : defaultPageIcon;
+          const pageIcon =
+            (_c = getBlockIcon2(block, recordMap)) != null
+              ? _c
+              : defaultPageIcon;
           const isPageIconUrl = pageIcon && isUrl(pageIcon);
-          const toc = getPageTableOfContents(
-            block,
-            recordMap
-          );
-          const hasToc = showTableOfContents && toc.length >= minTableOfContentsItems;
+          const toc = getPageTableOfContents(block, recordMap);
+          const hasToc =
+            showTableOfContents && toc.length >= minTableOfContentsItems;
           const hasAside = (hasToc || pageAside) && !page_full_width;
           const hasPageCover = pageCover || page_cover;
-          return /* @__PURE__ */ React28.createElement("div", {
-            className: cs(
-              "notion",
-              "notion-app",
-              darkMode ? "dark-mode" : "light-mode",
-              blockId,
-              className
+          return /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: cs(
+                "notion",
+                "notion-app",
+                darkMode ? "dark-mode" : "light-mode",
+                blockId,
+                className
+              ),
+            },
+            /* @__PURE__ */ React28.createElement("div", {
+              className: "notion-viewport",
+            }),
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-frame",
+              },
+              !disableHeader &&
+                /* @__PURE__ */ React28.createElement(components.Header, {
+                  block,
+                }),
+              header,
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-page-scroller",
+                },
+                hasPageCover &&
+                  (pageCover
+                    ? pageCover
+                    : /* @__PURE__ */ React28.createElement(
+                        "div",
+                        {
+                          className: "notion-page-cover-wrapper",
+                        },
+                        /* @__PURE__ */ React28.createElement(LazyImage, {
+                          src: mapImageUrl(page_cover, block),
+                          alt: getTextContent2(
+                            properties == null ? void 0 : properties.title
+                          ),
+                          priority: true,
+                          className: "notion-page-cover",
+                          style: pageCoverStyle,
+                        })
+                      )),
+                /* @__PURE__ */ React28.createElement(
+                  "main",
+                  {
+                    className: cs(
+                      "notion-page",
+                      hasPageCover
+                        ? "notion-page-has-cover"
+                        : "notion-page-no-cover",
+                      page_icon
+                        ? "notion-page-has-icon"
+                        : "notion-page-no-icon",
+                      isPageIconUrl
+                        ? "notion-page-has-image-icon"
+                        : "notion-page-has-text-icon",
+                      "notion-full-page",
+                      page_full_width && "notion-full-width",
+                      page_small_text && "notion-small-text",
+                      bodyClassName
+                    ),
+                  },
+                  page_icon &&
+                    /* @__PURE__ */ React28.createElement(PageIcon, {
+                      block,
+                      defaultIcon: defaultPageIcon,
+                      inline: false,
+                    }),
+                  pageHeader,
+                  /* @__PURE__ */ React28.createElement(
+                    "h1",
+                    {
+                      className: "notion-title",
+                    },
+                    pageTitle != null
+                      ? pageTitle
+                      : /* @__PURE__ */ React28.createElement(Text, {
+                          value: properties == null ? void 0 : properties.title,
+                          block,
+                        })
+                  ),
+                  (block.type === "collection_view_page" ||
+                    (block.type === "page" &&
+                      block.parent_table === "collection")) &&
+                    /* @__PURE__ */ React28.createElement(
+                      components.Collection,
+                      {
+                        block,
+                        ctx: ctx2,
+                      }
+                    ),
+                  block.type !== "collection_view_page" &&
+                    /* @__PURE__ */ React28.createElement(
+                      "div",
+                      {
+                        className: cs(
+                          "notion-page-content",
+                          hasAside && "notion-page-content-has-aside",
+                          hasToc && "notion-page-content-has-toc"
+                        ),
+                      },
+                      /* @__PURE__ */ React28.createElement(
+                        "article",
+                        {
+                          className: "notion-page-content-inner",
+                        },
+                        children
+                      ),
+                      hasAside &&
+                        /* @__PURE__ */ React28.createElement(PageAside, {
+                          toc,
+                          activeSection,
+                          setActiveSection,
+                          hasToc,
+                          hasAside,
+                          pageAside,
+                        })
+                    ),
+                  pageFooter
+                ),
+                footer
+              )
             )
-          }, /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-viewport"
-          }), /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-frame"
-          }, !disableHeader && /* @__PURE__ */ React28.createElement(components.Header, {
-            block
-          }), header, /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-page-scroller"
-          }, hasPageCover && (pageCover ? pageCover : /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-page-cover-wrapper"
-          }, /* @__PURE__ */ React28.createElement(LazyImage, {
-            src: mapImageUrl(page_cover, block),
-            alt: getTextContent2(properties == null ? void 0 : properties.title),
-            priority: true,
-            className: "notion-page-cover",
-            style: pageCoverStyle
-          }))), /* @__PURE__ */ React28.createElement("main", {
-            className: cs(
-              "notion-page",
-              hasPageCover ? "notion-page-has-cover" : "notion-page-no-cover",
-              page_icon ? "notion-page-has-icon" : "notion-page-no-icon",
-              isPageIconUrl ? "notion-page-has-image-icon" : "notion-page-has-text-icon",
-              "notion-full-page",
-              page_full_width && "notion-full-width",
-              page_small_text && "notion-small-text",
-              bodyClassName
-            )
-          }, page_icon && /* @__PURE__ */ React28.createElement(PageIcon, {
-            block,
-            defaultIcon: defaultPageIcon,
-            inline: false
-          }), pageHeader, /* @__PURE__ */ React28.createElement("h1", {
-            className: "notion-title"
-          }, pageTitle != null ? pageTitle : /* @__PURE__ */ React28.createElement(Text, {
-            value: properties == null ? void 0 : properties.title,
-            block
-          })), (block.type === "collection_view_page" || block.type === "page" && block.parent_table === "collection") && /* @__PURE__ */ React28.createElement(components.Collection, {
-            block,
-            ctx: ctx2
-          }), block.type !== "collection_view_page" && /* @__PURE__ */ React28.createElement("div", {
-            className: cs(
-              "notion-page-content",
-              hasAside && "notion-page-content-has-aside",
-              hasToc && "notion-page-content-has-toc"
-            )
-          }, /* @__PURE__ */ React28.createElement("article", {
-            className: "notion-page-content-inner"
-          }, children), hasAside && /* @__PURE__ */ React28.createElement(PageAside, {
-            toc,
-            activeSection,
-            setActiveSection,
-            hasToc,
-            hasAside,
-            pageAside
-          })), pageFooter), footer)));
+          );
         } else {
-          return /* @__PURE__ */ React28.createElement("main", {
-            className: cs(
-              "notion",
-              darkMode ? "dark-mode" : "light-mode",
-              "notion-page",
-              page_full_width && "notion-full-width",
-              page_small_text && "notion-small-text",
-              blockId,
-              className,
-              bodyClassName
-            )
-          }, /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-viewport"
-          }), pageHeader, (block.type === "collection_view_page" || block.type === "page" && block.parent_table === "collection") && /* @__PURE__ */ React28.createElement(components.Collection, {
-            block,
-            ctx: ctx2
-          }), block.type !== "collection_view_page" && children, pageFooter);
+          return /* @__PURE__ */ React28.createElement(
+            "main",
+            {
+              className: cs(
+                "notion",
+                darkMode ? "dark-mode" : "light-mode",
+                "notion-page",
+                page_full_width && "notion-full-width",
+                page_small_text && "notion-small-text",
+                blockId,
+                className,
+                bodyClassName
+              ),
+            },
+            /* @__PURE__ */ React28.createElement("div", {
+              className: "notion-viewport",
+            }),
+            pageHeader,
+            (block.type === "collection_view_page" ||
+              (block.type === "page" && block.parent_table === "collection")) &&
+              /* @__PURE__ */ React28.createElement(components.Collection, {
+                block,
+                ctx: ctx2,
+              }),
+            block.type !== "collection_view_page" && children,
+            pageFooter
+          );
         }
       } else {
-        const blockColor = (_d = block.format) == null ? void 0 : _d.block_color;
-        return /* @__PURE__ */ React28.createElement(components.PageLink, {
-          className: cs(
-            "notion-page-link",
-            blockColor && `notion-${blockColor}`,
-            blockId
-          ),
-          href: mapPageUrl(block.id)
-        }, /* @__PURE__ */ React28.createElement(PageTitle, {
-          block
-        }));
+        const blockColor =
+          (_d = block.format) == null ? void 0 : _d.block_color;
+        return /* @__PURE__ */ React28.createElement(
+          components.PageLink,
+          {
+            className: cs(
+              "notion-page-link",
+              blockColor && `notion-${blockColor}`,
+              blockId
+            ),
+            href: mapPageUrl(block.id),
+          },
+          /* @__PURE__ */ React28.createElement(PageTitle, {
+            block,
+          })
+        );
       }
     case "header":
     case "sub_header":
     case "sub_sub_header": {
-      if (!block.properties)
-        return null;
+      if (!block.properties) return null;
       const blockColor = (_e = block.format) == null ? void 0 : _e.block_color;
       const id = uuidToId2(block.id);
-      const title = getTextContent2(block.properties.title) || `Notion Header ${id}`;
+      const title =
+        getTextContent2(block.properties.title) || `Notion Header ${id}`;
       let indentLevel = tocIndentLevelCache[block.id];
       let indentLevelClass;
       if (indentLevel === void 0) {
@@ -2227,96 +3206,180 @@ var Block = (props) => {
         indentLevelClass,
         blockId
       );
-      const innerHeader = /* @__PURE__ */ React28.createElement("span", null, /* @__PURE__ */ React28.createElement("div", {
-        id,
-        className: "notion-header-anchor"
-      }), !((_f = block.format) == null ? void 0 : _f.toggleable) && /* @__PURE__ */ React28.createElement("a", {
-        className: "notion-hash-link",
-        href: `#${id}`,
-        title
-      }, /* @__PURE__ */ React28.createElement(LinkIcon, null)), /* @__PURE__ */ React28.createElement("span", {
-        className: "notion-h-title"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: block.properties.title,
-        block
-      })));
+      const innerHeader = /* @__PURE__ */ React28.createElement(
+        "span",
+        null,
+        /* @__PURE__ */ React28.createElement("div", {
+          id,
+          className: "notion-header-anchor",
+        }),
+        !((_f = block.format) == null ? void 0 : _f.toggleable) &&
+          /* @__PURE__ */ React28.createElement(
+            "a",
+            {
+              className: "notion-hash-link",
+              href: `#${id}`,
+              title,
+            },
+            /* @__PURE__ */ React28.createElement(LinkIcon, null)
+          ),
+        /* @__PURE__ */ React28.createElement(
+          "span",
+          {
+            className: "notion-h-title",
+          },
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: block.properties.title,
+            block,
+          })
+        )
+      );
       let headerBlock = null;
       if (isH1) {
-        headerBlock = /* @__PURE__ */ React28.createElement("h2", {
-          className: classNameStr,
-          "data-id": id
-        }, innerHeader);
+        headerBlock = /* @__PURE__ */ React28.createElement(
+          "h2",
+          {
+            className: classNameStr,
+            "data-id": id,
+          },
+          innerHeader
+        );
       } else if (isH2) {
-        headerBlock = /* @__PURE__ */ React28.createElement("h3", {
-          className: classNameStr,
-          "data-id": id
-        }, innerHeader);
+        headerBlock = /* @__PURE__ */ React28.createElement(
+          "h3",
+          {
+            className: classNameStr,
+            "data-id": id,
+          },
+          innerHeader
+        );
       } else {
-        headerBlock = /* @__PURE__ */ React28.createElement("h4", {
-          className: classNameStr,
-          "data-id": id
-        }, innerHeader);
+        headerBlock = /* @__PURE__ */ React28.createElement(
+          "h4",
+          {
+            className: classNameStr,
+            "data-id": id,
+          },
+          innerHeader
+        );
       }
       if ((_g = block.format) == null ? void 0 : _g.toggleable) {
-        return /* @__PURE__ */ React28.createElement("details", {
-          className: cs("notion-toggle", blockId)
-        }, /* @__PURE__ */ React28.createElement("summary", null, headerBlock), /* @__PURE__ */ React28.createElement("div", null, children));
+        return /* @__PURE__ */ React28.createElement(
+          "details",
+          {
+            className: cs("notion-toggle", blockId),
+          },
+          /* @__PURE__ */ React28.createElement("summary", null, headerBlock),
+          /* @__PURE__ */ React28.createElement("div", null, children)
+        );
       } else {
         return headerBlock;
       }
     }
     case "divider":
       return /* @__PURE__ */ React28.createElement("hr", {
-        className: cs("notion-hr", blockId)
+        className: cs("notion-hr", blockId),
       });
     case "text": {
-      if (!block.properties && !((_h = block.content) == null ? void 0 : _h.length)) {
-        return /* @__PURE__ */ React28.createElement("div", {
-          className: cs("notion-blank", blockId)
-        }, "\xA0");
+      if (
+        !block.properties &&
+        !((_h = block.content) == null ? void 0 : _h.length)
+      ) {
+        return /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: cs("notion-blank", blockId),
+          },
+          "\xA0"
+        );
       }
       const blockColor = (_i = block.format) == null ? void 0 : _i.block_color;
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs(
-          "notion-text",
-          blockColor && `notion-${blockColor}`,
-          blockId
-        )
-      }, ((_j = block.properties) == null ? void 0 : _j.title) && /* @__PURE__ */ React28.createElement(Text, {
-        value: block.properties.title,
-        block
-      }), children && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-text-children"
-      }, children));
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs(
+            "notion-text",
+            blockColor && `notion-${blockColor}`,
+            blockId
+          ),
+        },
+        ((_j = block.properties) == null ? void 0 : _j.title) &&
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: block.properties.title,
+            block,
+          }),
+        children &&
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: "notion-text-children",
+            },
+            children
+          )
+      );
     }
     case "bulleted_list":
     case "numbered_list": {
-      const wrapList = (content, start2) => block.type === "bulleted_list" ? /* @__PURE__ */ React28.createElement("ul", {
-        className: cs("notion-list", "notion-list-disc", blockId)
-      }, content) : /* @__PURE__ */ React28.createElement("ol", {
-        start: start2,
-        className: cs("notion-list", "notion-list-numbered", blockId)
-      }, content);
+      const wrapList = (content, start2) =>
+        block.type === "bulleted_list"
+          ? /* @__PURE__ */ React28.createElement(
+              "ul",
+              {
+                className: cs("notion-list", "notion-list-disc", blockId),
+              },
+              content
+            )
+          : /* @__PURE__ */ React28.createElement(
+              "ol",
+              {
+                start: start2,
+                className: cs("notion-list", "notion-list-numbered", blockId),
+              },
+              content
+            );
       let output = null;
       if (block.content) {
-        output = /* @__PURE__ */ React28.createElement(React28.Fragment, null, block.properties && /* @__PURE__ */ React28.createElement("li", null, /* @__PURE__ */ React28.createElement(Text, {
-          value: block.properties.title,
-          block
-        })), wrapList(children));
+        output = /* @__PURE__ */ React28.createElement(
+          React28.Fragment,
+          null,
+          block.properties &&
+            /* @__PURE__ */ React28.createElement(
+              "li",
+              null,
+              /* @__PURE__ */ React28.createElement(Text, {
+                value: block.properties.title,
+                block,
+              })
+            ),
+          wrapList(children)
+        );
       } else {
-        output = block.properties ? /* @__PURE__ */ React28.createElement("li", null, /* @__PURE__ */ React28.createElement(Text, {
-          value: block.properties.title,
-          block
-        })) : null;
+        output = block.properties
+          ? /* @__PURE__ */ React28.createElement(
+              "li",
+              null,
+              /* @__PURE__ */ React28.createElement(Text, {
+                value: block.properties.title,
+                block,
+              })
+            )
+          : null;
       }
-      const isTopLevel = block.type !== ((_l = (_k = recordMap.block[block.parent_id]) == null ? void 0 : _k.value) == null ? void 0 : _l.type);
+      const isTopLevel =
+        block.type !==
+        ((_l =
+          (_k = recordMap.block[block.parent_id]) == null
+            ? void 0
+            : _k.value) == null
+          ? void 0
+          : _l.type);
       const start = getListNumber(block.id, recordMap.block);
       return isTopLevel ? wrapList(output, start) : output;
     }
     case "embed":
       return /* @__PURE__ */ React28.createElement(components.Embed, {
         blockId,
-        block
+        block,
       });
     case "tweet":
     case "maps":
@@ -2330,110 +3393,150 @@ var Block = (props) => {
     case "video":
       return /* @__PURE__ */ React28.createElement(AssetWrapper, {
         blockId,
-        block
+        block,
       });
     case "drive": {
-      const properties = (_m = block.format) == null ? void 0 : _m.drive_properties;
+      const properties =
+        (_m = block.format) == null ? void 0 : _m.drive_properties;
       if (!properties) {
         if ((_n = block.format) == null ? void 0 : _n.display_source) {
           return /* @__PURE__ */ React28.createElement(AssetWrapper, {
             blockId,
-            block
+            block,
           });
         }
       }
       return /* @__PURE__ */ React28.createElement(GoogleDrive, {
         block,
-        className: blockId
+        className: blockId,
       });
     }
     case "audio":
       return /* @__PURE__ */ React28.createElement(Audio, {
         block,
-        className: blockId
+        className: blockId,
       });
     case "file":
       return /* @__PURE__ */ React28.createElement(File, {
         block,
-        className: blockId
+        className: blockId,
       });
     case "equation":
       return /* @__PURE__ */ React28.createElement(components.Equation, {
         block,
         inline: false,
-        className: blockId
+        className: blockId,
       });
     case "code":
       return /* @__PURE__ */ React28.createElement(components.Code, {
-        block
+        block,
       });
     case "column_list":
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-row", blockId)
-      }, children);
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs("notion-row", blockId),
+        },
+        children
+      );
     case "column": {
       const spacerWidth = `min(32px, 4vw)`;
-      const ratio = ((_o = block.format) == null ? void 0 : _o.column_ratio) || 0.5;
-      const parent = (_p = recordMap.block[block.parent_id]) == null ? void 0 : _p.value;
-      const columns = ((_q = parent == null ? void 0 : parent.content) == null ? void 0 : _q.length) || Math.max(2, Math.ceil(1 / ratio));
-      const width = `calc((100% - (${columns - 1} * ${spacerWidth})) * ${ratio})`;
+      const ratio =
+        ((_o = block.format) == null ? void 0 : _o.column_ratio) || 0.5;
+      const parent =
+        (_p = recordMap.block[block.parent_id]) == null ? void 0 : _p.value;
+      const columns =
+        ((_q = parent == null ? void 0 : parent.content) == null
+          ? void 0
+          : _q.length) || Math.max(2, Math.ceil(1 / ratio));
+      const width = `calc((100% - (${
+        columns - 1
+      } * ${spacerWidth})) * ${ratio})`;
       const style = { width };
-      return /* @__PURE__ */ React28.createElement(React28.Fragment, null, /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-column", blockId),
-        style
-      }, children), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-spacer"
-      }));
+      return /* @__PURE__ */ React28.createElement(
+        React28.Fragment,
+        null,
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: cs("notion-column", blockId),
+            style,
+          },
+          children
+        ),
+        /* @__PURE__ */ React28.createElement("div", {
+          className: "notion-spacer",
+        })
+      );
     }
     case "quote": {
-      if (!block.properties)
-        return null;
+      if (!block.properties) return null;
       const blockColor = (_r = block.format) == null ? void 0 : _r.block_color;
-      return /* @__PURE__ */ React28.createElement("blockquote", {
-        className: cs(
-          "notion-quote",
-          blockColor && `notion-${blockColor}`,
-          blockId
-        )
-      }, /* @__PURE__ */ React28.createElement("div", null, /* @__PURE__ */ React28.createElement(Text, {
-        value: block.properties.title,
-        block
-      })), children);
+      return /* @__PURE__ */ React28.createElement(
+        "blockquote",
+        {
+          className: cs(
+            "notion-quote",
+            blockColor && `notion-${blockColor}`,
+            blockId
+          ),
+        },
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          null,
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: block.properties.title,
+            block,
+          })
+        ),
+        children
+      );
     }
     case "collection_view":
       return /* @__PURE__ */ React28.createElement(components.Collection, {
         block,
         className: blockId,
-        ctx: ctx2
+        ctx: ctx2,
       });
     case "callout":
       if (components.Callout) {
         return /* @__PURE__ */ React28.createElement(components.Callout, {
           block,
-          className: blockId
+          className: blockId,
         });
       } else {
-        return /* @__PURE__ */ React28.createElement("div", {
-          className: cs(
-            "notion-callout",
-            ((_s = block.format) == null ? void 0 : _s.block_color) && `notion-${(_t = block.format) == null ? void 0 : _t.block_color}_co`,
-            blockId
+        return /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: cs(
+              "notion-callout",
+              ((_s = block.format) == null ? void 0 : _s.block_color) &&
+                `notion-${
+                  (_t = block.format) == null ? void 0 : _t.block_color
+                }_co`,
+              blockId
+            ),
+          },
+          /* @__PURE__ */ React28.createElement(PageIcon, {
+            block,
+          }),
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: "notion-callout-text",
+            },
+            /* @__PURE__ */ React28.createElement(Text, {
+              value: (_u = block.properties) == null ? void 0 : _u.title,
+              block,
+            }),
+            children
           )
-        }, /* @__PURE__ */ React28.createElement(PageIcon, {
-          block
-        }), /* @__PURE__ */ React28.createElement("div", {
-          className: "notion-callout-text"
-        }, /* @__PURE__ */ React28.createElement(Text, {
-          value: (_u = block.properties) == null ? void 0 : _u.title,
-          block
-        }), children));
+        );
       }
     case "bookmark": {
-      if (!block.properties)
-        return null;
+      if (!block.properties) return null;
       const link = block.properties.link;
-      if (!link || !((_v = link[0]) == null ? void 0 : _v[0]))
-        return null;
+      if (!link || !((_v = link[0]) == null ? void 0 : _v[0])) return null;
       let title = getTextContent2(block.properties.title);
       if (!title) {
         title = getTextContent2(link);
@@ -2443,167 +3546,318 @@ var Block = (props) => {
           try {
             const url = new URL(title);
             title = url.hostname;
-          } catch (err) {
-          }
+          } catch (err) {}
         }
       }
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-row"
-      }, /* @__PURE__ */ React28.createElement(components.Link, {
-        target: "_blank",
-        rel: "noopener noreferrer",
-        className: cs(
-          "notion-bookmark",
-          ((_w = block.format) == null ? void 0 : _w.block_color) && `notion-${block.format.block_color}`,
-          blockId
-        ),
-        href: link[0][0]
-      }, /* @__PURE__ */ React28.createElement("div", null, title && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-title"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: [[title]],
-        block
-      })), ((_x = block.properties) == null ? void 0 : _x.description) && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-description"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: (_y = block.properties) == null ? void 0 : _y.description,
-        block
-      })), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-link"
-      }, ((_z = block.format) == null ? void 0 : _z.bookmark_icon) && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-link-icon"
-      }, /* @__PURE__ */ React28.createElement(LazyImage, {
-        src: mapImageUrl((_A = block.format) == null ? void 0 : _A.bookmark_icon, block),
-        alt: title
-      })), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-link-text"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: link,
-        block
-      })))), ((_B = block.format) == null ? void 0 : _B.bookmark_cover) && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-image"
-      }, /* @__PURE__ */ React28.createElement(LazyImage, {
-        src: mapImageUrl((_C = block.format) == null ? void 0 : _C.bookmark_cover, block),
-        alt: getTextContent2((_D = block.properties) == null ? void 0 : _D.title),
-        style: {
-          objectFit: "cover"
-        }
-      }))));
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: "notion-row",
+        },
+        /* @__PURE__ */ React28.createElement(
+          components.Link,
+          {
+            target: "_blank",
+            rel: "noopener noreferrer",
+            className: cs(
+              "notion-bookmark",
+              ((_w = block.format) == null ? void 0 : _w.block_color) &&
+                `notion-${block.format.block_color}`,
+              blockId
+            ),
+            href: link[0][0],
+          },
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            null,
+            title &&
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-bookmark-title",
+                },
+                /* @__PURE__ */ React28.createElement(Text, {
+                  value: [[title]],
+                  block,
+                })
+              ),
+            ((_x = block.properties) == null ? void 0 : _x.description) &&
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-bookmark-description",
+                },
+                /* @__PURE__ */ React28.createElement(Text, {
+                  value:
+                    (_y = block.properties) == null ? void 0 : _y.description,
+                  block,
+                })
+              ),
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-bookmark-link",
+              },
+              ((_z = block.format) == null ? void 0 : _z.bookmark_icon) &&
+                /* @__PURE__ */ React28.createElement(
+                  "div",
+                  {
+                    className: "notion-bookmark-link-icon",
+                  },
+                  /* @__PURE__ */ React28.createElement(LazyImage, {
+                    src: mapImageUrl(
+                      (_A = block.format) == null ? void 0 : _A.bookmark_icon,
+                      block
+                    ),
+                    alt: title,
+                  })
+                ),
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-bookmark-link-text",
+                },
+                /* @__PURE__ */ React28.createElement(Text, {
+                  value: link,
+                  block,
+                })
+              )
+            )
+          ),
+          ((_B = block.format) == null ? void 0 : _B.bookmark_cover) &&
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-bookmark-image",
+              },
+              /* @__PURE__ */ React28.createElement(LazyImage, {
+                src: mapImageUrl(
+                  (_C = block.format) == null ? void 0 : _C.bookmark_cover,
+                  block
+                ),
+                alt: getTextContent2(
+                  (_D = block.properties) == null ? void 0 : _D.title
+                ),
+                style: {
+                  objectFit: "cover",
+                },
+              })
+            )
+        )
+      );
     }
     case "toggle":
-      return /* @__PURE__ */ React28.createElement("details", {
-        className: cs("notion-toggle", blockId)
-      }, /* @__PURE__ */ React28.createElement("summary", null, /* @__PURE__ */ React28.createElement(Text, {
-        value: (_E = block.properties) == null ? void 0 : _E.title,
-        block
-      })), /* @__PURE__ */ React28.createElement("div", null, children));
+      return /* @__PURE__ */ React28.createElement(
+        "details",
+        {
+          className: cs("notion-toggle", blockId),
+        },
+        /* @__PURE__ */ React28.createElement(
+          "summary",
+          null,
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: (_E = block.properties) == null ? void 0 : _E.title,
+            block,
+          })
+        ),
+        /* @__PURE__ */ React28.createElement("div", null, children)
+      );
     case "table_of_contents": {
       const page = getBlockParentPage2(block, recordMap);
-      if (!page)
-        return null;
+      if (!page) return null;
       const toc = getPageTableOfContents(page, recordMap);
       const blockColor = (_F = block.format) == null ? void 0 : _F.block_color;
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs(
-          "notion-table-of-contents",
-          blockColor && `notion-${blockColor}`,
-          blockId
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs(
+            "notion-table-of-contents",
+            blockColor && `notion-${blockColor}`,
+            blockId
+          ),
+        },
+        toc.map((tocItem) =>
+          /* @__PURE__ */ React28.createElement(
+            "a",
+            {
+              key: tocItem.id,
+              href: `#${uuidToId2(tocItem.id)}`,
+              className: "notion-table-of-contents-item",
+            },
+            /* @__PURE__ */ React28.createElement(
+              "span",
+              {
+                className: "notion-table-of-contents-item-body",
+                style: {
+                  display: "inline-block",
+                  marginLeft: tocItem.indentLevel * 24,
+                },
+              },
+              tocItem.text
+            )
+          )
         )
-      }, toc.map((tocItem) => /* @__PURE__ */ React28.createElement("a", {
-        key: tocItem.id,
-        href: `#${uuidToId2(tocItem.id)}`,
-        className: "notion-table-of-contents-item"
-      }, /* @__PURE__ */ React28.createElement("span", {
-        className: "notion-table-of-contents-item-body",
-        style: {
-          display: "inline-block",
-          marginLeft: tocItem.indentLevel * 24
-        }
-      }, tocItem.text))));
+      );
     }
     case "to_do": {
-      const isChecked = ((_I = (_H = (_G = block.properties) == null ? void 0 : _G.checked) == null ? void 0 : _H[0]) == null ? void 0 : _I[0]) === "Yes";
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-to-do", blockId)
-      }, /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-to-do-item"
-      }, /* @__PURE__ */ React28.createElement(components.Checkbox, {
-        blockId,
-        isChecked
-      }), /* @__PURE__ */ React28.createElement("div", {
-        className: cs(
-          "notion-to-do-body",
-          isChecked && `notion-to-do-checked`
+      const isChecked =
+        ((_I =
+          (_H = (_G = block.properties) == null ? void 0 : _G.checked) == null
+            ? void 0
+            : _H[0]) == null
+          ? void 0
+          : _I[0]) === "Yes";
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs("notion-to-do", blockId),
+        },
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: "notion-to-do-item",
+          },
+          /* @__PURE__ */ React28.createElement(components.Checkbox, {
+            blockId,
+            isChecked,
+          }),
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: cs(
+                "notion-to-do-body",
+                isChecked && `notion-to-do-checked`
+              ),
+            },
+            /* @__PURE__ */ React28.createElement(Text, {
+              value: (_J = block.properties) == null ? void 0 : _J.title,
+              block,
+            })
+          )
+        ),
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: "notion-to-do-children",
+          },
+          children
         )
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: (_J = block.properties) == null ? void 0 : _J.title,
-        block
-      }))), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-to-do-children"
-      }, children));
+      );
     }
     case "transclusion_container":
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-sync-block", blockId)
-      }, children);
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs("notion-sync-block", blockId),
+        },
+        children
+      );
     case "transclusion_reference":
-      return /* @__PURE__ */ React28.createElement(SyncPointerBlock, __spreadValues({
-        block,
-        level: level + 1
-      }, props));
+      return /* @__PURE__ */ React28.createElement(
+        SyncPointerBlock,
+        __spreadValues(
+          {
+            block,
+            level: level + 1,
+          },
+          props
+        )
+      );
     case "alias": {
-      const blockPointerId = (_L = (_K = block == null ? void 0 : block.format) == null ? void 0 : _K.alias_pointer) == null ? void 0 : _L.id;
-      const linkedBlock = (_M = recordMap.block[blockPointerId]) == null ? void 0 : _M.value;
+      const blockPointerId =
+        (_L =
+          (_K = block == null ? void 0 : block.format) == null
+            ? void 0
+            : _K.alias_pointer) == null
+          ? void 0
+          : _L.id;
+      const linkedBlock =
+        (_M = recordMap.block[blockPointerId]) == null ? void 0 : _M.value;
       if (!linkedBlock) {
         console.log('"alias" missing block', blockPointerId);
         return null;
       }
-      return /* @__PURE__ */ React28.createElement(components.PageLink, {
-        className: cs("notion-page-link", blockPointerId),
-        href: mapPageUrl(blockPointerId)
-      }, /* @__PURE__ */ React28.createElement(PageTitle, {
-        block: linkedBlock
-      }));
+      return /* @__PURE__ */ React28.createElement(
+        components.PageLink,
+        {
+          className: cs("notion-page-link", blockPointerId),
+          href: mapPageUrl(blockPointerId),
+        },
+        /* @__PURE__ */ React28.createElement(PageTitle, {
+          block: linkedBlock,
+        })
+      );
     }
     case "table":
-      return /* @__PURE__ */ React28.createElement("table", {
-        className: cs("notion-simple-table", blockId)
-      }, /* @__PURE__ */ React28.createElement("tbody", null, children));
+      return /* @__PURE__ */ React28.createElement(
+        "table",
+        {
+          className: cs("notion-simple-table", blockId),
+        },
+        /* @__PURE__ */ React28.createElement("tbody", null, children)
+      );
     case "table_row": {
-      const tableBlock = (_N = recordMap.block[block.parent_id]) == null ? void 0 : _N.value;
-      const order = (_O = tableBlock.format) == null ? void 0 : _O.table_block_column_order;
-      const formatMap = (_P = tableBlock.format) == null ? void 0 : _P.table_block_column_format;
-      const backgroundColor = (_Q = block.format) == null ? void 0 : _Q.block_color;
+      const tableBlock =
+        (_N = recordMap.block[block.parent_id]) == null ? void 0 : _N.value;
+      const order =
+        (_O = tableBlock.format) == null ? void 0 : _O.table_block_column_order;
+      const formatMap =
+        (_P = tableBlock.format) == null
+          ? void 0
+          : _P.table_block_column_format;
+      const backgroundColor =
+        (_Q = block.format) == null ? void 0 : _Q.block_color;
       if (!tableBlock || !order) {
         return null;
       }
-      return /* @__PURE__ */ React28.createElement("tr", {
-        className: cs(
-          "notion-simple-table-row",
-          backgroundColor && `notion-${backgroundColor}`,
-          blockId
-        )
-      }, order.map((column) => {
-        var _a2, _b2, _c2;
-        const color = (_a2 = formatMap == null ? void 0 : formatMap[column]) == null ? void 0 : _a2.color;
-        return /* @__PURE__ */ React28.createElement("td", {
-          key: column,
-          className: color ? `notion-${color}` : "",
-          style: {
-            width: ((_b2 = formatMap == null ? void 0 : formatMap[column]) == null ? void 0 : _b2.width) || 120
-          }
-        }, /* @__PURE__ */ React28.createElement("div", {
-          className: "notion-simple-table-cell"
-        }, /* @__PURE__ */ React28.createElement(Text, {
-          value: ((_c2 = block.properties) == null ? void 0 : _c2[column]) || [["\u3164"]],
-          block
-        })));
-      }));
+      return /* @__PURE__ */ React28.createElement(
+        "tr",
+        {
+          className: cs(
+            "notion-simple-table-row",
+            backgroundColor && `notion-${backgroundColor}`,
+            blockId
+          ),
+        },
+        order.map((column) => {
+          var _a2, _b2, _c2;
+          const color =
+            (_a2 = formatMap == null ? void 0 : formatMap[column]) == null
+              ? void 0
+              : _a2.color;
+          return /* @__PURE__ */ React28.createElement(
+            "td",
+            {
+              key: column,
+              className: color ? `notion-${color}` : "",
+              style: {
+                width:
+                  ((_b2 = formatMap == null ? void 0 : formatMap[column]) ==
+                  null
+                    ? void 0
+                    : _b2.width) || 120,
+              },
+            },
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-simple-table-cell",
+              },
+              /* @__PURE__ */ React28.createElement(Text, {
+                value: ((_c2 = block.properties) == null
+                  ? void 0
+                  : _c2[column]) || [["\u3164"]],
+                block,
+              })
+            )
+          );
+        })
+      );
     }
     case "external_object_instance":
       return /* @__PURE__ */ React28.createElement(EOI, {
         block,
-        className: blockId
+        className: blockId,
       });
     default:
       if (true) {
@@ -2619,88 +3873,101 @@ var Block = (props) => {
 
 // src/renderer.tsx
 var NotionRenderer = (_a) => {
-  var _b = _a, {
-    components,
-    recordMap,
-    mapPageUrl,
-    mapImageUrl,
-    searchNotion,
-    isShowingSearch,
-    onHideSearch,
-    fullPage,
-    rootPageId,
-    rootDomain,
-    darkMode,
-    previewImages,
-    forceCustomImages,
-    showCollectionViewDropdown,
-    linkTableTitleProperties,
-    isLinkCollectionToUrlProperty,
-    isImageZoomable = true,
-    showTableOfContents,
-    minTableOfContentsItems,
-    defaultPageIcon,
-    defaultPageCover,
-    defaultPageCoverPosition
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "recordMap",
-    "mapPageUrl",
-    "mapImageUrl",
-    "searchNotion",
-    "isShowingSearch",
-    "onHideSearch",
-    "fullPage",
-    "rootPageId",
-    "rootDomain",
-    "darkMode",
-    "previewImages",
-    "forceCustomImages",
-    "showCollectionViewDropdown",
-    "linkTableTitleProperties",
-    "isLinkCollectionToUrlProperty",
-    "isImageZoomable",
-    "showTableOfContents",
-    "minTableOfContentsItems",
-    "defaultPageIcon",
-    "defaultPageCover",
-    "defaultPageCoverPosition"
-  ]);
+  var _b = _a,
+    {
+      components,
+      recordMap,
+      mapPageUrl,
+      mapImageUrl,
+      searchNotion,
+      isShowingSearch,
+      onHideSearch,
+      fullPage,
+      rootPageId,
+      rootDomain,
+      darkMode,
+      previewImages,
+      forceCustomImages,
+      showCollectionViewDropdown,
+      linkTableTitleProperties,
+      isLinkCollectionToUrlProperty,
+      isImageZoomable = true,
+      showTableOfContents,
+      minTableOfContentsItems,
+      defaultPageIcon,
+      defaultPageCover,
+      defaultPageCoverPosition,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "recordMap",
+      "mapPageUrl",
+      "mapImageUrl",
+      "searchNotion",
+      "isShowingSearch",
+      "onHideSearch",
+      "fullPage",
+      "rootPageId",
+      "rootDomain",
+      "darkMode",
+      "previewImages",
+      "forceCustomImages",
+      "showCollectionViewDropdown",
+      "linkTableTitleProperties",
+      "isLinkCollectionToUrlProperty",
+      "isImageZoomable",
+      "showTableOfContents",
+      "minTableOfContentsItems",
+      "defaultPageIcon",
+      "defaultPageCover",
+      "defaultPageCoverPosition",
+    ]);
   const zoom = React29.useMemo(
-    () => typeof window !== "undefined" && mediumZoom({
-      background: "rgba(0, 0, 0, 0.8)",
-      minZoomScale: 2,
-      margin: getMediumZoomMargin()
-    }),
+    () =>
+      typeof window !== "undefined" &&
+      mediumZoom({
+        background: "rgba(0, 0, 0, 0.8)",
+        minZoomScale: 2,
+        margin: getMediumZoomMargin(),
+      }),
     []
   );
-  return /* @__PURE__ */ React29.createElement(NotionContextProvider, {
-    components,
-    recordMap,
-    mapPageUrl,
-    mapImageUrl,
-    searchNotion,
-    isShowingSearch,
-    onHideSearch,
-    fullPage,
-    rootPageId,
-    rootDomain,
-    darkMode,
-    previewImages,
-    forceCustomImages,
-    showCollectionViewDropdown,
-    linkTableTitleProperties,
-    isLinkCollectionToUrlProperty,
-    showTableOfContents,
-    minTableOfContentsItems,
-    defaultPageIcon,
-    defaultPageCover,
-    defaultPageCoverPosition,
-    zoom: isImageZoomable ? zoom : null
-  }, /* @__PURE__ */ React29.createElement(NotionBlockRenderer, __spreadValues({}, rest)));
+  return /* @__PURE__ */ React29.createElement(
+    NotionContextProvider,
+    {
+      components,
+      recordMap,
+      mapPageUrl,
+      mapImageUrl,
+      searchNotion,
+      isShowingSearch,
+      onHideSearch,
+      fullPage,
+      rootPageId,
+      rootDomain,
+      darkMode,
+      previewImages,
+      forceCustomImages,
+      showCollectionViewDropdown,
+      linkTableTitleProperties,
+      isLinkCollectionToUrlProperty,
+      showTableOfContents,
+      minTableOfContentsItems,
+      defaultPageIcon,
+      defaultPageCover,
+      defaultPageCoverPosition,
+      zoom: isImageZoomable ? zoom : null,
+    },
+    /* @__PURE__ */ React29.createElement(
+      NotionBlockRenderer,
+      __spreadValues({}, rest)
+    )
+  );
 };
 var NotionBlockRenderer = (_a) => {
-  var _b = _a, { level = 0, blockId } = _b, props = __objRest(_b, ["level", "blockId"]);
+  var _b = _a,
+    { level = 0, blockId } = _b,
+    props = __objRest(_b, ["level", "blockId"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
   const id = blockId || Object.keys(recordMap.block)[0];
@@ -2711,15 +3978,32 @@ var NotionBlockRenderer = (_a) => {
     }
     return null;
   }
-  return /* @__PURE__ */ React29.createElement(Block, __spreadValues({
-    key: id,
-    level,
-    block
-  }, props), (_b2 = block == null ? void 0 : block.content) == null ? void 0 : _b2.map((contentBlockId) => /* @__PURE__ */ React29.createElement(NotionBlockRenderer, __spreadValues({
-    key: contentBlockId,
-    blockId: contentBlockId,
-    level: level + 1
-  }, props))));
+  return /* @__PURE__ */ React29.createElement(
+    Block,
+    __spreadValues(
+      {
+        key: id,
+        level,
+        block,
+      },
+      props
+    ),
+    (_b2 = block == null ? void 0 : block.content) == null
+      ? void 0
+      : _b2.map((contentBlockId) =>
+          /* @__PURE__ */ React29.createElement(
+            NotionBlockRenderer,
+            __spreadValues(
+              {
+                key: contentBlockId,
+                blockId: contentBlockId,
+                level: level + 1,
+              },
+              props
+            )
+          )
+        )
+  );
 };
 function getMediumZoomMargin() {
   const width = window.innerWidth;
@@ -2758,6 +4042,6 @@ export {
   getYoutubeId,
   isBrowser,
   isUrl,
-  useNotionContext
+  useNotionContext,
 };
 //# sourceMappingURL=index.js.map
diff --git a/node_modules/react-notion-x/build/dev/third-party/code.js b/node_modules/react-notion-x/build/dev/third-party/code.js
index d3bd162..31509f2 100644
--- a/node_modules/react-notion-x/build/dev/third-party/code.js
+++ b/node_modules/react-notion-x/build/dev/third-party/code.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -104,8 +126,7 @@ var require_clipboard_copy = __commonJS({
           selection.removeAllRanges();
           window.document.body.removeChild(span);
         }
-        if (!success)
-          throw makeError();
+        if (!success) throw makeError();
       });
     }
     function clipboardCopy(text) {
@@ -121,7 +142,7 @@ var require_clipboard_copy = __commonJS({
         }
       });
     }
-  }
+  },
 });
 
 // ../../node_modules/lodash.throttle/index.js
@@ -135,18 +156,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -154,11 +186,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -170,12 +205,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -203,7 +248,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -226,7 +272,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle2(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -235,9 +282,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -248,7 +295,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -258,7 +308,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -266,10 +317,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle2;
-  }
+  },
 });
 
 // src/third-party/code.tsx
@@ -314,17 +369,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -358,7 +421,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -366,13 +429,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -382,12 +445,23 @@ import * as React2 from "react";
 // src/icons/type-github.tsx
 import * as React from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -395,18 +469,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React2.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React2.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -421,24 +510,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React2.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React2.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React2.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React2.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React2.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React2.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React2.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React2.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React2.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/graceful-image.tsx
@@ -448,7 +571,10 @@ var GracefulImage = (props) => {
   if (isBrowser) {
     return /* @__PURE__ */ React3.createElement(Img, __spreadValues({}, props));
   } else {
-    return /* @__PURE__ */ React3.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React3.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
@@ -457,32 +583,43 @@ import * as React4 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React4.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React4.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -492,18 +629,18 @@ var LazyImage = (_a) => {
   const attachZoom = React4.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React4.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React4.createElement(components.Image, {
         src,
@@ -515,51 +652,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React4.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React4.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React4.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React4.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React4.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React4.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React4.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React4.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React4.createElement(components.Image, {
@@ -570,18 +722,24 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React4.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React4.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
@@ -592,34 +750,53 @@ import { getBlockIcon, getBlockTitle } from "notion-utils";
 // src/icons/default-page-icon.tsx
 import * as React5 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React5.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React5.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React5.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React5.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -627,41 +804,53 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React6.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React6.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React6.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React6.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React6.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React6.memo(PageIconImpl);
 
@@ -669,45 +858,73 @@ var PageIcon = React6.memo(PageIconImpl);
 import * as React7 from "react";
 import { getBlockTitle as getBlockTitle2 } from "notion-utils";
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle2(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React7.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React7.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React7.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React7.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React7.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React7.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React7.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React7.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
+  return /* @__PURE__ */ React7.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React7.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React7.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React7.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
 };
 var PageTitle = React7.memo(PageTitleImpl);
 
@@ -719,84 +936,144 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React8 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React8.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React8.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React8.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React8.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React11 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle3 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle3,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React9 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React9.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React9.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React9.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React10 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React10.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React10.createElement("defs", null, /* @__PURE__ */ React10.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React10.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React10.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React10.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React10.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React10.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React10.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React10.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React10.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React10.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React10.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React10.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React10.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React10.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React10.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React10.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React10.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React10.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React10.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React10.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/search-dialog.tsx
@@ -807,7 +1084,7 @@ var SearchDialog = class extends React11.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -818,7 +1095,11 @@ var SearchDialog = class extends React11.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -827,67 +1108,81 @@ var SearchDialog = class extends React11.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle3(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle3(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React11.createRef();
   }
   componentDidMount() {
@@ -898,87 +1193,189 @@ var SearchDialog = class extends React11.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React11.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React11.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React11.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React11.createElement(SearchIcon, null)), /* @__PURE__ */ React11.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React11.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React11.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React11.createElement(React11.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React11.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React11.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React11.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React11.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React11.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React11.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React11.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React11.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React11.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React11.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React11.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React11.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React11.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React11.createElement(
+                React11.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React11.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React11.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React11.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React11.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React11.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React11.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React11.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React11.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React11.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React11.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React11.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React11.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React11.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React11.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React11.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React11.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React11.createElement("div", null, /* @__PURE__ */ React11.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React11.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React11.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React11.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React12.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React12.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React12.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React12.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React12.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React12.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React12.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React12.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -989,38 +1386,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React12.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React12.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React12.createElement(React12.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React12.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React12.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React12.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React12.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React12.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React12.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React12.createElement(
+        React12.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React12.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React12.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React12.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React12.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React12.useState(isShowingSearch);
   React12.useEffect(() => {
@@ -1046,20 +1476,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, hasSearch && /* @__PURE__ */ React12.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React12.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React12.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React12.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React12.createElement(
+    React12.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React12.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React12.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React12.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React12.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/components/asset.tsx
@@ -1069,9 +1517,11 @@ import { getTextContent } from "notion-utils";
 // src/components/lite-youtube-embed.tsx
 import * as React13 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -1083,7 +1533,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React13.useMemo(
@@ -1095,64 +1545,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React13.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React13.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React13.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React13.useState(false);
   const warmConnections = React13.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React13.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React13.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React13.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React13.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React13.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React13.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React13.createElement(
+    React13.Fragment,
+    null,
+    /* @__PURE__ */ React13.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React13.createElement(
+        React13.Fragment,
+        null,
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React13.createElement(
+        React13.Fragment,
+        null,
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React13.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React13.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React13.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -1169,7 +1646,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -1184,7 +1661,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -1194,7 +1671,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -1255,28 +1732,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React14.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React14.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React14.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React14.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -1286,29 +1772,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React14.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React14.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React14.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -1323,7 +1834,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React14.createElement("iframe", {
@@ -1334,29 +1845,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React14.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React14.createElement(
+    React14.Fragment,
+    null,
+    /* @__PURE__ */ React14.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -1367,7 +1896,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -1376,32 +1914,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React15.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React15.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React15.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React15.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React15.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React15.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React15.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React15.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React15.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React15.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -1427,11 +1994,18 @@ import * as React17 from "react";
 // src/icons/check.tsx
 import * as React16 from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React16.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React16.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React16.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React16.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -1439,17 +2013,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React17.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React17.createElement(check_default, null));
+    content = /* @__PURE__ */ React17.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React17.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React17.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React17.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React17.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/next.tsx
@@ -1457,79 +2039,89 @@ import * as React18 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React18.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React18.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React18.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React18.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React18.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React18.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React18.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React19.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React19.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React19.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React19.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React19.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React19.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React19.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React19.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyComponent = (name) => () => {
   console.warn(
@@ -1567,7 +2159,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -1576,7 +2168,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -1596,23 +2188,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React19.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -1634,17 +2228,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React19.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React19.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React19.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -1653,181 +2259,278 @@ var useNotionContext = () => {
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React20.createElement(React20.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React20.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React20.createElement(React20.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React20.createElement(
+    React20.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React20.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React20.createElement(
+                React20.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React20.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React20.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React20.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React20.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React20.createElement(
+                      GracefulImage,
+                      {
+                        className: "notion-user",
+                        src: mapImageUrl(user.profile_photo, block),
+                        alt: name,
+                      }
+                    );
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React20.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React20.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React20.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React20.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React20.createElement(
+                  "b",
+                  null,
+                  element
+                );
+              case "i":
+                return /* @__PURE__ */ React20.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React20.createElement(
+                  "s",
+                  null,
+                  element
+                );
+              case "_":
+                return /* @__PURE__ */ React20.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React20.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId2(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React20.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React20.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React20.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React20.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React20.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React20.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React20.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React20.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React20.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React20.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React20.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React20.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React20.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId2(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React20.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React20.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React20.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React20.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React20.createElement(React20.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React20.createElement(React20.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React20.createElement(React20.Fragment, null, text));
+          return /* @__PURE__ */ React20.createElement(
+            React20.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/icons/copy.tsx
 import * as React21 from "react";
 function SvgCopy(props) {
-  return /* @__PURE__ */ React21.createElement("svg", __spreadValues({
-    fill: "currentColor",
-    viewBox: "0 0 16 16",
-    width: "1em",
-    version: "1.1"
-  }, props), /* @__PURE__ */ React21.createElement("path", {
-    fillRule: "evenodd",
-    d: "M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"
-  }), /* @__PURE__ */ React21.createElement("path", {
-    fillRule: "evenodd",
-    d: "M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"
-  }));
+  return /* @__PURE__ */ React21.createElement(
+    "svg",
+    __spreadValues(
+      {
+        fill: "currentColor",
+        viewBox: "0 0 16 16",
+        width: "1em",
+        version: "1.1",
+      },
+      props
+    ),
+    /* @__PURE__ */ React21.createElement("path", {
+      fillRule: "evenodd",
+      d: "M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z",
+    }),
+    /* @__PURE__ */ React21.createElement("path", {
+      fillRule: "evenodd",
+      d: "M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z",
+    })
+  );
 }
 var copy_default = SvgCopy;
 
@@ -1838,7 +2541,14 @@ var Code = ({ block, defaultLanguage = "typescript", className }) => {
   const copyTimeout = React22.useRef();
   const { recordMap } = useNotionContext();
   const content = getBlockTitle4(block, recordMap);
-  const language = (((_c = (_b = (_a = block.properties) == null ? void 0 : _a.language) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]) || defaultLanguage).toLowerCase();
+  const language = (
+    ((_c =
+      (_b = (_a = block.properties) == null ? void 0 : _a.language) == null
+        ? void 0
+        : _b[0]) == null
+      ? void 0
+      : _c[0]) || defaultLanguage
+  ).toLowerCase();
   const caption = block.properties.caption;
   const codeRef = React22.useRef();
   React22.useEffect(() => {
@@ -1861,28 +2571,63 @@ var Code = ({ block, defaultLanguage = "typescript", className }) => {
       setIsCopied(false);
     }, 1200);
   }, [content, copyTimeout]);
-  const copyButton = /* @__PURE__ */ React22.createElement("div", {
-    className: "notion-code-copy-button",
-    onClick: onClickCopyToClipboard
-  }, /* @__PURE__ */ React22.createElement(copy_default, null));
-  return /* @__PURE__ */ React22.createElement(React22.Fragment, null, /* @__PURE__ */ React22.createElement("pre", {
-    className: cs("notion-code", className)
-  }, /* @__PURE__ */ React22.createElement("div", {
-    className: "notion-code-copy"
-  }, copyButton, isCopied && /* @__PURE__ */ React22.createElement("div", {
-    className: "notion-code-copy-tooltip"
-  }, /* @__PURE__ */ React22.createElement("div", null, isCopied ? "Copied" : "Copy"))), /* @__PURE__ */ React22.createElement("code", {
-    className: `language-${language}`,
-    ref: codeRef
-  }, content)), caption && /* @__PURE__ */ React22.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React22.createElement(Text, {
-    value: caption,
-    block
-  })));
-};
-export {
-  Code
+  const copyButton = /* @__PURE__ */ React22.createElement(
+    "div",
+    {
+      className: "notion-code-copy-button",
+      onClick: onClickCopyToClipboard,
+    },
+    /* @__PURE__ */ React22.createElement(copy_default, null)
+  );
+  return /* @__PURE__ */ React22.createElement(
+    React22.Fragment,
+    null,
+    /* @__PURE__ */ React22.createElement(
+      "pre",
+      {
+        className: cs("notion-code", className),
+      },
+      /* @__PURE__ */ React22.createElement(
+        "div",
+        {
+          className: "notion-code-copy",
+        },
+        copyButton,
+        isCopied &&
+          /* @__PURE__ */ React22.createElement(
+            "div",
+            {
+              className: "notion-code-copy-tooltip",
+            },
+            /* @__PURE__ */ React22.createElement(
+              "div",
+              null,
+              isCopied ? "Copied" : "Copy"
+            )
+          )
+      ),
+      /* @__PURE__ */ React22.createElement(
+        "code",
+        {
+          className: `language-${language}`,
+          ref: codeRef,
+        },
+        content
+      )
+    ),
+    caption &&
+      /* @__PURE__ */ React22.createElement(
+        "figcaption",
+        {
+          className: "notion-asset-caption",
+        },
+        /* @__PURE__ */ React22.createElement(Text, {
+          value: caption,
+          block,
+        })
+      )
+  );
 };
+export { Code };
 /*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
 //# sourceMappingURL=code.js.map
diff --git a/node_modules/react-notion-x/build/dev/third-party/collection.js b/node_modules/react-notion-x/build/dev/third-party/collection.js
index 40e919c..191c467 100644
--- a/node_modules/react-notion-x/build/dev/third-party/collection.js
+++ b/node_modules/react-notion-x/build/dev/third-party/collection.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -80,18 +102,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -99,11 +132,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -115,12 +151,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -148,7 +194,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -171,7 +218,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle2(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -180,9 +228,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -193,7 +241,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -203,7 +254,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -211,10 +263,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle2;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/requiredArgs/index.js
@@ -222,16 +278,23 @@ var require_requiredArgs = __commonJS({
   "../../node_modules/date-fns/_lib/requiredArgs/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = requiredArgs;
     function requiredArgs(required, args) {
       if (args.length < required) {
-        throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
+        throw new TypeError(
+          required +
+            " argument" +
+            (required > 1 ? "s" : "") +
+            " required, but only " +
+            args.length +
+            " present"
+        );
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/isDate/index.js
@@ -239,7 +302,7 @@ var require_isDate = __commonJS({
   "../../node_modules/date-fns/isDate/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = isDate;
     var _index = _interopRequireDefault(require_requiredArgs());
@@ -248,10 +311,14 @@ var require_isDate = __commonJS({
     }
     function isDate(value) {
       (0, _index.default)(1, arguments);
-      return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
+      return (
+        value instanceof Date ||
+        (typeof value === "object" &&
+          Object.prototype.toString.call(value) === "[object Date]")
+      );
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/toDate/index.js
@@ -259,7 +326,7 @@ var require_toDate = __commonJS({
   "../../node_modules/date-fns/toDate/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = toDate;
     var _index = _interopRequireDefault(require_requiredArgs());
@@ -269,20 +336,28 @@ var require_toDate = __commonJS({
     function toDate(argument) {
       (0, _index.default)(1, arguments);
       var argStr = Object.prototype.toString.call(argument);
-      if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
+      if (
+        argument instanceof Date ||
+        (typeof argument === "object" && argStr === "[object Date]")
+      ) {
         return new Date(argument.getTime());
       } else if (typeof argument === "number" || argStr === "[object Number]") {
         return new Date(argument);
       } else {
-        if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
-          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
+        if (
+          (typeof argument === "string" || argStr === "[object String]") &&
+          typeof console !== "undefined"
+        ) {
+          console.warn(
+            "Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"
+          );
           console.warn(new Error().stack);
         }
         return new Date(NaN);
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/isValid/index.js
@@ -290,7 +365,7 @@ var require_isValid = __commonJS({
   "../../node_modules/date-fns/isValid/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = isValid;
     var _index = _interopRequireDefault(require_isDate());
@@ -308,81 +383,84 @@ var require_isValid = __commonJS({
       return !isNaN(Number(date));
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
 var require_formatDistance = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var formatDistanceLocale = {
       lessThanXSeconds: {
         one: "less than a second",
-        other: "less than {{count}} seconds"
+        other: "less than {{count}} seconds",
       },
       xSeconds: {
         one: "1 second",
-        other: "{{count}} seconds"
+        other: "{{count}} seconds",
       },
       halfAMinute: "half a minute",
       lessThanXMinutes: {
         one: "less than a minute",
-        other: "less than {{count}} minutes"
+        other: "less than {{count}} minutes",
       },
       xMinutes: {
         one: "1 minute",
-        other: "{{count}} minutes"
+        other: "{{count}} minutes",
       },
       aboutXHours: {
         one: "about 1 hour",
-        other: "about {{count}} hours"
+        other: "about {{count}} hours",
       },
       xHours: {
         one: "1 hour",
-        other: "{{count}} hours"
+        other: "{{count}} hours",
       },
       xDays: {
         one: "1 day",
-        other: "{{count}} days"
+        other: "{{count}} days",
       },
       aboutXWeeks: {
         one: "about 1 week",
-        other: "about {{count}} weeks"
+        other: "about {{count}} weeks",
       },
       xWeeks: {
         one: "1 week",
-        other: "{{count}} weeks"
+        other: "{{count}} weeks",
       },
       aboutXMonths: {
         one: "about 1 month",
-        other: "about {{count}} months"
+        other: "about {{count}} months",
       },
       xMonths: {
         one: "1 month",
-        other: "{{count}} months"
+        other: "{{count}} months",
       },
       aboutXYears: {
         one: "about 1 year",
-        other: "about {{count}} years"
+        other: "about {{count}} years",
       },
       xYears: {
         one: "1 year",
-        other: "{{count}} years"
+        other: "{{count}} years",
       },
       overXYears: {
         one: "over 1 year",
-        other: "over {{count}} years"
+        other: "over {{count}} years",
       },
       almostXYears: {
         one: "almost 1 year",
-        other: "almost {{count}} years"
-      }
+        other: "almost {{count}} years",
+      },
     };
-    var formatDistance = function(token, count, options) {
+    var formatDistance = function (token, count, options) {
       var result;
       var tokenValue = formatDistanceLocale[token];
       if (typeof tokenValue === "string") {
@@ -404,35 +482,42 @@ var require_formatDistance = __commonJS({
     var _default = formatDistance;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
 var require_buildFormatLongFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildFormatLongFn;
     function buildFormatLongFn(args) {
-      return function() {
-        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
+      return function () {
+        var options =
+          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
         var width = options.width ? String(options.width) : args.defaultWidth;
         var format4 = args.formats[width] || args.formats[args.defaultWidth];
         return format4;
       };
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
 var require_formatLong = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_buildFormatLongFn());
@@ -443,46 +528,49 @@ var require_formatLong = __commonJS({
       full: "EEEE, MMMM do, y",
       long: "MMMM do, y",
       medium: "MMM d, y",
-      short: "MM/dd/yyyy"
+      short: "MM/dd/yyyy",
     };
     var timeFormats = {
       full: "h:mm:ss a zzzz",
       long: "h:mm:ss a z",
       medium: "h:mm:ss a",
-      short: "h:mm a"
+      short: "h:mm a",
     };
     var dateTimeFormats = {
       full: "{{date}} 'at' {{time}}",
       long: "{{date}} 'at' {{time}}",
       medium: "{{date}}, {{time}}",
-      short: "{{date}}, {{time}}"
+      short: "{{date}}, {{time}}",
     };
     var formatLong = {
       date: (0, _index.default)({
         formats: dateFormats,
-        defaultWidth: "full"
+        defaultWidth: "full",
       }),
       time: (0, _index.default)({
         formats: timeFormats,
-        defaultWidth: "full"
+        defaultWidth: "full",
       }),
       dateTime: (0, _index.default)({
         formats: dateTimeFormats,
-        defaultWidth: "full"
-      })
+        defaultWidth: "full",
+      }),
     };
     var _default = formatLong;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
 var require_formatRelative = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var formatRelativeLocale = {
@@ -491,53 +579,64 @@ var require_formatRelative = __commonJS({
       today: "'today at' p",
       tomorrow: "'tomorrow at' p",
       nextWeek: "eeee 'at' p",
-      other: "P"
+      other: "P",
     };
-    var formatRelative = function(token, _date, _baseDate, _options) {
+    var formatRelative = function (token, _date, _baseDate, _options) {
       return formatRelativeLocale[token];
     };
     var _default = formatRelative;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
 var require_buildLocalizeFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildLocalizeFn;
     function buildLocalizeFn(args) {
-      return function(dirtyIndex, dirtyOptions) {
+      return function (dirtyIndex, dirtyOptions) {
         var options = dirtyOptions || {};
         var context = options.context ? String(options.context) : "standalone";
         var valuesArray;
         if (context === "formatting" && args.formattingValues) {
           var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
           var width = options.width ? String(options.width) : defaultWidth;
-          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
+          valuesArray =
+            args.formattingValues[width] || args.formattingValues[defaultWidth];
         } else {
           var _defaultWidth = args.defaultWidth;
-          var _width = options.width ? String(options.width) : args.defaultWidth;
+          var _width = options.width
+            ? String(options.width)
+            : args.defaultWidth;
           valuesArray = args.values[_width] || args.values[_defaultWidth];
         }
-        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
+        var index = args.argumentCallback
+          ? args.argumentCallback(dirtyIndex)
+          : dirtyIndex;
         return valuesArray[index];
       };
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/localize/index.js
 var require_localize = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/localize/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_buildLocalizeFn());
@@ -547,23 +646,57 @@ var require_localize = __commonJS({
     var eraValues = {
       narrow: ["B", "A"],
       abbreviated: ["BC", "AD"],
-      wide: ["Before Christ", "Anno Domini"]
+      wide: ["Before Christ", "Anno Domini"],
     };
     var quarterValues = {
       narrow: ["1", "2", "3", "4"],
       abbreviated: ["Q1", "Q2", "Q3", "Q4"],
-      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
+      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
     };
     var monthValues = {
       narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
-      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
-      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
+      abbreviated: [
+        "Jan",
+        "Feb",
+        "Mar",
+        "Apr",
+        "May",
+        "Jun",
+        "Jul",
+        "Aug",
+        "Sep",
+        "Oct",
+        "Nov",
+        "Dec",
+      ],
+      wide: [
+        "January",
+        "February",
+        "March",
+        "April",
+        "May",
+        "June",
+        "July",
+        "August",
+        "September",
+        "October",
+        "November",
+        "December",
+      ],
     };
     var dayValues = {
       narrow: ["S", "M", "T", "W", "T", "F", "S"],
       short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
       abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
-      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
+      wide: [
+        "Sunday",
+        "Monday",
+        "Tuesday",
+        "Wednesday",
+        "Thursday",
+        "Friday",
+        "Saturday",
+      ],
     };
     var dayPeriodValues = {
       narrow: {
@@ -574,7 +707,7 @@ var require_localize = __commonJS({
         morning: "morning",
         afternoon: "afternoon",
         evening: "evening",
-        night: "night"
+        night: "night",
       },
       abbreviated: {
         am: "AM",
@@ -584,7 +717,7 @@ var require_localize = __commonJS({
         morning: "morning",
         afternoon: "afternoon",
         evening: "evening",
-        night: "night"
+        night: "night",
       },
       wide: {
         am: "a.m.",
@@ -594,8 +727,8 @@ var require_localize = __commonJS({
         morning: "morning",
         afternoon: "afternoon",
         evening: "evening",
-        night: "night"
-      }
+        night: "night",
+      },
     };
     var formattingDayPeriodValues = {
       narrow: {
@@ -606,7 +739,7 @@ var require_localize = __commonJS({
         morning: "in the morning",
         afternoon: "in the afternoon",
         evening: "in the evening",
-        night: "at night"
+        night: "at night",
       },
       abbreviated: {
         am: "AM",
@@ -616,7 +749,7 @@ var require_localize = __commonJS({
         morning: "in the morning",
         afternoon: "in the afternoon",
         evening: "in the evening",
-        night: "at night"
+        night: "at night",
       },
       wide: {
         am: "a.m.",
@@ -626,10 +759,10 @@ var require_localize = __commonJS({
         morning: "in the morning",
         afternoon: "in the afternoon",
         evening: "in the evening",
-        night: "at night"
-      }
+        night: "at night",
+      },
     };
-    var ordinalNumber = function(dirtyNumber, _options) {
+    var ordinalNumber = function (dirtyNumber, _options) {
       var number = Number(dirtyNumber);
       var rem100 = number % 100;
       if (rem100 > 20 || rem100 < 10) {
@@ -648,67 +781,77 @@ var require_localize = __commonJS({
       ordinalNumber,
       era: (0, _index.default)({
         values: eraValues,
-        defaultWidth: "wide"
+        defaultWidth: "wide",
       }),
       quarter: (0, _index.default)({
         values: quarterValues,
         defaultWidth: "wide",
-        argumentCallback: function(quarter) {
+        argumentCallback: function (quarter) {
           return quarter - 1;
-        }
+        },
       }),
       month: (0, _index.default)({
         values: monthValues,
-        defaultWidth: "wide"
+        defaultWidth: "wide",
       }),
       day: (0, _index.default)({
         values: dayValues,
-        defaultWidth: "wide"
+        defaultWidth: "wide",
       }),
       dayPeriod: (0, _index.default)({
         values: dayPeriodValues,
         defaultWidth: "wide",
         formattingValues: formattingDayPeriodValues,
-        defaultFormattingWidth: "wide"
-      })
+        defaultFormattingWidth: "wide",
+      }),
     };
     var _default = localize;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js
 var require_buildMatchFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildMatchFn;
     function buildMatchFn(args) {
-      return function(string) {
-        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
+      return function (string) {
+        var options =
+          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
         var width = options.width;
-        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
+        var matchPattern =
+          (width && args.matchPatterns[width]) ||
+          args.matchPatterns[args.defaultMatchWidth];
         var matchResult = string.match(matchPattern);
         if (!matchResult) {
           return null;
         }
         var matchedString = matchResult[0];
-        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
-        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
-          return pattern.test(matchedString);
-        }) : findKey(parsePatterns, function(pattern) {
-          return pattern.test(matchedString);
-        });
+        var parsePatterns =
+          (width && args.parsePatterns[width]) ||
+          args.parsePatterns[args.defaultParseWidth];
+        var key = Array.isArray(parsePatterns)
+          ? findIndex(parsePatterns, function (pattern) {
+              return pattern.test(matchedString);
+            })
+          : findKey(parsePatterns, function (pattern) {
+              return pattern.test(matchedString);
+            });
         var value;
         value = args.valueCallback ? args.valueCallback(key) : key;
         value = options.valueCallback ? options.valueCallback(value) : value;
         var rest = string.slice(matchedString.length);
         return {
           value,
-          rest
+          rest,
         };
       };
     }
@@ -729,46 +872,53 @@ var require_buildMatchFn = __commonJS({
       return void 0;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
 var require_buildMatchPatternFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildMatchPatternFn;
     function buildMatchPatternFn(args) {
-      return function(string) {
-        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
+      return function (string) {
+        var options =
+          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
         var matchResult = string.match(args.matchPattern);
-        if (!matchResult)
-          return null;
+        if (!matchResult) return null;
         var matchedString = matchResult[0];
         var parseResult = string.match(args.parsePattern);
-        if (!parseResult)
-          return null;
-        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
+        if (!parseResult) return null;
+        var value = args.valueCallback
+          ? args.valueCallback(parseResult[0])
+          : parseResult[0];
         value = options.valueCallback ? options.valueCallback(value) : value;
         var rest = string.slice(matchedString.length);
         return {
           value,
-          rest
+          rest,
         };
       };
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/match/index.js
 var require_match = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/match/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_buildMatchFn());
@@ -781,41 +931,67 @@ var require_match = __commonJS({
     var matchEraPatterns = {
       narrow: /^(b|a)/i,
       abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
-      wide: /^(before christ|before common era|anno domini|common era)/i
+      wide: /^(before christ|before common era|anno domini|common era)/i,
     };
     var parseEraPatterns = {
-      any: [/^b/i, /^(a|c)/i]
+      any: [/^b/i, /^(a|c)/i],
     };
     var matchQuarterPatterns = {
       narrow: /^[1234]/i,
       abbreviated: /^q[1234]/i,
-      wide: /^[1234](th|st|nd|rd)? quarter/i
+      wide: /^[1234](th|st|nd|rd)? quarter/i,
     };
     var parseQuarterPatterns = {
-      any: [/1/i, /2/i, /3/i, /4/i]
+      any: [/1/i, /2/i, /3/i, /4/i],
     };
     var matchMonthPatterns = {
       narrow: /^[jfmasond]/i,
       abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
-      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
+      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
     };
     var parseMonthPatterns = {
-      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
-      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
+      narrow: [
+        /^j/i,
+        /^f/i,
+        /^m/i,
+        /^a/i,
+        /^m/i,
+        /^j/i,
+        /^j/i,
+        /^a/i,
+        /^s/i,
+        /^o/i,
+        /^n/i,
+        /^d/i,
+      ],
+      any: [
+        /^ja/i,
+        /^f/i,
+        /^mar/i,
+        /^ap/i,
+        /^may/i,
+        /^jun/i,
+        /^jul/i,
+        /^au/i,
+        /^s/i,
+        /^o/i,
+        /^n/i,
+        /^d/i,
+      ],
     };
     var matchDayPatterns = {
       narrow: /^[smtwf]/i,
       short: /^(su|mo|tu|we|th|fr|sa)/i,
       abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
-      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
+      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
     };
     var parseDayPatterns = {
       narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
-      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
+      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
     };
     var matchDayPeriodPatterns = {
       narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
-      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
+      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
     };
     var parseDayPeriodPatterns = {
       any: {
@@ -826,55 +1002,55 @@ var require_match = __commonJS({
         morning: /morning/i,
         afternoon: /afternoon/i,
         evening: /evening/i,
-        night: /night/i
-      }
+        night: /night/i,
+      },
     };
     var match = {
       ordinalNumber: (0, _index2.default)({
         matchPattern: matchOrdinalNumberPattern,
         parsePattern: parseOrdinalNumberPattern,
-        valueCallback: function(value) {
+        valueCallback: function (value) {
           return parseInt(value, 10);
-        }
+        },
       }),
       era: (0, _index.default)({
         matchPatterns: matchEraPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseEraPatterns,
-        defaultParseWidth: "any"
+        defaultParseWidth: "any",
       }),
       quarter: (0, _index.default)({
         matchPatterns: matchQuarterPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseQuarterPatterns,
         defaultParseWidth: "any",
-        valueCallback: function(index) {
+        valueCallback: function (index) {
           return index + 1;
-        }
+        },
       }),
       month: (0, _index.default)({
         matchPatterns: matchMonthPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseMonthPatterns,
-        defaultParseWidth: "any"
+        defaultParseWidth: "any",
       }),
       day: (0, _index.default)({
         matchPatterns: matchDayPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseDayPatterns,
-        defaultParseWidth: "any"
+        defaultParseWidth: "any",
       }),
       dayPeriod: (0, _index.default)({
         matchPatterns: matchDayPeriodPatterns,
         defaultMatchWidth: "any",
         parsePatterns: parseDayPeriodPatterns,
-        defaultParseWidth: "any"
-      })
+        defaultParseWidth: "any",
+      }),
     };
     var _default = match;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/index.js
@@ -882,7 +1058,7 @@ var require_en_US = __commonJS({
   "../../node_modules/date-fns/locale/en-US/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_formatDistance());
@@ -902,13 +1078,13 @@ var require_en_US = __commonJS({
       match: _index5.default,
       options: {
         weekStartsOn: 0,
-        firstWeekContainsDate: 1
-      }
+        firstWeekContainsDate: 1,
+      },
     };
     var _default = locale;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/toInteger/index.js
@@ -916,11 +1092,15 @@ var require_toInteger = __commonJS({
   "../../node_modules/date-fns/_lib/toInteger/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = toInteger;
     function toInteger(dirtyNumber) {
-      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
+      if (
+        dirtyNumber === null ||
+        dirtyNumber === true ||
+        dirtyNumber === false
+      ) {
         return NaN;
       }
       var number = Number(dirtyNumber);
@@ -930,7 +1110,7 @@ var require_toInteger = __commonJS({
       return number < 0 ? Math.ceil(number) : Math.floor(number);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/addMilliseconds/index.js
@@ -938,7 +1118,7 @@ var require_addMilliseconds = __commonJS({
   "../../node_modules/date-fns/addMilliseconds/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addMilliseconds;
     var _index = _interopRequireDefault(require_toInteger());
@@ -954,7 +1134,7 @@ var require_addMilliseconds = __commonJS({
       return new Date(timestamp + amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/subMilliseconds/index.js
@@ -962,7 +1142,7 @@ var require_subMilliseconds = __commonJS({
   "../../node_modules/date-fns/subMilliseconds/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = subMilliseconds;
     var _index = _interopRequireDefault(require_toInteger());
@@ -977,7 +1157,7 @@ var require_subMilliseconds = __commonJS({
       return (0, _index2.default)(dirtyDate, -amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js
@@ -985,7 +1165,7 @@ var require_getUTCDayOfYear = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCDayOfYear;
     var _index = _interopRequireDefault(require_toDate());
@@ -1005,15 +1185,18 @@ var require_getUTCDayOfYear = __commonJS({
       return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js
 var require_startOfUTCISOWeek = __commonJS({
-  "../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCISOWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1032,15 +1215,18 @@ var require_startOfUTCISOWeek = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js
 var require_getUTCISOWeekYear = __commonJS({
-  "../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCISOWeekYear;
     var _index = _interopRequireDefault(require_toDate());
@@ -1070,15 +1256,18 @@ var require_getUTCISOWeekYear = __commonJS({
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js
 var require_startOfUTCISOWeekYear = __commonJS({
-  "../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCISOWeekYear;
     var _index = _interopRequireDefault(require_getUTCISOWeekYear());
@@ -1097,7 +1286,7 @@ var require_startOfUTCISOWeekYear = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCISOWeek/index.js
@@ -1105,7 +1294,7 @@ var require_getUTCISOWeek = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCISOWeek/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCISOWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1119,11 +1308,13 @@ var require_getUTCISOWeek = __commonJS({
     function getUTCISOWeek(dirtyDate) {
       (0, _index4.default)(1, arguments);
       var date = (0, _index.default)(dirtyDate);
-      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
+      var diff =
+        (0, _index2.default)(date).getTime() -
+        (0, _index3.default)(date).getTime();
       return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCWeek/index.js
@@ -1131,7 +1322,7 @@ var require_startOfUTCWeek = __commonJS({
   "../../node_modules/date-fns/_lib/startOfUTCWeek/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1144,11 +1335,20 @@ var require_startOfUTCWeek = __commonJS({
       (0, _index2.default)(1, arguments);
       var options = dirtyOptions || {};
       var locale = options.locale;
-      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
-      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
-      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options.weekStartsOn);
+      var localeWeekStartsOn =
+        locale && locale.options && locale.options.weekStartsOn;
+      var defaultWeekStartsOn =
+        localeWeekStartsOn == null
+          ? 0
+          : (0, _index3.default)(localeWeekStartsOn);
+      var weekStartsOn =
+        options.weekStartsOn == null
+          ? defaultWeekStartsOn
+          : (0, _index3.default)(options.weekStartsOn);
       if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
-        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
+        throw new RangeError(
+          "weekStartsOn must be between 0 and 6 inclusively"
+        );
       }
       var date = (0, _index.default)(dirtyDate);
       var day = date.getUTCDay();
@@ -1158,7 +1358,7 @@ var require_startOfUTCWeek = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCWeekYear/index.js
@@ -1166,7 +1366,7 @@ var require_getUTCWeekYear = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCWeekYear/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCWeekYear;
     var _index = _interopRequireDefault(require_toDate());
@@ -1182,20 +1382,35 @@ var require_getUTCWeekYear = __commonJS({
       var year = date.getUTCFullYear();
       var options = dirtyOptions || {};
       var locale = options.locale;
-      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
-      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
-      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);
+      var localeFirstWeekContainsDate =
+        locale && locale.options && locale.options.firstWeekContainsDate;
+      var defaultFirstWeekContainsDate =
+        localeFirstWeekContainsDate == null
+          ? 1
+          : (0, _index4.default)(localeFirstWeekContainsDate);
+      var firstWeekContainsDate =
+        options.firstWeekContainsDate == null
+          ? defaultFirstWeekContainsDate
+          : (0, _index4.default)(options.firstWeekContainsDate);
       if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
-        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
+        throw new RangeError(
+          "firstWeekContainsDate must be between 1 and 7 inclusively"
+        );
       }
       var firstWeekOfNextYear = new Date(0);
       firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
       firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
-      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, dirtyOptions);
+      var startOfNextYear = (0, _index3.default)(
+        firstWeekOfNextYear,
+        dirtyOptions
+      );
       var firstWeekOfThisYear = new Date(0);
       firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
       firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
-      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, dirtyOptions);
+      var startOfThisYear = (0, _index3.default)(
+        firstWeekOfThisYear,
+        dirtyOptions
+      );
       if (date.getTime() >= startOfNextYear.getTime()) {
         return year + 1;
       } else if (date.getTime() >= startOfThisYear.getTime()) {
@@ -1205,15 +1420,18 @@ var require_getUTCWeekYear = __commonJS({
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js
 var require_startOfUTCWeekYear = __commonJS({
-  "../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCWeekYear;
     var _index = _interopRequireDefault(require_getUTCWeekYear());
@@ -1227,9 +1445,16 @@ var require_startOfUTCWeekYear = __commonJS({
       (0, _index2.default)(1, arguments);
       var options = dirtyOptions || {};
       var locale = options.locale;
-      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
-      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
-      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);
+      var localeFirstWeekContainsDate =
+        locale && locale.options && locale.options.firstWeekContainsDate;
+      var defaultFirstWeekContainsDate =
+        localeFirstWeekContainsDate == null
+          ? 1
+          : (0, _index4.default)(localeFirstWeekContainsDate);
+      var firstWeekContainsDate =
+        options.firstWeekContainsDate == null
+          ? defaultFirstWeekContainsDate
+          : (0, _index4.default)(options.firstWeekContainsDate);
       var year = (0, _index.default)(dirtyDate, dirtyOptions);
       var firstWeek = new Date(0);
       firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
@@ -1238,7 +1463,7 @@ var require_startOfUTCWeekYear = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCWeek/index.js
@@ -1246,7 +1471,7 @@ var require_getUTCWeek = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCWeek/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1260,11 +1485,13 @@ var require_getUTCWeek = __commonJS({
     function getUTCWeek(dirtyDate, options) {
       (0, _index4.default)(1, arguments);
       var date = (0, _index.default)(dirtyDate);
-      var diff = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime();
+      var diff =
+        (0, _index2.default)(date, options).getTime() -
+        (0, _index3.default)(date, options).getTime();
       return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/addLeadingZeros/index.js
@@ -1272,7 +1499,7 @@ var require_addLeadingZeros = __commonJS({
   "../../node_modules/date-fns/_lib/addLeadingZeros/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addLeadingZeros;
     function addLeadingZeros(number, targetLength) {
@@ -1284,15 +1511,18 @@ var require_addLeadingZeros = __commonJS({
       return sign + output;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/format/lightFormatters/index.js
 var require_lightFormatters = __commonJS({
-  "../../node_modules/date-fns/_lib/format/lightFormatters/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/format/lightFormatters/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_addLeadingZeros());
@@ -1300,19 +1530,24 @@ var require_lightFormatters = __commonJS({
       return obj && obj.__esModule ? obj : { default: obj };
     }
     var formatters = {
-      y: function(date, token) {
+      y: function (date, token) {
         var signedYear = date.getUTCFullYear();
         var year = signedYear > 0 ? signedYear : 1 - signedYear;
-        return (0, _index.default)(token === "yy" ? year % 100 : year, token.length);
+        return (0, _index.default)(
+          token === "yy" ? year % 100 : year,
+          token.length
+        );
       },
-      M: function(date, token) {
+      M: function (date, token) {
         var month = date.getUTCMonth();
-        return token === "M" ? String(month + 1) : (0, _index.default)(month + 1, 2);
+        return token === "M"
+          ? String(month + 1)
+          : (0, _index.default)(month + 1, 2);
       },
-      d: function(date, token) {
+      d: function (date, token) {
         return (0, _index.default)(date.getUTCDate(), token.length);
       },
-      a: function(date, token) {
+      a: function (date, token) {
         var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
         switch (token) {
           case "a":
@@ -1327,37 +1562,42 @@ var require_lightFormatters = __commonJS({
             return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
         }
       },
-      h: function(date, token) {
+      h: function (date, token) {
         return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);
       },
-      H: function(date, token) {
+      H: function (date, token) {
         return (0, _index.default)(date.getUTCHours(), token.length);
       },
-      m: function(date, token) {
+      m: function (date, token) {
         return (0, _index.default)(date.getUTCMinutes(), token.length);
       },
-      s: function(date, token) {
+      s: function (date, token) {
         return (0, _index.default)(date.getUTCSeconds(), token.length);
       },
-      S: function(date, token) {
+      S: function (date, token) {
         var numberOfDigits = token.length;
         var milliseconds = date.getUTCMilliseconds();
-        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
+        var fractionalSeconds = Math.floor(
+          milliseconds * Math.pow(10, numberOfDigits - 3)
+        );
         return (0, _index.default)(fractionalSeconds, token.length);
-      }
+      },
     };
     var _default = formatters;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/format/formatters/index.js
 var require_formatters = __commonJS({
-  "../../node_modules/date-fns/_lib/format/formatters/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/format/formatters/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_getUTCDayOfYear());
@@ -1378,40 +1618,40 @@ var require_formatters = __commonJS({
       morning: "morning",
       afternoon: "afternoon",
       evening: "evening",
-      night: "night"
+      night: "night",
     };
     var formatters = {
-      G: function(date, token, localize) {
+      G: function (date, token, localize) {
         var era = date.getUTCFullYear() > 0 ? 1 : 0;
         switch (token) {
           case "G":
           case "GG":
           case "GGG":
             return localize.era(era, {
-              width: "abbreviated"
+              width: "abbreviated",
             });
           case "GGGGG":
             return localize.era(era, {
-              width: "narrow"
+              width: "narrow",
             });
           case "GGGG":
           default:
             return localize.era(era, {
-              width: "wide"
+              width: "wide",
             });
         }
       },
-      y: function(date, token, localize) {
+      y: function (date, token, localize) {
         if (token === "yo") {
           var signedYear = date.getUTCFullYear();
           var year = signedYear > 0 ? signedYear : 1 - signedYear;
           return localize.ordinalNumber(year, {
-            unit: "year"
+            unit: "year",
           });
         }
         return _index7.default.y(date, token);
       },
-      Y: function(date, token, localize, options) {
+      Y: function (date, token, localize, options) {
         var signedWeekYear = (0, _index5.default)(date, options);
         var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
         if (token === "YY") {
@@ -1420,20 +1660,20 @@ var require_formatters = __commonJS({
         }
         if (token === "Yo") {
           return localize.ordinalNumber(weekYear, {
-            unit: "year"
+            unit: "year",
           });
         }
         return (0, _index6.default)(weekYear, token.length);
       },
-      R: function(date, token) {
+      R: function (date, token) {
         var isoWeekYear = (0, _index3.default)(date);
         return (0, _index6.default)(isoWeekYear, token.length);
       },
-      u: function(date, token) {
+      u: function (date, token) {
         var year = date.getUTCFullYear();
         return (0, _index6.default)(year, token.length);
       },
-      Q: function(date, token, localize) {
+      Q: function (date, token, localize) {
         var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
         switch (token) {
           case "Q":
@@ -1442,27 +1682,27 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(quarter, 2);
           case "Qo":
             return localize.ordinalNumber(quarter, {
-              unit: "quarter"
+              unit: "quarter",
             });
           case "QQQ":
             return localize.quarter(quarter, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "QQQQQ":
             return localize.quarter(quarter, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "QQQQ":
           default:
             return localize.quarter(quarter, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      q: function(date, token, localize) {
+      q: function (date, token, localize) {
         var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
         switch (token) {
           case "q":
@@ -1471,27 +1711,27 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(quarter, 2);
           case "qo":
             return localize.ordinalNumber(quarter, {
-              unit: "quarter"
+              unit: "quarter",
             });
           case "qqq":
             return localize.quarter(quarter, {
               width: "abbreviated",
-              context: "standalone"
+              context: "standalone",
             });
           case "qqqqq":
             return localize.quarter(quarter, {
               width: "narrow",
-              context: "standalone"
+              context: "standalone",
             });
           case "qqqq":
           default:
             return localize.quarter(quarter, {
               width: "wide",
-              context: "standalone"
+              context: "standalone",
             });
         }
       },
-      M: function(date, token, localize) {
+      M: function (date, token, localize) {
         var month = date.getUTCMonth();
         switch (token) {
           case "M":
@@ -1499,27 +1739,27 @@ var require_formatters = __commonJS({
             return _index7.default.M(date, token);
           case "Mo":
             return localize.ordinalNumber(month + 1, {
-              unit: "month"
+              unit: "month",
             });
           case "MMM":
             return localize.month(month, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "MMMMM":
             return localize.month(month, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "MMMM":
           default:
             return localize.month(month, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      L: function(date, token, localize) {
+      L: function (date, token, localize) {
         var month = date.getUTCMonth();
         switch (token) {
           case "L":
@@ -1528,62 +1768,62 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(month + 1, 2);
           case "Lo":
             return localize.ordinalNumber(month + 1, {
-              unit: "month"
+              unit: "month",
             });
           case "LLL":
             return localize.month(month, {
               width: "abbreviated",
-              context: "standalone"
+              context: "standalone",
             });
           case "LLLLL":
             return localize.month(month, {
               width: "narrow",
-              context: "standalone"
+              context: "standalone",
             });
           case "LLLL":
           default:
             return localize.month(month, {
               width: "wide",
-              context: "standalone"
+              context: "standalone",
             });
         }
       },
-      w: function(date, token, localize, options) {
+      w: function (date, token, localize, options) {
         var week = (0, _index4.default)(date, options);
         if (token === "wo") {
           return localize.ordinalNumber(week, {
-            unit: "week"
+            unit: "week",
           });
         }
         return (0, _index6.default)(week, token.length);
       },
-      I: function(date, token, localize) {
+      I: function (date, token, localize) {
         var isoWeek = (0, _index2.default)(date);
         if (token === "Io") {
           return localize.ordinalNumber(isoWeek, {
-            unit: "week"
+            unit: "week",
           });
         }
         return (0, _index6.default)(isoWeek, token.length);
       },
-      d: function(date, token, localize) {
+      d: function (date, token, localize) {
         if (token === "do") {
           return localize.ordinalNumber(date.getUTCDate(), {
-            unit: "date"
+            unit: "date",
           });
         }
         return _index7.default.d(date, token);
       },
-      D: function(date, token, localize) {
+      D: function (date, token, localize) {
         var dayOfYear = (0, _index.default)(date);
         if (token === "Do") {
           return localize.ordinalNumber(dayOfYear, {
-            unit: "dayOfYear"
+            unit: "dayOfYear",
           });
         }
         return (0, _index6.default)(dayOfYear, token.length);
       },
-      E: function(date, token, localize) {
+      E: function (date, token, localize) {
         var dayOfWeek = date.getUTCDay();
         switch (token) {
           case "E":
@@ -1591,27 +1831,27 @@ var require_formatters = __commonJS({
           case "EEE":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "EEEEE":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "EEEEEE":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "formatting"
+              context: "formatting",
             });
           case "EEEE":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      e: function(date, token, localize, options) {
+      e: function (date, token, localize, options) {
         var dayOfWeek = date.getUTCDay();
         var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
         switch (token) {
@@ -1621,32 +1861,32 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(localDayOfWeek, 2);
           case "eo":
             return localize.ordinalNumber(localDayOfWeek, {
-              unit: "day"
+              unit: "day",
             });
           case "eee":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "eeeee":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "eeeeee":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "formatting"
+              context: "formatting",
             });
           case "eeee":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      c: function(date, token, localize, options) {
+      c: function (date, token, localize, options) {
         var dayOfWeek = date.getUTCDay();
         var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
         switch (token) {
@@ -1656,32 +1896,32 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(localDayOfWeek, token.length);
           case "co":
             return localize.ordinalNumber(localDayOfWeek, {
-              unit: "day"
+              unit: "day",
             });
           case "ccc":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "standalone"
+              context: "standalone",
             });
           case "ccccc":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "standalone"
+              context: "standalone",
             });
           case "cccccc":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "standalone"
+              context: "standalone",
             });
           case "cccc":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "standalone"
+              context: "standalone",
             });
         }
       },
-      i: function(date, token, localize) {
+      i: function (date, token, localize) {
         var dayOfWeek = date.getUTCDay();
         var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
         switch (token) {
@@ -1691,32 +1931,32 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(isoDayOfWeek, token.length);
           case "io":
             return localize.ordinalNumber(isoDayOfWeek, {
-              unit: "day"
+              unit: "day",
             });
           case "iii":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "iiiii":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "iiiiii":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "formatting"
+              context: "formatting",
             });
           case "iiii":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      a: function(date, token, localize) {
+      a: function (date, token, localize) {
         var hours = date.getUTCHours();
         var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
         switch (token) {
@@ -1724,27 +1964,29 @@ var require_formatters = __commonJS({
           case "aa":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "aaa":
-            return localize.dayPeriod(dayPeriodEnumValue, {
-              width: "abbreviated",
-              context: "formatting"
-            }).toLowerCase();
+            return localize
+              .dayPeriod(dayPeriodEnumValue, {
+                width: "abbreviated",
+                context: "formatting",
+              })
+              .toLowerCase();
           case "aaaaa":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "aaaa":
           default:
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      b: function(date, token, localize) {
+      b: function (date, token, localize) {
         var hours = date.getUTCHours();
         var dayPeriodEnumValue;
         if (hours === 12) {
@@ -1759,27 +2001,29 @@ var require_formatters = __commonJS({
           case "bb":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "bbb":
-            return localize.dayPeriod(dayPeriodEnumValue, {
-              width: "abbreviated",
-              context: "formatting"
-            }).toLowerCase();
+            return localize
+              .dayPeriod(dayPeriodEnumValue, {
+                width: "abbreviated",
+                context: "formatting",
+              })
+              .toLowerCase();
           case "bbbbb":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "bbbb":
           default:
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      B: function(date, token, localize) {
+      B: function (date, token, localize) {
         var hours = date.getUTCHours();
         var dayPeriodEnumValue;
         if (hours >= 17) {
@@ -1797,80 +2041,78 @@ var require_formatters = __commonJS({
           case "BBB":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "BBBBB":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "BBBB":
           default:
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      h: function(date, token, localize) {
+      h: function (date, token, localize) {
         if (token === "ho") {
           var hours = date.getUTCHours() % 12;
-          if (hours === 0)
-            hours = 12;
+          if (hours === 0) hours = 12;
           return localize.ordinalNumber(hours, {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return _index7.default.h(date, token);
       },
-      H: function(date, token, localize) {
+      H: function (date, token, localize) {
         if (token === "Ho") {
           return localize.ordinalNumber(date.getUTCHours(), {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return _index7.default.H(date, token);
       },
-      K: function(date, token, localize) {
+      K: function (date, token, localize) {
         var hours = date.getUTCHours() % 12;
         if (token === "Ko") {
           return localize.ordinalNumber(hours, {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return (0, _index6.default)(hours, token.length);
       },
-      k: function(date, token, localize) {
+      k: function (date, token, localize) {
         var hours = date.getUTCHours();
-        if (hours === 0)
-          hours = 24;
+        if (hours === 0) hours = 24;
         if (token === "ko") {
           return localize.ordinalNumber(hours, {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return (0, _index6.default)(hours, token.length);
       },
-      m: function(date, token, localize) {
+      m: function (date, token, localize) {
         if (token === "mo") {
           return localize.ordinalNumber(date.getUTCMinutes(), {
-            unit: "minute"
+            unit: "minute",
           });
         }
         return _index7.default.m(date, token);
       },
-      s: function(date, token, localize) {
+      s: function (date, token, localize) {
         if (token === "so") {
           return localize.ordinalNumber(date.getUTCSeconds(), {
-            unit: "second"
+            unit: "second",
           });
         }
         return _index7.default.s(date, token);
       },
-      S: function(date, token) {
+      S: function (date, token) {
         return _index7.default.S(date, token);
       },
-      X: function(date, token, _localize, options) {
+      X: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         if (timezoneOffset === 0) {
@@ -1888,7 +2130,7 @@ var require_formatters = __commonJS({
             return formatTimezone(timezoneOffset, ":");
         }
       },
-      x: function(date, token, _localize, options) {
+      x: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         switch (token) {
@@ -1903,7 +2145,7 @@ var require_formatters = __commonJS({
             return formatTimezone(timezoneOffset, ":");
         }
       },
-      O: function(date, token, _localize, options) {
+      O: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         switch (token) {
@@ -1916,7 +2158,7 @@ var require_formatters = __commonJS({
             return "GMT" + formatTimezone(timezoneOffset, ":");
         }
       },
-      z: function(date, token, _localize, options) {
+      z: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         switch (token) {
@@ -1929,16 +2171,16 @@ var require_formatters = __commonJS({
             return "GMT" + formatTimezone(timezoneOffset, ":");
         }
       },
-      t: function(date, token, _localize, options) {
+      t: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timestamp = Math.floor(originalDate.getTime() / 1e3);
         return (0, _index6.default)(timestamp, token.length);
       },
-      T: function(date, token, _localize, options) {
+      T: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timestamp = originalDate.getTime();
         return (0, _index6.default)(timestamp, token.length);
-      }
+      },
     };
     function formatTimezoneShort(offset, dirtyDelimiter) {
       var sign = offset > 0 ? "-" : "+";
@@ -1949,7 +2191,9 @@ var require_formatters = __commonJS({
         return sign + String(hours);
       }
       var delimiter = dirtyDelimiter || "";
-      return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);
+      return (
+        sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2)
+      );
     }
     function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
       if (offset % 60 === 0) {
@@ -1969,35 +2213,38 @@ var require_formatters = __commonJS({
     var _default = formatters;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/format/longFormatters/index.js
 var require_longFormatters = __commonJS({
-  "../../node_modules/date-fns/_lib/format/longFormatters/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/format/longFormatters/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     function dateLongFormatter(pattern, formatLong) {
       switch (pattern) {
         case "P":
           return formatLong.date({
-            width: "short"
+            width: "short",
           });
         case "PP":
           return formatLong.date({
-            width: "medium"
+            width: "medium",
           });
         case "PPP":
           return formatLong.date({
-            width: "long"
+            width: "long",
           });
         case "PPPP":
         default:
           return formatLong.date({
-            width: "full"
+            width: "full",
           });
       }
     }
@@ -2005,20 +2252,20 @@ var require_longFormatters = __commonJS({
       switch (pattern) {
         case "p":
           return formatLong.time({
-            width: "short"
+            width: "short",
           });
         case "pp":
           return formatLong.time({
-            width: "medium"
+            width: "medium",
           });
         case "ppp":
           return formatLong.time({
-            width: "long"
+            width: "long",
           });
         case "pppp":
         default:
           return formatLong.time({
-            width: "full"
+            width: "full",
           });
       }
     }
@@ -2033,53 +2280,68 @@ var require_longFormatters = __commonJS({
       switch (datePattern) {
         case "P":
           dateTimeFormat = formatLong.dateTime({
-            width: "short"
+            width: "short",
           });
           break;
         case "PP":
           dateTimeFormat = formatLong.dateTime({
-            width: "medium"
+            width: "medium",
           });
           break;
         case "PPP":
           dateTimeFormat = formatLong.dateTime({
-            width: "long"
+            width: "long",
           });
           break;
         case "PPPP":
         default:
           dateTimeFormat = formatLong.dateTime({
-            width: "full"
+            width: "full",
           });
           break;
       }
-      return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong));
+      return dateTimeFormat
+        .replace("{{date}}", dateLongFormatter(datePattern, formatLong))
+        .replace("{{time}}", timeLongFormatter(timePattern, formatLong));
     }
     var longFormatters = {
       p: timeLongFormatter,
-      P: dateTimeLongFormatter
+      P: dateTimeLongFormatter,
     };
     var _default = longFormatters;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js
 var require_getTimezoneOffsetInMilliseconds = __commonJS({
-  "../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getTimezoneOffsetInMilliseconds;
     function getTimezoneOffsetInMilliseconds(date) {
-      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
+      var utcDate = new Date(
+        Date.UTC(
+          date.getFullYear(),
+          date.getMonth(),
+          date.getDate(),
+          date.getHours(),
+          date.getMinutes(),
+          date.getSeconds(),
+          date.getMilliseconds()
+        )
+      );
       utcDate.setUTCFullYear(date.getFullYear());
       return date.getTime() - utcDate.getTime();
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/protectedTokens/index.js
@@ -2087,7 +2349,7 @@ var require_protectedTokens = __commonJS({
   "../../node_modules/date-fns/_lib/protectedTokens/index.js"(exports) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
     exports.isProtectedWeekYearToken = isProtectedWeekYearToken;
@@ -2102,16 +2364,38 @@ var require_protectedTokens = __commonJS({
     }
     function throwProtectedError(token, format4, input) {
       if (token === "YYYY") {
-        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format4, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `yyyy` instead of `YYYY` (in `"
+            .concat(format4, "`) for formatting years to the input `")
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       } else if (token === "YY") {
-        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format4, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `yy` instead of `YY` (in `"
+            .concat(format4, "`) for formatting years to the input `")
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       } else if (token === "D") {
-        throw new RangeError("Use `d` instead of `D` (in `".concat(format4, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `d` instead of `D` (in `"
+            .concat(
+              format4,
+              "`) for formatting days of the month to the input `"
+            )
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       } else if (token === "DD") {
-        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format4, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `dd` instead of `DD` (in `"
+            .concat(
+              format4,
+              "`) for formatting days of the month to the input `"
+            )
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       }
     }
-  }
+  },
 });
 
 // ../../node_modules/date-fns/format/index.js
@@ -2119,7 +2403,7 @@ var require_format = __commonJS({
   "../../node_modules/date-fns/format/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = format4;
     var _index = _interopRequireDefault(require_isValid());
@@ -2128,14 +2412,17 @@ var require_format = __commonJS({
     var _index4 = _interopRequireDefault(require_toDate());
     var _index5 = _interopRequireDefault(require_formatters());
     var _index6 = _interopRequireDefault(require_longFormatters());
-    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
+    var _index7 = _interopRequireDefault(
+      require_getTimezoneOffsetInMilliseconds()
+    );
     var _index8 = require_protectedTokens();
     var _index9 = _interopRequireDefault(require_toInteger());
     var _index10 = _interopRequireDefault(require_requiredArgs());
     function _interopRequireDefault(obj) {
       return obj && obj.__esModule ? obj : { default: obj };
     }
-    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
+    var formattingTokensRegExp =
+      /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
     var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
     var escapedStringRegExp = /^'([^]*?)'?$/;
     var doubleQuoteRegExp = /''/g;
@@ -2145,17 +2432,34 @@ var require_format = __commonJS({
       var formatStr = String(dirtyFormatStr);
       var options = dirtyOptions || {};
       var locale = options.locale || _index2.default;
-      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
-      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index9.default)(localeFirstWeekContainsDate);
-      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index9.default)(options.firstWeekContainsDate);
+      var localeFirstWeekContainsDate =
+        locale.options && locale.options.firstWeekContainsDate;
+      var defaultFirstWeekContainsDate =
+        localeFirstWeekContainsDate == null
+          ? 1
+          : (0, _index9.default)(localeFirstWeekContainsDate);
+      var firstWeekContainsDate =
+        options.firstWeekContainsDate == null
+          ? defaultFirstWeekContainsDate
+          : (0, _index9.default)(options.firstWeekContainsDate);
       if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
-        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
+        throw new RangeError(
+          "firstWeekContainsDate must be between 1 and 7 inclusively"
+        );
       }
       var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
-      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index9.default)(localeWeekStartsOn);
-      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index9.default)(options.weekStartsOn);
+      var defaultWeekStartsOn =
+        localeWeekStartsOn == null
+          ? 0
+          : (0, _index9.default)(localeWeekStartsOn);
+      var weekStartsOn =
+        options.weekStartsOn == null
+          ? defaultWeekStartsOn
+          : (0, _index9.default)(options.weekStartsOn);
       if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
-        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
+        throw new RangeError(
+          "weekStartsOn must be between 0 and 6 inclusively"
+        );
       }
       if (!locale.localize) {
         throw new RangeError("locale must contain localize property");
@@ -2173,45 +2477,80 @@ var require_format = __commonJS({
         firstWeekContainsDate,
         weekStartsOn,
         locale,
-        _originalDate: originalDate
+        _originalDate: originalDate,
       };
-      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
-        var firstCharacter = substring[0];
-        if (firstCharacter === "p" || firstCharacter === "P") {
-          var longFormatter = _index6.default[firstCharacter];
-          return longFormatter(substring, locale.formatLong, formatterOptions);
-        }
-        return substring;
-      }).join("").match(formattingTokensRegExp).map(function(substring) {
-        if (substring === "''") {
-          return "'";
-        }
-        var firstCharacter = substring[0];
-        if (firstCharacter === "'") {
-          return cleanEscapedString(substring);
-        }
-        var formatter = _index5.default[firstCharacter];
-        if (formatter) {
-          if (!options.useAdditionalWeekYearTokens && (0, _index8.isProtectedWeekYearToken)(substring)) {
-            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
+      var result = formatStr
+        .match(longFormattingTokensRegExp)
+        .map(function (substring) {
+          var firstCharacter = substring[0];
+          if (firstCharacter === "p" || firstCharacter === "P") {
+            var longFormatter = _index6.default[firstCharacter];
+            return longFormatter(
+              substring,
+              locale.formatLong,
+              formatterOptions
+            );
           }
-          if (!options.useAdditionalDayOfYearTokens && (0, _index8.isProtectedDayOfYearToken)(substring)) {
-            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
+          return substring;
+        })
+        .join("")
+        .match(formattingTokensRegExp)
+        .map(function (substring) {
+          if (substring === "''") {
+            return "'";
           }
-          return formatter(utcDate, substring, locale.localize, formatterOptions);
-        }
-        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
-          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
-        }
-        return substring;
-      }).join("");
+          var firstCharacter = substring[0];
+          if (firstCharacter === "'") {
+            return cleanEscapedString(substring);
+          }
+          var formatter = _index5.default[firstCharacter];
+          if (formatter) {
+            if (
+              !options.useAdditionalWeekYearTokens &&
+              (0, _index8.isProtectedWeekYearToken)(substring)
+            ) {
+              (0, _index8.throwProtectedError)(
+                substring,
+                dirtyFormatStr,
+                dirtyDate
+              );
+            }
+            if (
+              !options.useAdditionalDayOfYearTokens &&
+              (0, _index8.isProtectedDayOfYearToken)(substring)
+            ) {
+              (0, _index8.throwProtectedError)(
+                substring,
+                dirtyFormatStr,
+                dirtyDate
+              );
+            }
+            return formatter(
+              utcDate,
+              substring,
+              locale.localize,
+              formatterOptions
+            );
+          }
+          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
+            throw new RangeError(
+              "Format string contains an unescaped latin alphabet character `" +
+                firstCharacter +
+                "`"
+            );
+          }
+          return substring;
+        })
+        .join("");
       return result;
     }
     function cleanEscapedString(input) {
-      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
+      return input
+        .match(escapedStringRegExp)[1]
+        .replace(doubleQuoteRegExp, "'");
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/format-number/index.js
@@ -2221,7 +2560,8 @@ var require_format_number = __commonJS({
     module.exports.default = formatter;
     function formatter(options) {
       options = options || {};
-      options.negativeType = options.negativeType || (options.negative === "R" ? "right" : "left");
+      options.negativeType =
+        options.negativeType || (options.negative === "R" ? "right" : "left");
       if (typeof options.negativeLeftSymbol !== "string") {
         switch (options.negativeType) {
           case "left":
@@ -2255,9 +2595,13 @@ var require_format_number = __commonJS({
       options.prefix = options.prefix || "";
       options.suffix = options.suffix || "";
       if (typeof options.integerSeparator !== "string") {
-        options.integerSeparator = typeof options.separator === "string" ? options.separator : ",";
+        options.integerSeparator =
+          typeof options.separator === "string" ? options.separator : ",";
       }
-      options.decimalsSeparator = typeof options.decimalsSeparator === "string" ? options.decimalsSeparator : "";
+      options.decimalsSeparator =
+        typeof options.decimalsSeparator === "string"
+          ? options.decimalsSeparator
+          : "";
       options.decimal = options.decimal || ".";
       options.padLeft = options.padLeft || -1;
       options.padRight = options.padRight || -1;
@@ -2281,8 +2625,7 @@ var require_format_number = __commonJS({
           output.push(options.prefix);
         }
         number = number.split(".");
-        if (options.round != null)
-          round(number, options.round);
+        if (options.round != null) round(number, options.round);
         if (options.truncate != null)
           number[1] = truncate(number[1], options.truncate);
         if (options.padLeft > 0)
@@ -2290,7 +2633,10 @@ var require_format_number = __commonJS({
         if (options.padRight > 0)
           number[1] = padRight(number[1], options.padRight);
         if (!overrideOptions.noSeparator && number[1])
-          number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);
+          number[1] = addDecimalSeparators(
+            number[1],
+            options.decimalsSeparator
+          );
         if (!overrideOptions.noSeparator && number[0])
           number[0] = addIntegerSeparators(number[0], options.integerSeparator);
         output.push(number[0]);
@@ -2329,7 +2675,7 @@ var require_format_number = __commonJS({
       function unformat(number, allowedSeparators) {
         allowedSeparators = allowedSeparators || [];
         if (options.allowedSeparators) {
-          options.allowedSeparators.forEach(function(s) {
+          options.allowedSeparators.forEach(function (s) {
             allowedSeparators.push(s);
           });
         }
@@ -2352,9 +2698,17 @@ var require_format_number = __commonJS({
         number = number.split(options.decimal);
         if (number.length > 2) {
           return false;
-        } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {
+        } else if (
+          options.truncate != null &&
+          number[1] &&
+          number[1].length > options.truncate
+        ) {
           return false;
-        } else if (options.round != null && number[1] && number[1].length > options.round) {
+        } else if (
+          options.round != null &&
+          number[1] &&
+          number[1].length > options.round
+        ) {
           return false;
         } else {
           return /^-?\d+\.?\d*$/.test(number);
@@ -2364,8 +2718,7 @@ var require_format_number = __commonJS({
     }
     function addIntegerSeparators(x, separator) {
       x += "";
-      if (!separator)
-        return x;
+      if (!separator) return x;
       var rgx = /(\d+)(\d{3})/;
       while (rgx.test(x)) {
         x = x.replace(rgx, "$1" + separator + "$2");
@@ -2374,8 +2727,7 @@ var require_format_number = __commonJS({
     }
     function addDecimalSeparators(x, separator) {
       x += "";
-      if (!separator)
-        return x;
+      if (!separator) return x;
       var rgx = /(\d{3})(\d+)/;
       while (rgx.test(x)) {
         x = x.replace(rgx, "$1" + separator + "$2");
@@ -2432,7 +2784,7 @@ var require_format_number = __commonJS({
       }
       return number;
     }
-  }
+  },
 });
 
 // ../../node_modules/date-fns/addDays/index.js
@@ -2440,7 +2792,7 @@ var require_addDays = __commonJS({
   "../../node_modules/date-fns/addDays/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addDays;
     var _index = _interopRequireDefault(require_toInteger());
@@ -2463,7 +2815,7 @@ var require_addDays = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/addMonths/index.js
@@ -2471,7 +2823,7 @@ var require_addMonths = __commonJS({
   "../../node_modules/date-fns/addMonths/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addMonths;
     var _index = _interopRequireDefault(require_toInteger());
@@ -2497,12 +2849,16 @@ var require_addMonths = __commonJS({
       if (dayOfMonth >= daysInMonth) {
         return endOfDesiredMonth;
       } else {
-        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
+        date.setFullYear(
+          endOfDesiredMonth.getFullYear(),
+          endOfDesiredMonth.getMonth(),
+          dayOfMonth
+        );
         return date;
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/add/index.js
@@ -2510,7 +2866,7 @@ var require_add = __commonJS({
   "../../node_modules/date-fns/add/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = add2;
     var _index = _interopRequireDefault(require_addDays());
@@ -2523,18 +2879,27 @@ var require_add = __commonJS({
     }
     function add2(dirtyDate, duration) {
       (0, _index4.default)(2, arguments);
-      if (!duration || typeof duration !== "object")
-        return new Date(NaN);
+      if (!duration || typeof duration !== "object") return new Date(NaN);
       var years = duration.years ? (0, _index5.default)(duration.years) : 0;
       var months = duration.months ? (0, _index5.default)(duration.months) : 0;
       var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;
       var days = duration.days ? (0, _index5.default)(duration.days) : 0;
       var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;
-      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;
-      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;
+      var minutes = duration.minutes
+        ? (0, _index5.default)(duration.minutes)
+        : 0;
+      var seconds = duration.seconds
+        ? (0, _index5.default)(duration.seconds)
+        : 0;
       var date = (0, _index3.default)(dirtyDate);
-      var dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date;
-      var dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths;
+      var dateWithMonths =
+        months || years
+          ? (0, _index2.default)(date, months + years * 12)
+          : date;
+      var dateWithDays =
+        days || weeks
+          ? (0, _index.default)(dateWithMonths, days + weeks * 7)
+          : dateWithMonths;
       var minutesToAdd = minutes + hours * 60;
       var secondsToAdd = seconds + minutesToAdd * 60;
       var msToAdd = secondsToAdd * 1e3;
@@ -2542,7 +2907,7 @@ var require_add = __commonJS({
       return finalDate;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getDate/index.js
@@ -2550,7 +2915,7 @@ var require_getDate = __commonJS({
   "../../node_modules/date-fns/getDate/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getDate2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2565,7 +2930,7 @@ var require_getDate = __commonJS({
       return dayOfMonth;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getDay/index.js
@@ -2573,7 +2938,7 @@ var require_getDay = __commonJS({
   "../../node_modules/date-fns/getDay/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getDay2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2588,7 +2953,7 @@ var require_getDay = __commonJS({
       return day;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getHours/index.js
@@ -2596,7 +2961,7 @@ var require_getHours = __commonJS({
   "../../node_modules/date-fns/getHours/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getHours2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2611,7 +2976,7 @@ var require_getHours = __commonJS({
       return hours;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getMinutes/index.js
@@ -2619,7 +2984,7 @@ var require_getMinutes = __commonJS({
   "../../node_modules/date-fns/getMinutes/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getMinutes2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2634,7 +2999,7 @@ var require_getMinutes = __commonJS({
       return minutes;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getMonth/index.js
@@ -2642,7 +3007,7 @@ var require_getMonth = __commonJS({
   "../../node_modules/date-fns/getMonth/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getMonth2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2657,7 +3022,7 @@ var require_getMonth = __commonJS({
       return month;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getYear/index.js
@@ -2665,7 +3030,7 @@ var require_getYear = __commonJS({
   "../../node_modules/date-fns/getYear/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getYear2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2678,7 +3043,7 @@ var require_getYear = __commonJS({
       return (0, _index.default)(dirtyDate).getFullYear();
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/compareAsc/index.js
@@ -2686,7 +3051,7 @@ var require_compareAsc = __commonJS({
   "../../node_modules/date-fns/compareAsc/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = compareAsc;
     var _index = _interopRequireDefault(require_toDate());
@@ -2708,15 +3073,18 @@ var require_compareAsc = __commonJS({
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInCalendarYears/index.js
 var require_differenceInCalendarYears = __commonJS({
-  "../../node_modules/date-fns/differenceInCalendarYears/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInCalendarYears/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInCalendarYears;
     var _index = _interopRequireDefault(require_toDate());
@@ -2731,7 +3099,7 @@ var require_differenceInCalendarYears = __commonJS({
       return dateLeft.getFullYear() - dateRight.getFullYear();
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInYears/index.js
@@ -2739,7 +3107,7 @@ var require_differenceInYears = __commonJS({
   "../../node_modules/date-fns/differenceInYears/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInYears;
     var _index = _interopRequireDefault(require_toDate());
@@ -2757,20 +3125,24 @@ var require_differenceInYears = __commonJS({
       var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
       dateLeft.setFullYear(1584);
       dateRight.setFullYear(1584);
-      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
+      var isLastYearNotFull =
+        (0, _index3.default)(dateLeft, dateRight) === -sign;
       var result = sign * (difference - Number(isLastYearNotFull));
       return result === 0 ? 0 : result;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInCalendarMonths/index.js
 var require_differenceInCalendarMonths = __commonJS({
-  "../../node_modules/date-fns/differenceInCalendarMonths/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInCalendarMonths/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInCalendarMonths;
     var _index = _interopRequireDefault(require_toDate());
@@ -2787,7 +3159,7 @@ var require_differenceInCalendarMonths = __commonJS({
       return yearDiff * 12 + monthDiff;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/endOfDay/index.js
@@ -2795,7 +3167,7 @@ var require_endOfDay = __commonJS({
   "../../node_modules/date-fns/endOfDay/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = endOfDay;
     var _index = _interopRequireDefault(require_toDate());
@@ -2810,7 +3182,7 @@ var require_endOfDay = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/endOfMonth/index.js
@@ -2818,7 +3190,7 @@ var require_endOfMonth = __commonJS({
   "../../node_modules/date-fns/endOfMonth/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = endOfMonth;
     var _index = _interopRequireDefault(require_toDate());
@@ -2835,7 +3207,7 @@ var require_endOfMonth = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/isLastDayOfMonth/index.js
@@ -2843,7 +3215,7 @@ var require_isLastDayOfMonth = __commonJS({
   "../../node_modules/date-fns/isLastDayOfMonth/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = isLastDayOfMonth;
     var _index = _interopRequireDefault(require_toDate());
@@ -2856,10 +3228,13 @@ var require_isLastDayOfMonth = __commonJS({
     function isLastDayOfMonth(dirtyDate) {
       (0, _index4.default)(1, arguments);
       var date = (0, _index.default)(dirtyDate);
-      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();
+      return (
+        (0, _index2.default)(date).getTime() ===
+        (0, _index3.default)(date).getTime()
+      );
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInMonths/index.js
@@ -2867,7 +3242,7 @@ var require_differenceInMonths = __commonJS({
   "../../node_modules/date-fns/differenceInMonths/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInMonths;
     var _index = _interopRequireDefault(require_toDate());
@@ -2892,8 +3267,13 @@ var require_differenceInMonths = __commonJS({
           dateLeft.setDate(30);
         }
         dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
-        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
-        if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {
+        var isLastMonthNotFull =
+          (0, _index3.default)(dateLeft, dateRight) === -sign;
+        if (
+          (0, _index5.default)((0, _index.default)(dirtyDateLeft)) &&
+          difference === 1 &&
+          (0, _index3.default)(dirtyDateLeft, dateRight) === 1
+        ) {
           isLastMonthNotFull = false;
         }
         result = sign * (difference - Number(isLastMonthNotFull));
@@ -2901,7 +3281,7 @@ var require_differenceInMonths = __commonJS({
       return result === 0 ? 0 : result;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/startOfDay/index.js
@@ -2909,7 +3289,7 @@ var require_startOfDay = __commonJS({
   "../../node_modules/date-fns/startOfDay/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfDay;
     var _index = _interopRequireDefault(require_toDate());
@@ -2924,18 +3304,23 @@ var require_startOfDay = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInCalendarDays/index.js
 var require_differenceInCalendarDays = __commonJS({
-  "../../node_modules/date-fns/differenceInCalendarDays/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInCalendarDays/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInCalendarDays;
-    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
+    var _index = _interopRequireDefault(
+      require_getTimezoneOffsetInMilliseconds()
+    );
     var _index2 = _interopRequireDefault(require_startOfDay());
     var _index3 = _interopRequireDefault(require_requiredArgs());
     function _interopRequireDefault(obj) {
@@ -2946,12 +3331,14 @@ var require_differenceInCalendarDays = __commonJS({
       (0, _index3.default)(2, arguments);
       var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);
       var startOfDayRight = (0, _index2.default)(dirtyDateRight);
-      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
-      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
+      var timestampLeft =
+        startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
+      var timestampRight =
+        startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
       return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInDays/index.js
@@ -2959,7 +3346,7 @@ var require_differenceInDays = __commonJS({
   "../../node_modules/date-fns/differenceInDays/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInDays;
     var _index = _interopRequireDefault(require_toDate());
@@ -2969,7 +3356,14 @@ var require_differenceInDays = __commonJS({
       return obj && obj.__esModule ? obj : { default: obj };
     }
     function compareLocalAsc(dateLeft, dateRight) {
-      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
+      var diff =
+        dateLeft.getFullYear() - dateRight.getFullYear() ||
+        dateLeft.getMonth() - dateRight.getMonth() ||
+        dateLeft.getDate() - dateRight.getDate() ||
+        dateLeft.getHours() - dateRight.getHours() ||
+        dateLeft.getMinutes() - dateRight.getMinutes() ||
+        dateLeft.getSeconds() - dateRight.getSeconds() ||
+        dateLeft.getMilliseconds() - dateRight.getMilliseconds();
       if (diff < 0) {
         return -1;
       } else if (diff > 0) {
@@ -2985,12 +3379,14 @@ var require_differenceInDays = __commonJS({
       var sign = compareLocalAsc(dateLeft, dateRight);
       var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
       dateLeft.setDate(dateLeft.getDate() - sign * difference);
-      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);
+      var isLastDayNotFull = Number(
+        compareLocalAsc(dateLeft, dateRight) === -sign
+      );
       var result = sign * (difference - isLastDayNotFull);
       return result === 0 ? 0 : result;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/constants/index.js
@@ -2998,9 +3394,21 @@ var require_constants = __commonJS({
   "../../node_modules/date-fns/constants/index.js"(exports) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
-    exports.secondsInMinute = exports.secondsInHour = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInHour = exports.minTime = exports.millisecondsInSecond = exports.millisecondsInHour = exports.millisecondsInMinute = exports.maxTime = exports.daysInWeek = void 0;
+    exports.secondsInMinute =
+      exports.secondsInHour =
+      exports.quartersInYear =
+      exports.monthsInYear =
+      exports.monthsInQuarter =
+      exports.minutesInHour =
+      exports.minTime =
+      exports.millisecondsInSecond =
+      exports.millisecondsInHour =
+      exports.millisecondsInMinute =
+      exports.maxTime =
+      exports.daysInWeek =
+        void 0;
     var daysInWeek = 7;
     exports.daysInWeek = daysInWeek;
     var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
@@ -3025,15 +3433,18 @@ var require_constants = __commonJS({
     exports.secondsInHour = secondsInHour;
     var secondsInMinute = 60;
     exports.secondsInMinute = secondsInMinute;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInMilliseconds/index.js
 var require_differenceInMilliseconds = __commonJS({
-  "../../node_modules/date-fns/differenceInMilliseconds/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInMilliseconds/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInMilliseconds;
     var _index = _interopRequireDefault(require_toDate());
@@ -3043,10 +3454,13 @@ var require_differenceInMilliseconds = __commonJS({
     }
     function differenceInMilliseconds(dateLeft, dateRight) {
       (0, _index2.default)(2, arguments);
-      return (0, _index.default)(dateLeft).getTime() - (0, _index.default)(dateRight).getTime();
+      return (
+        (0, _index.default)(dateLeft).getTime() -
+        (0, _index.default)(dateRight).getTime()
+      );
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/roundingMethods/index.js
@@ -3054,22 +3468,22 @@ var require_roundingMethods = __commonJS({
   "../../node_modules/date-fns/_lib/roundingMethods/index.js"(exports) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.getRoundingMethod = getRoundingMethod;
     var roundingMap = {
       ceil: Math.ceil,
       round: Math.round,
       floor: Math.floor,
-      trunc: function(value) {
+      trunc: function (value) {
         return value < 0 ? Math.ceil(value) : Math.floor(value);
-      }
+      },
     };
     var defaultRoundingMethod = "trunc";
     function getRoundingMethod(method) {
       return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
     }
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInHours/index.js
@@ -3077,7 +3491,7 @@ var require_differenceInHours = __commonJS({
   "../../node_modules/date-fns/differenceInHours/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInHours;
     var _index = require_constants();
@@ -3089,11 +3503,14 @@ var require_differenceInHours = __commonJS({
     }
     function differenceInHours(dateLeft, dateRight, options) {
       (0, _index3.default)(2, arguments);
-      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;
-      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
+      var diff =
+        (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;
+      return (0, _index4.getRoundingMethod)(
+        options === null || options === void 0 ? void 0 : options.roundingMethod
+      )(diff);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInMinutes/index.js
@@ -3101,7 +3518,7 @@ var require_differenceInMinutes = __commonJS({
   "../../node_modules/date-fns/differenceInMinutes/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInMinutes;
     var _index = require_constants();
@@ -3113,11 +3530,14 @@ var require_differenceInMinutes = __commonJS({
     }
     function differenceInMinutes(dateLeft, dateRight, options) {
       (0, _index3.default)(2, arguments);
-      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;
-      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
+      var diff =
+        (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;
+      return (0, _index4.getRoundingMethod)(
+        options === null || options === void 0 ? void 0 : options.roundingMethod
+      )(diff);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInSeconds/index.js
@@ -3125,7 +3545,7 @@ var require_differenceInSeconds = __commonJS({
   "../../node_modules/date-fns/differenceInSeconds/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInSeconds;
     var _index = _interopRequireDefault(require_differenceInMilliseconds());
@@ -3137,10 +3557,12 @@ var require_differenceInSeconds = __commonJS({
     function differenceInSeconds(dateLeft, dateRight, options) {
       (0, _index2.default)(2, arguments);
       var diff = (0, _index.default)(dateLeft, dateRight) / 1e3;
-      return (0, _index3.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
+      return (0, _index3.getRoundingMethod)(
+        options === null || options === void 0 ? void 0 : options.roundingMethod
+      )(diff);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/subDays/index.js
@@ -3148,7 +3570,7 @@ var require_subDays = __commonJS({
   "../../node_modules/date-fns/subDays/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = subDays;
     var _index = _interopRequireDefault(require_toInteger());
@@ -3163,7 +3585,7 @@ var require_subDays = __commonJS({
       return (0, _index2.default)(dirtyDate, -amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/subMonths/index.js
@@ -3171,7 +3593,7 @@ var require_subMonths = __commonJS({
   "../../node_modules/date-fns/subMonths/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = subMonths;
     var _index = _interopRequireDefault(require_toInteger());
@@ -3186,7 +3608,7 @@ var require_subMonths = __commonJS({
       return (0, _index2.default)(dirtyDate, -amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/sub/index.js
@@ -3194,7 +3616,7 @@ var require_sub = __commonJS({
   "../../node_modules/date-fns/sub/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = sub2;
     var _index = _interopRequireDefault(require_subDays());
@@ -3206,17 +3628,23 @@ var require_sub = __commonJS({
     }
     function sub2(date, duration) {
       (0, _index3.default)(2, arguments);
-      if (!duration || typeof duration !== "object")
-        return new Date(NaN);
+      if (!duration || typeof duration !== "object") return new Date(NaN);
       var years = duration.years ? (0, _index4.default)(duration.years) : 0;
       var months = duration.months ? (0, _index4.default)(duration.months) : 0;
       var weeks = duration.weeks ? (0, _index4.default)(duration.weeks) : 0;
       var days = duration.days ? (0, _index4.default)(duration.days) : 0;
       var hours = duration.hours ? (0, _index4.default)(duration.hours) : 0;
-      var minutes = duration.minutes ? (0, _index4.default)(duration.minutes) : 0;
-      var seconds = duration.seconds ? (0, _index4.default)(duration.seconds) : 0;
+      var minutes = duration.minutes
+        ? (0, _index4.default)(duration.minutes)
+        : 0;
+      var seconds = duration.seconds
+        ? (0, _index4.default)(duration.seconds)
+        : 0;
       var dateWithoutMonths = (0, _index2.default)(date, months + years * 12);
-      var dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7);
+      var dateWithoutDays = (0, _index.default)(
+        dateWithoutMonths,
+        days + weeks * 7
+      );
       var minutestoSub = minutes + hours * 60;
       var secondstoSub = seconds + minutestoSub * 60;
       var mstoSub = secondstoSub * 1e3;
@@ -3224,7 +3652,7 @@ var require_sub = __commonJS({
       return finalDate;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/intervalToDuration/index.js
@@ -3232,7 +3660,7 @@ var require_intervalToDuration = __commonJS({
   "../../node_modules/date-fns/intervalToDuration/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = intervalToDuration2;
     var _index = _interopRequireDefault(require_compareAsc());
@@ -3250,7 +3678,8 @@ var require_intervalToDuration = __commonJS({
       return obj && obj.__esModule ? obj : { default: obj };
     }
     function intervalToDuration2(_ref) {
-      var start = _ref.start, end = _ref.end;
+      var start = _ref.start,
+        end = _ref.end;
       (0, _index9.default)(1, arguments);
       var dateLeft = (0, _index10.default)(start);
       var dateRight = (0, _index10.default)(end);
@@ -3266,34 +3695,42 @@ var require_intervalToDuration = __commonJS({
         days: 0,
         hours: 0,
         minutes: 0,
-        seconds: 0
+        seconds: 0,
       };
       var sign = (0, _index.default)(dateLeft, dateRight);
       duration.years = Math.abs((0, _index2.default)(dateLeft, dateRight));
       var remainingMonths = (0, _index11.default)(dateLeft, {
-        years: sign * duration.years
+        years: sign * duration.years,
       });
-      duration.months = Math.abs((0, _index3.default)(remainingMonths, dateRight));
+      duration.months = Math.abs(
+        (0, _index3.default)(remainingMonths, dateRight)
+      );
       var remainingDays = (0, _index11.default)(remainingMonths, {
-        months: sign * duration.months
+        months: sign * duration.months,
       });
       duration.days = Math.abs((0, _index4.default)(remainingDays, dateRight));
       var remainingHours = (0, _index11.default)(remainingDays, {
-        days: sign * duration.days
+        days: sign * duration.days,
       });
-      duration.hours = Math.abs((0, _index5.default)(remainingHours, dateRight));
+      duration.hours = Math.abs(
+        (0, _index5.default)(remainingHours, dateRight)
+      );
       var remainingMinutes = (0, _index11.default)(remainingHours, {
-        hours: sign * duration.hours
+        hours: sign * duration.hours,
       });
-      duration.minutes = Math.abs((0, _index6.default)(remainingMinutes, dateRight));
+      duration.minutes = Math.abs(
+        (0, _index6.default)(remainingMinutes, dateRight)
+      );
       var remainingSeconds = (0, _index11.default)(remainingMinutes, {
-        minutes: sign * duration.minutes
+        minutes: sign * duration.minutes,
       });
-      duration.seconds = Math.abs((0, _index7.default)(remainingSeconds, dateRight));
+      duration.seconds = Math.abs(
+        (0, _index7.default)(remainingSeconds, dateRight)
+      );
       return duration;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // src/third-party/collection.tsx
@@ -3301,7 +3738,7 @@ import * as React53 from "react";
 import {
   getBlockCollectionId,
   getBlockParentPage as getBlockParentPage2,
-  getTextContent as getTextContent4
+  getTextContent as getTextContent4,
 } from "notion-utils";
 import { useLocalStorage, useWindowSize } from "react-use";
 
@@ -3332,17 +3769,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -3376,7 +3821,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -3384,13 +3829,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -3400,12 +3845,23 @@ import * as React2 from "react";
 // src/icons/type-github.tsx
 import * as React from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -3413,18 +3869,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React2.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React2.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -3439,24 +3910,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React2.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React2.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React2.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React2.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React2.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React2.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React2.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React2.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React2.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/text.tsx
@@ -3470,7 +3975,10 @@ var GracefulImage = (props) => {
   if (isBrowser) {
     return /* @__PURE__ */ React3.createElement(Img, __spreadValues({}, props));
   } else {
-    return /* @__PURE__ */ React3.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React3.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
@@ -3478,208 +3986,314 @@ var GracefulImage = (props) => {
 import * as React4 from "react";
 import { getBlockTitle } from "notion-utils";
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React4.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React4.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React4.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React4.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React4.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React4.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React4.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React4.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React4.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React4.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React4.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React4.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
-};
+  return /* @__PURE__ */ React4.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React4.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React4.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React4.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
+};
 var PageTitle = React4.memo(PageTitleImpl);
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React5.createElement(React5.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React5.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React5.createElement(React5.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React5.createElement(
+    React5.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React5.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React5.createElement(
+                React5.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React5.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React5.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React5.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React5.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React5.createElement(GracefulImage, {
+                      className: "notion-user",
+                      src: mapImageUrl(user.profile_photo, block),
+                      alt: name,
+                    });
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React5.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React5.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React5.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React5.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React5.createElement("b", null, element);
+              case "i":
+                return /* @__PURE__ */ React5.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React5.createElement("s", null, element);
+              case "_":
+                return /* @__PURE__ */ React5.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React5.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React5.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React5.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React5.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React5.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React5.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React5.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React5.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React5.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React5.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React5.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React5.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React5.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React5.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React5.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React5.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React5.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React5.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React5.createElement(React5.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React5.createElement(React5.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React5.createElement(React5.Fragment, null, text));
+          return /* @__PURE__ */ React5.createElement(
+            React5.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/components/lazy-image.tsx
@@ -3687,32 +4301,43 @@ import * as React6 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React6.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React6.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -3722,18 +4347,18 @@ var LazyImage = (_a) => {
   const attachZoom = React6.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React6.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React6.createElement(components.Image, {
         src,
@@ -3745,51 +4370,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React6.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React6.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React6.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React6.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React6.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React6.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React6.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React6.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React6.createElement(components.Image, {
@@ -3800,18 +4440,24 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React6.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React6.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
@@ -3823,84 +4469,144 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React7 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React7.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React7.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React7.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React7.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React10 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle2 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle2,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React8 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React8.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React8.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React8.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React8.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React9 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React9.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React9.createElement("defs", null, /* @__PURE__ */ React9.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React9.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React9.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React9.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React9.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React9.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React9.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React9.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React9.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React9.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React9.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React9.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React9.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React9.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React9.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React9.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React9.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React9.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React9.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/search-dialog.tsx
@@ -3911,7 +4617,7 @@ var SearchDialog = class extends React10.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -3922,7 +4628,11 @@ var SearchDialog = class extends React10.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -3931,67 +4641,81 @@ var SearchDialog = class extends React10.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle2(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle2(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React10.createRef();
   }
   componentDidMount() {
@@ -4002,87 +4726,189 @@ var SearchDialog = class extends React10.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React10.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React10.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React10.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React10.createElement(SearchIcon, null)), /* @__PURE__ */ React10.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React10.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React10.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React10.createElement(React10.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React10.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React10.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React10.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React10.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React10.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React10.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React10.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React10.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React10.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React10.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React10.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React10.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React10.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React10.createElement(
+                React10.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React10.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React10.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React10.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React10.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React10.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React10.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React10.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React10.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React10.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React10.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React10.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React10.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React10.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React10.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React10.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React10.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React10.createElement("div", null, /* @__PURE__ */ React10.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React10.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React10.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React10.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React11.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React11.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React11.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React11.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React11.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React11.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React11.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React11.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -4093,38 +4919,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React11.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React11.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React11.createElement(React11.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React11.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React11.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React11.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React11.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React11.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React11.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React11.createElement(
+        React11.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React11.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React11.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React11.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React11.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React11.useState(isShowingSearch);
   React11.useEffect(() => {
@@ -4150,20 +5009,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, hasSearch && /* @__PURE__ */ React11.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React11.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React11.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React11.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React11.createElement(
+    React11.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React11.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React11.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React11.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React11.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/components/asset.tsx
@@ -4173,9 +5050,11 @@ import { getTextContent } from "notion-utils";
 // src/components/lite-youtube-embed.tsx
 import * as React12 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -4187,7 +5066,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React12.useMemo(
@@ -4199,64 +5078,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React12.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React12.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React12.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React12.useState(false);
   const warmConnections = React12.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React12.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React12.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React12.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React12.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React12.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React12.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React12.createElement(
+    React12.Fragment,
+    null,
+    /* @__PURE__ */ React12.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React12.createElement(
+        React12.Fragment,
+        null,
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React12.createElement(
+        React12.Fragment,
+        null,
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React12.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React12.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React12.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React12.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -4273,7 +5179,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -4288,7 +5194,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -4298,7 +5204,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -4359,28 +5265,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React13.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React13.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React13.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -4390,29 +5305,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React13.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React13.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React13.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -4427,7 +5367,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React13.createElement("iframe", {
@@ -4438,29 +5378,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React13.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React13.createElement(
+    React13.Fragment,
+    null,
+    /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -4471,7 +5429,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId2(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -4480,32 +5447,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React14.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React14.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React14.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React14.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React14.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React14.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React14.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React14.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId2(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React14.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React14.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -4531,11 +5527,18 @@ import * as React16 from "react";
 // src/icons/check.tsx
 import * as React15 from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React15.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React15.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React15.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React15.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -4543,17 +5546,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React16.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React16.createElement(check_default, null));
+    content = /* @__PURE__ */ React16.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React16.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React16.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React16.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React16.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/next.tsx
@@ -4561,83 +5572,98 @@ import * as React17 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React17.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React17.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React17.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React17.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React17.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React17.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React17.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React18.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React18.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React18.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React18.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React18.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React18.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React18.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React18.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyLink = (_a) => {
-  var _b = _a, { href, rel, target, title } = _b, rest = __objRest(_b, ["href", "rel", "target", "title"]);
-  return /* @__PURE__ */ React18.createElement("span", __spreadValues({}, rest));
+  var _b = _a,
+    { href, rel, target, title } = _b,
+    rest = __objRest(_b, ["href", "rel", "target", "title"]);
+  return /* @__PURE__ */ React18.createElement(
+    "span",
+    __spreadValues({}, rest)
+  );
 };
 var dummyComponent = (name) => () => {
   console.warn(
@@ -4675,7 +5701,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -4684,7 +5710,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -4704,23 +5730,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React18.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -4742,17 +5770,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React18.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React18.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React18.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -4762,34 +5802,53 @@ var useNotionContext = () => {
 // src/icons/default-page-icon.tsx
 import * as React19 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React19.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React19.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React19.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React19.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle3(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -4797,96 +5856,143 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React20.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React20.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React20.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React20.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React20.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React20.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React20.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React20.memo(PageIconImpl);
 
 // src/icons/collection-view-board.tsx
 import * as React21 from "react";
 function SvgCollectionViewBoard(props) {
-  return /* @__PURE__ */ React21.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React21.createElement("path", {
-    d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z"
-  }));
+  return /* @__PURE__ */ React21.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React21.createElement("path", {
+      d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z",
+    })
+  );
 }
 var collection_view_board_default = SvgCollectionViewBoard;
 
 // src/icons/collection-view-calendar.tsx
 import * as React22 from "react";
 function SvgCollectionViewCalendar(props) {
-  return /* @__PURE__ */ React22.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React22.createElement("path", {
-    d: "M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z"
-  }));
+  return /* @__PURE__ */ React22.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React22.createElement("path", {
+      d: "M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z",
+    })
+  );
 }
 var collection_view_calendar_default = SvgCollectionViewCalendar;
 
 // src/icons/collection-view-gallery.tsx
 import * as React23 from "react";
 function SvgCollectionViewGallery(props) {
-  return /* @__PURE__ */ React23.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React23.createElement("path", {
-    d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z"
-  }));
+  return /* @__PURE__ */ React23.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React23.createElement("path", {
+      d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z",
+    })
+  );
 }
 var collection_view_gallery_default = SvgCollectionViewGallery;
 
 // src/icons/collection-view-list.tsx
 import * as React24 from "react";
 function SvgCollectionViewList(props) {
-  return /* @__PURE__ */ React24.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React24.createElement("path", {
-    d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z"
-  }));
+  return /* @__PURE__ */ React24.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React24.createElement("path", {
+      d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z",
+    })
+  );
 }
 var collection_view_list_default = SvgCollectionViewList;
 
 // src/icons/collection-view-table.tsx
 import * as React25 from "react";
 function SvgCollectionViewTable(props) {
-  return /* @__PURE__ */ React25.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React25.createElement("path", {
-    d: "M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z"
-  }));
+  return /* @__PURE__ */ React25.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React25.createElement("path", {
+      d: "M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z",
+    })
+  );
 }
 var collection_view_table_default = SvgCollectionViewTable;
 
@@ -4896,14 +6002,12 @@ var iconMap = {
   board: collection_view_board_default,
   gallery: collection_view_gallery_default,
   list: collection_view_list_default,
-  calendar: collection_view_calendar_default
+  calendar: collection_view_calendar_default,
 };
 var CollectionViewIcon = (_a) => {
-  var _b = _a, {
-    type
-  } = _b, rest = __objRest(_b, [
-    "type"
-  ]);
+  var _b = _a,
+    { type } = _b,
+    rest = __objRest(_b, ["type"]);
   const icon = iconMap[type];
   if (!icon) {
     return null;
@@ -4920,176 +6024,288 @@ import * as React42 from "react";
 // src/icons/type-checkbox.tsx
 import * as React26 from "react";
 function SvgTypeCheckbox(props) {
-  return /* @__PURE__ */ React26.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React26.createElement("path", {
-    d: "M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z"
-  }));
+  return /* @__PURE__ */ React26.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React26.createElement("path", {
+      d: "M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z",
+    })
+  );
 }
 var type_checkbox_default = SvgTypeCheckbox;
 
 // src/icons/type-date.tsx
 import * as React27 from "react";
 function SvgTypeDate(props) {
-  return /* @__PURE__ */ React27.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React27.createElement("path", {
-    d: "M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z"
-  }));
+  return /* @__PURE__ */ React27.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React27.createElement("path", {
+      d: "M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z",
+    })
+  );
 }
 var type_date_default = SvgTypeDate;
 
 // src/icons/type-email.tsx
 import * as React28 from "react";
 function SvgTypeEmail(props) {
-  return /* @__PURE__ */ React28.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React28.createElement("path", {
-    d: "M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z"
-  }));
+  return /* @__PURE__ */ React28.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React28.createElement("path", {
+      d: "M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z",
+    })
+  );
 }
 var type_email_default = SvgTypeEmail;
 
 // src/icons/type-file.tsx
 import * as React29 from "react";
 function SvgTypeFile(props) {
-  return /* @__PURE__ */ React29.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React29.createElement("path", {
-    d: "M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z"
-  }));
+  return /* @__PURE__ */ React29.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React29.createElement("path", {
+      d: "M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z",
+    })
+  );
 }
 var type_file_default = SvgTypeFile;
 
 // src/icons/type-formula.tsx
 import * as React30 from "react";
 function SvgTypeFormula(props) {
-  return /* @__PURE__ */ React30.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React30.createElement("path", {
-    d: "M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z"
-  }));
+  return /* @__PURE__ */ React30.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React30.createElement("path", {
+      d: "M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z",
+    })
+  );
 }
 var type_formula_default = SvgTypeFormula;
 
 // src/icons/type-multi-select.tsx
 import * as React31 from "react";
 function SvgTypeMultiSelect(props) {
-  return /* @__PURE__ */ React31.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React31.createElement("path", {
-    d: "M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z"
-  }));
+  return /* @__PURE__ */ React31.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React31.createElement("path", {
+      d: "M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z",
+    })
+  );
 }
 var type_multi_select_default = SvgTypeMultiSelect;
 
 // src/icons/type-number.tsx
 import * as React32 from "react";
 function SvgTypeNumber(props) {
-  return /* @__PURE__ */ React32.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React32.createElement("path", {
-    d: "M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z"
-  }));
+  return /* @__PURE__ */ React32.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React32.createElement("path", {
+      d: "M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z",
+    })
+  );
 }
 var type_number_default = SvgTypeNumber;
 
 // src/icons/type-person.tsx
 import * as React33 from "react";
 function SvgTypePerson(props) {
-  return /* @__PURE__ */ React33.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React33.createElement("path", {
-    d: "M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z"
-  }));
+  return /* @__PURE__ */ React33.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React33.createElement("path", {
+      d: "M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z",
+    })
+  );
 }
 var type_person_default = SvgTypePerson;
 
 // src/icons/type-person-2.tsx
 import * as React34 from "react";
 function SvgTypePerson2(props) {
-  return /* @__PURE__ */ React34.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React34.createElement("path", {
-    d: "M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z"
-  }));
+  return /* @__PURE__ */ React34.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React34.createElement("path", {
+      d: "M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z",
+    })
+  );
 }
 var type_person_2_default = SvgTypePerson2;
 
 // src/icons/type-phone-number.tsx
 import * as React35 from "react";
 function SvgTypePhoneNumber(props) {
-  return /* @__PURE__ */ React35.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React35.createElement("path", {
-    d: "M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z"
-  }));
+  return /* @__PURE__ */ React35.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React35.createElement("path", {
+      d: "M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z",
+    })
+  );
 }
 var type_phone_number_default = SvgTypePhoneNumber;
 
 // src/icons/type-relation.tsx
 import * as React36 from "react";
 function SvgTypeRelation(props) {
-  return /* @__PURE__ */ React36.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React36.createElement("path", {
-    d: "M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z"
-  }));
+  return /* @__PURE__ */ React36.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React36.createElement("path", {
+      d: "M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z",
+    })
+  );
 }
 var type_relation_default = SvgTypeRelation;
 
 // src/icons/type-select.tsx
 import * as React37 from "react";
 function SvgTypeSelect(props) {
-  return /* @__PURE__ */ React37.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React37.createElement("path", {
-    d: "M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z"
-  }));
+  return /* @__PURE__ */ React37.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React37.createElement("path", {
+      d: "M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z",
+    })
+  );
 }
 var type_select_default = SvgTypeSelect;
 
 // src/icons/type-text.tsx
 import * as React38 from "react";
 function SvgTypeText(props) {
-  return /* @__PURE__ */ React38.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React38.createElement("path", {
-    d: "M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z"
-  }));
+  return /* @__PURE__ */ React38.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React38.createElement("path", {
+      d: "M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z",
+    })
+  );
 }
 var type_text_default = SvgTypeText;
 
 // src/icons/type-timestamp.tsx
 import * as React39 from "react";
 function SvgTypeTimestamp(props) {
-  return /* @__PURE__ */ React39.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React39.createElement("path", {
-    d: "M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z"
-  }));
+  return /* @__PURE__ */ React39.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React39.createElement("path", {
+      d: "M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z",
+    })
+  );
 }
 var type_timestamp_default = SvgTypeTimestamp;
 
 // src/icons/type-title.tsx
 import * as React40 from "react";
 function SvgTypeTitle(props) {
-  return /* @__PURE__ */ React40.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React40.createElement("path", {
-    d: "M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z"
-  }));
+  return /* @__PURE__ */ React40.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React40.createElement("path", {
+      d: "M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z",
+    })
+  );
 }
 var type_title_default = SvgTypeTitle;
 
 // src/icons/type-url.tsx
 import * as React41 from "react";
 function SvgTypeUrl(props) {
-  return /* @__PURE__ */ React41.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React41.createElement("path", {
-    d: "M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z"
-  }));
+  return /* @__PURE__ */ React41.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React41.createElement("path", {
+      d: "M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z",
+    })
+  );
 }
 var type_url_default = SvgTypeUrl;
 
@@ -5112,30 +6328,36 @@ var iconMap2 = {
   created_time: type_timestamp_default,
   last_edited_time: type_timestamp_default,
   created_by: type_person_2_default,
-  last_edited_by: type_person_2_default
+  last_edited_by: type_person_2_default,
 };
 var PropertyIcon = (_a) => {
-  var _b = _a, {
-    type
-  } = _b, rest = __objRest(_b, [
-    "type"
-  ]);
+  var _b = _a,
+    { type } = _b,
+    rest = __objRest(_b, ["type"]);
   const icon = iconMap2[type];
-  if (!icon)
-    return null;
+  if (!icon) return null;
   return icon(rest);
 };
 
 // src/third-party/collection-column-title.tsx
 var CollectionColumnTitle = ({ schema }) => {
-  return /* @__PURE__ */ React42.createElement("div", {
-    className: "notion-collection-column-title"
-  }, /* @__PURE__ */ React42.createElement(PropertyIcon, {
-    className: "notion-collection-column-title-icon",
-    type: schema.type
-  }), /* @__PURE__ */ React42.createElement("div", {
-    className: "notion-collection-column-title-body"
-  }, schema.name));
+  return /* @__PURE__ */ React42.createElement(
+    "div",
+    {
+      className: "notion-collection-column-title",
+    },
+    /* @__PURE__ */ React42.createElement(PropertyIcon, {
+      className: "notion-collection-column-title-icon",
+      type: schema.type,
+    }),
+    /* @__PURE__ */ React42.createElement(
+      "div",
+      {
+        className: "notion-collection-column-title-body",
+      },
+      schema.name
+    )
+  );
 };
 
 // src/third-party/property.tsx
@@ -5156,7 +6378,9 @@ var import_intervalToDuration = __toESM(require_intervalToDuration(), 1);
 var import_sub = __toESM(require_sub(), 1);
 import { getDateValue, getTextContent as getTextContent2 } from "notion-utils";
 function evalFormula(formula, context) {
-  const _a = context, { endDate } = _a, ctx2 = __objRest(_a, ["endDate"]);
+  const _a = context,
+    { endDate } = _a,
+    ctx2 = __objRest(_a, ["endDate"]);
   switch (formula == null ? void 0 : formula.type) {
     case "symbol":
       return formula.name === "true";
@@ -5216,7 +6440,9 @@ function evalFormula(formula, context) {
       return evalFunctionFormula(formula, ctx2);
     default:
       throw new Error(
-        `invalid or unsupported formula "${formula == null ? void 0 : formula.type}`
+        `invalid or unsupported formula "${
+          formula == null ? void 0 : formula.type
+        }`
       );
   }
 }
@@ -5230,7 +6456,9 @@ function evalFunctionFormula(formula, ctx2) {
     case "equal":
       return evalFormula(args[0], ctx2) == evalFormula(args[1], ctx2);
     case "if":
-      return evalFormula(args[0], ctx2) ? evalFormula(args[1], ctx2) : evalFormula(args[2], ctx2);
+      return evalFormula(args[0], ctx2)
+        ? evalFormula(args[1], ctx2)
+        : evalFormula(args[2], ctx2);
     case "larger":
       return evalFormula(args[0], ctx2) > evalFormula(args[1], ctx2);
     case "largerEq":
@@ -5293,10 +6521,7 @@ function evalFunctionFormula(formula, ctx2) {
     case "multiply":
       return evalFormula(args[0], ctx2) * evalFormula(args[1], ctx2);
     case "pow":
-      return Math.pow(
-        evalFormula(args[0], ctx2),
-        evalFormula(args[1], ctx2)
-      );
+      return Math.pow(evalFormula(args[0], ctx2), evalFormula(args[1], ctx2));
     case "round":
       return Math.round(evalFormula(args[0], ctx2));
     case "sign":
@@ -5316,9 +6541,7 @@ function evalFunctionFormula(formula, ctx2) {
       return values.join("");
     }
     case "contains":
-      return evalFormula(args[0], ctx2).includes(
-        evalFormula(args[1], ctx2)
-      );
+      return evalFormula(args[0], ctx2).includes(evalFormula(args[1], ctx2));
     case "format": {
       const value = evalFormula(args[0], ctx2);
       switch (typeof value) {
@@ -5380,7 +6603,7 @@ function evalFunctionFormula(formula, ctx2) {
       const unit = evalFormula(args[1], ctx2);
       return (0, import_intervalToDuration.default)({
         start: date2,
-        end: date1
+        end: date1,
       })[unit];
     }
     case "dateSubtract": {
@@ -5392,13 +6615,13 @@ function evalFunctionFormula(formula, ctx2) {
     case "day":
       return (0, import_getDay.default)(evalFormula(args[0], ctx2));
     case "end":
-      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: true }));
+      return evalFormula(
+        args[0],
+        __spreadProps(__spreadValues({}, ctx2), { endDate: true })
+      );
     case "formatDate": {
       const date = evalFormula(args[0], ctx2);
-      const formatValue = evalFormula(args[1], ctx2).replace(
-        "dddd",
-        "eeee"
-      );
+      const formatValue = evalFormula(args[1], ctx2).replace("dddd", "eeee");
       return (0, import_format.default)(date, formatValue);
     }
     case "fromTimestamp":
@@ -5412,14 +6635,19 @@ function evalFunctionFormula(formula, ctx2) {
     case "now":
       return new Date();
     case "start":
-      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: false }));
+      return evalFormula(
+        args[0],
+        __spreadProps(__spreadValues({}, ctx2), { endDate: false })
+      );
     case "timestamp":
       return evalFormula(args[0], ctx2).getTime();
     case "year":
       return (0, import_getYear.default)(evalFormula(args[0], ctx2));
     default:
       throw new Error(
-        `invalid or unsupported function formula "${formula == null ? void 0 : formula.type}`
+        `invalid or unsupported function formula "${
+          formula == null ? void 0 : formula.type
+        }`
       );
   }
 }
@@ -5428,9 +6656,15 @@ function evalFunctionFormula(formula, ctx2) {
 var Property = (props) => {
   const { components } = useNotionContext();
   if (components.Property) {
-    return /* @__PURE__ */ React43.createElement(components.Property, __spreadValues({}, props));
+    return /* @__PURE__ */ React43.createElement(
+      components.Property,
+      __spreadValues({}, props)
+    );
   } else {
-    return /* @__PURE__ */ React43.createElement(PropertyImplMemo, __spreadValues({}, props));
+    return /* @__PURE__ */ React43.createElement(
+      PropertyImplMemo,
+      __spreadValues({}, props)
+    );
   }
 };
 var PropertyImpl = (props) => {
@@ -5441,234 +6675,308 @@ var PropertyImpl = (props) => {
     block,
     collection,
     inline = false,
-    linkToTitlePage = true
+    linkToTitlePage = true,
   } = props;
   const renderTextValue = React43.useMemo(
-    () => function TextProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function TextProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderDateValue = React43.useMemo(
-    () => function DateProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function DateProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderRelationValue = React43.useMemo(
-    () => function RelationProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function RelationProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderFormulaValue = React43.useMemo(
-    () => function FormulaProperty() {
-      let content2;
-      try {
-        content2 = evalFormula(schema.formula, {
-          schema: collection == null ? void 0 : collection.schema,
-          properties: block == null ? void 0 : block.properties
-        });
-        if (isNaN(content2)) {
-        }
-        if (content2 instanceof Date) {
-          content2 = (0, import_format2.default)(content2, "MMM d, YYY hh:mm aa");
+    () =>
+      function FormulaProperty() {
+        let content2;
+        try {
+          content2 = evalFormula(schema.formula, {
+            schema: collection == null ? void 0 : collection.schema,
+            properties: block == null ? void 0 : block.properties,
+          });
+          if (isNaN(content2)) {
+          }
+          if (content2 instanceof Date) {
+            content2 = (0, import_format2.default)(
+              content2,
+              "MMM d, YYY hh:mm aa"
+            );
+          }
+        } catch (err) {
+          content2 = null;
         }
-      } catch (err) {
-        content2 = null;
-      }
-      return content2;
-    },
-    [block == null ? void 0 : block.properties, collection == null ? void 0 : collection.schema, schema]
+        return content2;
+      },
+    [
+      block == null ? void 0 : block.properties,
+      collection == null ? void 0 : collection.schema,
+      schema,
+    ]
   );
   const renderTitleValue = React43.useMemo(
-    () => function FormulaTitle() {
-      if (block && linkToTitlePage) {
-        return /* @__PURE__ */ React43.createElement(components.PageLink, {
-          className: cs("notion-page-link"),
-          href: mapPageUrl(block.id)
-        }, /* @__PURE__ */ React43.createElement(PageTitle, {
-          block
-        }));
-      } else {
-        return /* @__PURE__ */ React43.createElement(Text, {
-          value: data,
-          block
-        });
-      }
-    },
+    () =>
+      function FormulaTitle() {
+        if (block && linkToTitlePage) {
+          return /* @__PURE__ */ React43.createElement(
+            components.PageLink,
+            {
+              className: cs("notion-page-link"),
+              href: mapPageUrl(block.id),
+            },
+            /* @__PURE__ */ React43.createElement(PageTitle, {
+              block,
+            })
+          );
+        } else {
+          return /* @__PURE__ */ React43.createElement(Text, {
+            value: data,
+            block,
+          });
+        }
+      },
     [block, components, data, linkToTitlePage, mapPageUrl]
   );
   const renderPersonValue = React43.useMemo(
-    () => function PersonProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function PersonProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderFileValue = React43.useMemo(
-    () => function FileProperty() {
-      const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());
-      return files.map((file, i) => /* @__PURE__ */ React43.createElement(components.Link, {
-        key: i,
-        className: "notion-property-file",
-        href: mapImageUrl(file[2], block),
-        target: "_blank",
-        rel: "noreferrer noopener"
-      }, /* @__PURE__ */ React43.createElement(GracefulImage, {
-        alt: file[0],
-        src: mapImageUrl(file[2], block),
-        loading: "lazy"
-      })));
-    },
+    () =>
+      function FileProperty() {
+        const files = data
+          .filter((v) => v.length === 2)
+          .map((f) => f.flat().flat());
+        return files.map((file, i) =>
+          /* @__PURE__ */ React43.createElement(
+            components.Link,
+            {
+              key: i,
+              className: "notion-property-file",
+              href: mapImageUrl(file[2], block),
+              target: "_blank",
+              rel: "noreferrer noopener",
+            },
+            /* @__PURE__ */ React43.createElement(GracefulImage, {
+              alt: file[0],
+              src: mapImageUrl(file[2], block),
+              loading: "lazy",
+            })
+          )
+        );
+      },
     [block, components, data, mapImageUrl]
   );
   const renderCheckboxValue = React43.useMemo(
-    () => function CheckboxProperty() {
-      const isChecked = data && data[0][0] === "Yes";
-      return /* @__PURE__ */ React43.createElement("div", {
-        className: "notion-property-checkbox-container"
-      }, /* @__PURE__ */ React43.createElement(Checkbox, {
-        isChecked,
-        blockId: void 0
-      }), /* @__PURE__ */ React43.createElement("span", {
-        className: "notion-property-checkbox-text"
-      }, schema.name));
-    },
+    () =>
+      function CheckboxProperty() {
+        const isChecked = data && data[0][0] === "Yes";
+        return /* @__PURE__ */ React43.createElement(
+          "div",
+          {
+            className: "notion-property-checkbox-container",
+          },
+          /* @__PURE__ */ React43.createElement(Checkbox, {
+            isChecked,
+            blockId: void 0,
+          }),
+          /* @__PURE__ */ React43.createElement(
+            "span",
+            {
+              className: "notion-property-checkbox-text",
+            },
+            schema.name
+          )
+        );
+      },
     [data, schema]
   );
   const renderUrlValue = React43.useMemo(
-    () => function UrlProperty() {
-      const d = JSON.parse(JSON.stringify(data));
-      if (inline) {
-        try {
-          const url = new URL(d[0][0]);
-          d[0][0] = url.hostname.replace(/^www\./, "");
-        } catch (err) {
+    () =>
+      function UrlProperty() {
+        const d = JSON.parse(JSON.stringify(data));
+        if (inline) {
+          try {
+            const url = new URL(d[0][0]);
+            d[0][0] = url.hostname.replace(/^www\./, "");
+          } catch (err) {}
         }
-      }
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: d,
-        block,
-        inline,
-        linkProps: {
-          target: "_blank",
-          rel: "noreferrer noopener"
-        }
-      });
-    },
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: d,
+          block,
+          inline,
+          linkProps: {
+            target: "_blank",
+            rel: "noreferrer noopener",
+          },
+        });
+      },
     [block, data, inline]
   );
   const renderEmailValue = React43.useMemo(
-    () => function EmailProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        linkProtocol: "mailto",
-        block
-      });
-    },
+    () =>
+      function EmailProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          linkProtocol: "mailto",
+          block,
+        });
+      },
     [block, data]
   );
   const renderPhoneNumberValue = React43.useMemo(
-    () => function PhoneNumberProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        linkProtocol: "tel",
-        block
-      });
-    },
-    [block, data]
-  );
-  const renderNumberValue = React43.useMemo(
-    () => function NumberProperty() {
-      const value = parseFloat(data[0][0] || "0");
-      let output = "";
-      if (isNaN(value)) {
+    () =>
+      function PhoneNumberProperty() {
         return /* @__PURE__ */ React43.createElement(Text, {
           value: data,
-          block
+          linkProtocol: "tel",
+          block,
         });
-      } else {
-        switch (schema.number_format) {
-          case "number_with_commas":
-            output = (0, import_format_number.default)()(value);
-            break;
-          case "percent":
-            output = (0, import_format_number.default)({ suffix: "%" })(value * 100);
-            break;
-          case "dollar":
-            output = (0, import_format_number.default)({ prefix: "$", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "euro":
-            output = (0, import_format_number.default)({ prefix: "\u20AC", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "pound":
-            output = (0, import_format_number.default)({ prefix: "\xA3", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "yen":
-            output = (0, import_format_number.default)({ prefix: "\xA5", round: 0 })(value);
-            break;
-          case "rupee":
-            output = (0, import_format_number.default)({ prefix: "\u20B9", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "won":
-            output = (0, import_format_number.default)({ prefix: "\u20A9", round: 0 })(value);
-            break;
-          case "yuan":
-            output = (0, import_format_number.default)({ prefix: "CN\xA5", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          default:
-            return /* @__PURE__ */ React43.createElement(Text, {
-              value: data,
-              block
-            });
+      },
+    [block, data]
+  );
+  const renderNumberValue = React43.useMemo(
+    () =>
+      function NumberProperty() {
+        const value = parseFloat(data[0][0] || "0");
+        let output = "";
+        if (isNaN(value)) {
+          return /* @__PURE__ */ React43.createElement(Text, {
+            value: data,
+            block,
+          });
+        } else {
+          switch (schema.number_format) {
+            case "number_with_commas":
+              output = (0, import_format_number.default)()(value);
+              break;
+            case "percent":
+              output = (0, import_format_number.default)({ suffix: "%" })(
+                value * 100
+              );
+              break;
+            case "dollar":
+              output = (0, import_format_number.default)({
+                prefix: "$",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "euro":
+              output = (0, import_format_number.default)({
+                prefix: "\u20AC",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "pound":
+              output = (0, import_format_number.default)({
+                prefix: "\xA3",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "yen":
+              output = (0, import_format_number.default)({
+                prefix: "\xA5",
+                round: 0,
+              })(value);
+              break;
+            case "rupee":
+              output = (0, import_format_number.default)({
+                prefix: "\u20B9",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "won":
+              output = (0, import_format_number.default)({
+                prefix: "\u20A9",
+                round: 0,
+              })(value);
+              break;
+            case "yuan":
+              output = (0, import_format_number.default)({
+                prefix: "CN\xA5",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            default:
+              return /* @__PURE__ */ React43.createElement(Text, {
+                value: data,
+                block,
+              });
+          }
+          return /* @__PURE__ */ React43.createElement(Text, {
+            value: [[output]],
+            block,
+          });
         }
-        return /* @__PURE__ */ React43.createElement(Text, {
-          value: [[output]],
-          block
-        });
-      }
-    },
+      },
     [block, data, schema]
   );
   const renderCreatedTimeValue = React43.useMemo(
-    () => function CreatedTimeProperty() {
-      return (0, import_format2.default)(new Date(block == null ? void 0 : block.created_time), "MMM d, YYY hh:mm aa");
-    },
+    () =>
+      function CreatedTimeProperty() {
+        return (0, import_format2.default)(
+          new Date(block == null ? void 0 : block.created_time),
+          "MMM d, YYY hh:mm aa"
+        );
+      },
     [block == null ? void 0 : block.created_time]
   );
   const renderLastEditedTimeValue = React43.useMemo(
-    () => function LastEditedTimeProperty() {
-      return (0, import_format2.default)(new Date(block == null ? void 0 : block.last_edited_time), "MMM d, YYY hh:mm aa");
-    },
+    () =>
+      function LastEditedTimeProperty() {
+        return (0, import_format2.default)(
+          new Date(block == null ? void 0 : block.last_edited_time),
+          "MMM d, YYY hh:mm aa"
+        );
+      },
     [block == null ? void 0 : block.last_edited_time]
   );
   if (!schema) {
     return null;
   }
   let content = null;
-  if (data || schema.type === "checkbox" || schema.type === "title" || schema.type === "formula" || schema.type === "created_by" || schema.type === "last_edited_by" || schema.type === "created_time" || schema.type === "last_edited_time") {
+  if (
+    data ||
+    schema.type === "checkbox" ||
+    schema.type === "title" ||
+    schema.type === "formula" ||
+    schema.type === "created_by" ||
+    schema.type === "last_edited_by" ||
+    schema.type === "created_time" ||
+    schema.type === "last_edited_time"
+  ) {
     switch (schema.type) {
       case "relation":
         content = components.propertyRelationValue(props, renderRelationValue);
@@ -5684,24 +6992,30 @@ var PropertyImpl = (props) => {
         const values = (data[0][0] || "").split(",");
         content = values.map((value, index) => {
           var _a;
-          const option = (_a = schema.options) == null ? void 0 : _a.find(
-            (option2) => value === option2.value
-          );
+          const option =
+            (_a = schema.options) == null
+              ? void 0
+              : _a.find((option2) => value === option2.value);
           const color = option == null ? void 0 : option.color;
           return components.propertySelectValue(
             __spreadProps(__spreadValues({}, props), {
               key: index,
               value,
               option,
-              color
+              color,
             }),
-            () => /* @__PURE__ */ React43.createElement("div", {
-              key: index,
-              className: cs(
-                `notion-property-${schema.type}-item`,
-                color && `notion-item-${color}`
+            () =>
+              /* @__PURE__ */ React43.createElement(
+                "div",
+                {
+                  key: index,
+                  className: cs(
+                    `notion-property-${schema.type}-item`,
+                    color && `notion-item-${color}`
+                  ),
+                },
+                value
               )
-            }, value)
           );
         });
         break;
@@ -5755,14 +7069,18 @@ var PropertyImpl = (props) => {
       default:
         content = /* @__PURE__ */ React43.createElement(Text, {
           value: data,
-          block
+          block,
         });
         break;
     }
   }
-  return /* @__PURE__ */ React43.createElement("span", {
-    className: `notion-property notion-property-${schema.type}`
-  }, content);
+  return /* @__PURE__ */ React43.createElement(
+    "span",
+    {
+      className: `notion-property notion-property-${schema.type}`,
+    },
+    content
+  );
 };
 var PropertyImplMemo = React43.memo(PropertyImpl);
 
@@ -5771,56 +7089,82 @@ var CollectionRow = ({ block, pageHeader = false, className }) => {
   var _a, _b, _c, _d;
   const { recordMap } = useNotionContext();
   const collectionId = block.parent_id;
-  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
+  const collection =
+    (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
   const schemas = collection == null ? void 0 : collection.schema;
   if (!collection || !schemas) {
     return null;
   }
   let propertyIds = Object.keys(schemas).filter((id) => id !== "title");
   if ((_b = collection.format) == null ? void 0 : _b.property_visibility) {
-    propertyIds = propertyIds.filter(
-      (id) => {
-        var _a2;
-        return ((_a2 = collection.format.property_visibility.find(
+    propertyIds = propertyIds.filter((id) => {
+      var _a2;
+      return (
+        ((_a2 = collection.format.property_visibility.find(
           ({ property }) => property === id
-        )) == null ? void 0 : _a2.visibility) !== "hide";
-      }
-    );
+        )) == null
+          ? void 0
+          : _a2.visibility) !== "hide"
+      );
+    });
   }
-  if ((_c = collection.format) == null ? void 0 : _c.collection_page_properties) {
-    const idToIndex = (_d = collection.format) == null ? void 0 : _d.collection_page_properties.reduce(
-      (acc, p, i) => __spreadProps(__spreadValues({}, acc), {
-        [p.property]: i
-      }),
-      {}
-    );
+  if (
+    (_c = collection.format) == null ? void 0 : _c.collection_page_properties
+  ) {
+    const idToIndex =
+      (_d = collection.format) == null
+        ? void 0
+        : _d.collection_page_properties.reduce(
+            (acc, p, i) =>
+              __spreadProps(__spreadValues({}, acc), {
+                [p.property]: i,
+              }),
+            {}
+          );
     propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b]);
   } else {
     propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name));
   }
-  return /* @__PURE__ */ React44.createElement("div", {
-    className: cs("notion-collection-row", className)
-  }, /* @__PURE__ */ React44.createElement("div", {
-    className: "notion-collection-row-body"
-  }, propertyIds.map((propertyId) => {
-    var _a2;
-    const schema = schemas[propertyId];
-    return /* @__PURE__ */ React44.createElement("div", {
-      className: "notion-collection-row-property",
-      key: propertyId
-    }, /* @__PURE__ */ React44.createElement(CollectionColumnTitle, {
-      schema
-    }), /* @__PURE__ */ React44.createElement("div", {
-      className: "notion-collection-row-value"
-    }, /* @__PURE__ */ React44.createElement(Property, {
-      schema,
-      data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],
-      propertyId,
-      block,
-      collection,
-      pageHeader
-    })));
-  })));
+  return /* @__PURE__ */ React44.createElement(
+    "div",
+    {
+      className: cs("notion-collection-row", className),
+    },
+    /* @__PURE__ */ React44.createElement(
+      "div",
+      {
+        className: "notion-collection-row-body",
+      },
+      propertyIds.map((propertyId) => {
+        var _a2;
+        const schema = schemas[propertyId];
+        return /* @__PURE__ */ React44.createElement(
+          "div",
+          {
+            className: "notion-collection-row-property",
+            key: propertyId,
+          },
+          /* @__PURE__ */ React44.createElement(CollectionColumnTitle, {
+            schema,
+          }),
+          /* @__PURE__ */ React44.createElement(
+            "div",
+            {
+              className: "notion-collection-row-value",
+            },
+            /* @__PURE__ */ React44.createElement(Property, {
+              schema,
+              data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],
+              propertyId,
+              block,
+              collection,
+              pageHeader,
+            })
+          )
+        );
+      })
+    )
+  );
 };
 
 // src/third-party/collection-view.tsx
@@ -5832,38 +7176,52 @@ import * as React48 from "react";
 // src/icons/empty-icon.tsx
 import * as React45 from "react";
 var EmptyIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React45.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 14 14",
-    width: "14"
-  }), /* @__PURE__ */ React45.createElement("path", {
-    d: "M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React45.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 14 14",
+        width: "14",
+      }
+    ),
+    /* @__PURE__ */ React45.createElement("path", {
+      d: "M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z",
+    })
+  );
 };
 
 // src/third-party/collection-card.tsx
 import * as React46 from "react";
 import { getTextContent as getTextContent3 } from "notion-utils";
 var CollectionCard = (_a) => {
-  var _b = _a, {
-    collection,
-    block,
-    cover,
-    coverSize,
-    coverAspect,
-    properties,
-    className
-  } = _b, rest = __objRest(_b, [
-    "collection",
-    "block",
-    "cover",
-    "coverSize",
-    "coverAspect",
-    "properties",
-    "className"
-  ]);
+  var _b = _a,
+    {
+      collection,
+      block,
+      cover,
+      coverSize,
+      coverAspect,
+      properties,
+      className,
+    } = _b,
+    rest = __objRest(_b, [
+      "collection",
+      "block",
+      "cover",
+      "coverSize",
+      "coverAspect",
+      "properties",
+      "className",
+    ]);
   var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
   const ctx2 = useNotionContext();
   const {
@@ -5871,37 +7229,63 @@ var CollectionCard = (_a) => {
     recordMap,
     mapPageUrl,
     mapImageUrl,
-    isLinkCollectionToUrlProperty
+    isLinkCollectionToUrlProperty,
   } = ctx2;
   let coverContent = null;
   const { page_cover_position = 0.5 } = block.format || {};
   const coverPosition = (1 - page_cover_position) * 100;
   if ((cover == null ? void 0 : cover.type) === "page_content") {
-    const contentBlockId = (_a2 = block.content) == null ? void 0 : _a2.find((blockId) => {
-      var _a3;
-      const block2 = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;
-      if ((block2 == null ? void 0 : block2.type) === "image") {
-        return true;
-      }
-    });
+    const contentBlockId =
+      (_a2 = block.content) == null
+        ? void 0
+        : _a2.find((blockId) => {
+            var _a3;
+            const block2 =
+              (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;
+            if ((block2 == null ? void 0 : block2.type) === "image") {
+              return true;
+            }
+          });
     if (contentBlockId) {
-      const contentBlock = (_b2 = recordMap.block[contentBlockId]) == null ? void 0 : _b2.value;
-      const source = (_g = (_e = (_d = (_c = contentBlock.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]) != null ? _g : (_f = contentBlock.format) == null ? void 0 : _f.display_source;
+      const contentBlock =
+        (_b2 = recordMap.block[contentBlockId]) == null ? void 0 : _b2.value;
+      const source =
+        (_g =
+          (_e =
+            (_d =
+              (_c = contentBlock.properties) == null ? void 0 : _c.source) ==
+            null
+              ? void 0
+              : _d[0]) == null
+            ? void 0
+            : _e[0]) != null
+          ? _g
+          : (_f = contentBlock.format) == null
+          ? void 0
+          : _f.display_source;
       if (source) {
         const src = mapImageUrl(source, contentBlock);
-        const caption = (_j = (_i = (_h = contentBlock.properties) == null ? void 0 : _h.caption) == null ? void 0 : _i[0]) == null ? void 0 : _j[0];
+        const caption =
+          (_j =
+            (_i =
+              (_h = contentBlock.properties) == null ? void 0 : _h.caption) ==
+            null
+              ? void 0
+              : _i[0]) == null
+            ? void 0
+            : _j[0];
         coverContent = /* @__PURE__ */ React46.createElement(LazyImage, {
           src,
           alt: caption || "notion image",
           style: {
-            objectFit: coverAspect
-          }
+            objectFit: coverAspect,
+          },
         });
       }
     }
     if (!coverContent) {
       coverContent = /* @__PURE__ */ React46.createElement("div", {
-        className: "notion-collection-card-cover-empty"
+        className: "notion-collection-card-cover-empty",
       });
     }
   } else if ((cover == null ? void 0 : cover.type) === "page_cover") {
@@ -5910,11 +7294,13 @@ var CollectionCard = (_a) => {
       const coverPosition2 = (1 - page_cover_position) * 100;
       coverContent = /* @__PURE__ */ React46.createElement(LazyImage, {
         src: mapImageUrl(page_cover, block),
-        alt: getTextContent3((_k = block.properties) == null ? void 0 : _k.title),
+        alt: getTextContent3(
+          (_k = block.properties) == null ? void 0 : _k.title
+        ),
         style: {
           objectFit: coverAspect,
-          objectPosition: `center ${coverPosition2}%`
-        }
+          objectPosition: `center ${coverPosition2}%`,
+        },
       });
     }
   } else if ((cover == null ? void 0 : cover.type) === "property") {
@@ -5923,182 +7309,324 @@ var CollectionCard = (_a) => {
     const data = (_l = block.properties) == null ? void 0 : _l[property];
     if (schema && data) {
       if (schema.type === "file") {
-        const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());
+        const files = data
+          .filter((v) => v.length === 2)
+          .map((f) => f.flat().flat());
         const file = files[0];
         if (file) {
-          coverContent = /* @__PURE__ */ React46.createElement("span", {
-            className: `notion-property-${schema.type}`
-          }, /* @__PURE__ */ React46.createElement(LazyImage, {
-            alt: file[0],
-            src: mapImageUrl(file[2], block),
-            style: {
-              objectFit: coverAspect,
-              objectPosition: `center ${coverPosition}%`
-            }
-          }));
+          coverContent = /* @__PURE__ */ React46.createElement(
+            "span",
+            {
+              className: `notion-property-${schema.type}`,
+            },
+            /* @__PURE__ */ React46.createElement(LazyImage, {
+              alt: file[0],
+              src: mapImageUrl(file[2], block),
+              style: {
+                objectFit: coverAspect,
+                objectPosition: `center ${coverPosition}%`,
+              },
+            })
+          );
         }
       } else {
         coverContent = /* @__PURE__ */ React46.createElement(Property, {
           propertyId: property,
           schema,
-          data
+          data,
         });
       }
     }
   }
   let linkProperties = [];
   if (isLinkCollectionToUrlProperty) {
-    linkProperties = (_m = properties == null ? void 0 : properties.filter(
-      (p) => p.visible && p.property !== "title" && collection.schema[p.property]
-    ).filter((p) => {
-      if (!block.properties)
-        return false;
-      const schema = collection.schema[p.property];
-      return schema.type == "url";
-    }).map((p) => {
-      return block.properties[p.property];
-    })) == null ? void 0 : _m.filter((p) => p && p.length > 0 && p[0] != void 0);
+    linkProperties =
+      (_m =
+        properties == null
+          ? void 0
+          : properties
+              .filter(
+                (p) =>
+                  p.visible &&
+                  p.property !== "title" &&
+                  collection.schema[p.property]
+              )
+              .filter((p) => {
+                if (!block.properties) return false;
+                const schema = collection.schema[p.property];
+                return schema.type == "url";
+              })
+              .map((p) => {
+                return block.properties[p.property];
+              })) == null
+        ? void 0
+        : _m.filter((p) => p && p.length > 0 && p[0] != void 0);
   }
   let url = null;
-  if (linkProperties && linkProperties.length > 0 && linkProperties[0].length > 0 && linkProperties[0][0].length > 0) {
+  if (
+    linkProperties &&
+    linkProperties.length > 0 &&
+    linkProperties[0].length > 0 &&
+    linkProperties[0][0].length > 0
+  ) {
     url = linkProperties[0][0][0];
   }
-  const innerCard = /* @__PURE__ */ React46.createElement(React46.Fragment, null, (coverContent || (cover == null ? void 0 : cover.type) !== "none") && /* @__PURE__ */ React46.createElement("div", {
-    className: "notion-collection-card-cover"
-  }, coverContent), /* @__PURE__ */ React46.createElement("div", {
-    className: "notion-collection-card-body"
-  }, /* @__PURE__ */ React46.createElement("div", {
-    className: "notion-collection-card-property"
-  }, /* @__PURE__ */ React46.createElement(Property, {
-    schema: collection.schema.title,
-    data: (_n = block == null ? void 0 : block.properties) == null ? void 0 : _n.title,
-    block,
-    collection
-  })), properties == null ? void 0 : properties.filter(
-    (p) => p.visible && p.property !== "title" && collection.schema[p.property]
-  ).map((p) => {
-    if (!block.properties)
-      return null;
-    const schema = collection.schema[p.property];
-    const data = block.properties[p.property];
-    return /* @__PURE__ */ React46.createElement("div", {
-      className: "notion-collection-card-property",
-      key: p.property
-    }, /* @__PURE__ */ React46.createElement(Property, {
-      schema,
-      data,
-      block,
-      collection,
-      inline: true
-    }));
-  })));
-  return /* @__PURE__ */ React46.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-    components: __spreadProps(__spreadValues({}, ctx2.components), {
-      Link: (props) => {
-        var _a3, _b3, _c2;
-        return /* @__PURE__ */ React46.createElement("form", {
-          action: props.href,
-          target: "_blank"
-        }, /* @__PURE__ */ React46.createElement("input", {
-          type: "submit",
-          value: (_c2 = (_b3 = (_a3 = props == null ? void 0 : props.children) == null ? void 0 : _a3.props) == null ? void 0 : _b3.children) != null ? _c2 : props.href,
-          className: "nested-form-link notion-link"
-        }));
-      },
-      PageLink: dummyLink
-    })
-  }), isLinkCollectionToUrlProperty && url ? /* @__PURE__ */ React46.createElement(components.Link, __spreadValues({
-    className: cs(
-      "notion-collection-card",
-      `notion-collection-card-size-${coverSize}`,
-      className
-    ),
-    href: url
-  }, rest), innerCard) : /* @__PURE__ */ React46.createElement(components.PageLink, __spreadValues({
-    className: cs(
-      "notion-collection-card",
-      `notion-collection-card-size-${coverSize}`,
-      className
-    ),
-    href: mapPageUrl(block.id)
-  }, rest), innerCard));
+  const innerCard = /* @__PURE__ */ React46.createElement(
+    React46.Fragment,
+    null,
+    (coverContent || (cover == null ? void 0 : cover.type) !== "none") &&
+      /* @__PURE__ */ React46.createElement(
+        "div",
+        {
+          className: "notion-collection-card-cover",
+        },
+        coverContent
+      ),
+    /* @__PURE__ */ React46.createElement(
+      "div",
+      {
+        className: "notion-collection-card-body",
+      },
+      /* @__PURE__ */ React46.createElement(
+        "div",
+        {
+          className: "notion-collection-card-property",
+        },
+        /* @__PURE__ */ React46.createElement(Property, {
+          schema: collection.schema.title,
+          data:
+            (_n = block == null ? void 0 : block.properties) == null
+              ? void 0
+              : _n.title,
+          block,
+          collection,
+        })
+      ),
+      properties == null
+        ? void 0
+        : properties
+            .filter(
+              (p) =>
+                p.visible &&
+                p.property !== "title" &&
+                collection.schema[p.property]
+            )
+            .map((p) => {
+              if (!block.properties) return null;
+              const schema = collection.schema[p.property];
+              const data = block.properties[p.property];
+              return /* @__PURE__ */ React46.createElement(
+                "div",
+                {
+                  className: "notion-collection-card-property",
+                  key: p.property,
+                },
+                /* @__PURE__ */ React46.createElement(Property, {
+                  schema,
+                  data,
+                  block,
+                  collection,
+                  inline: true,
+                })
+              );
+            })
+    )
+  );
+  return /* @__PURE__ */ React46.createElement(
+    NotionContextProvider,
+    __spreadProps(__spreadValues({}, ctx2), {
+      components: __spreadProps(__spreadValues({}, ctx2.components), {
+        Link: (props) => {
+          var _a3, _b3, _c2;
+          return /* @__PURE__ */ React46.createElement(
+            "form",
+            {
+              action: props.href,
+              target: "_blank",
+            },
+            /* @__PURE__ */ React46.createElement("input", {
+              type: "submit",
+              value:
+                (_c2 =
+                  (_b3 =
+                    (_a3 = props == null ? void 0 : props.children) == null
+                      ? void 0
+                      : _a3.props) == null
+                    ? void 0
+                    : _b3.children) != null
+                  ? _c2
+                  : props.href,
+              className: "nested-form-link notion-link",
+            })
+          );
+        },
+        PageLink: dummyLink,
+      }),
+    }),
+    isLinkCollectionToUrlProperty && url
+      ? /* @__PURE__ */ React46.createElement(
+          components.Link,
+          __spreadValues(
+            {
+              className: cs(
+                "notion-collection-card",
+                `notion-collection-card-size-${coverSize}`,
+                className
+              ),
+              href: url,
+            },
+            rest
+          ),
+          innerCard
+        )
+      : /* @__PURE__ */ React46.createElement(
+          components.PageLink,
+          __spreadValues(
+            {
+              className: cs(
+                "notion-collection-card",
+                `notion-collection-card-size-${coverSize}`,
+                className
+              ),
+              href: mapPageUrl(block.id),
+            },
+            rest
+          ),
+          innerCard
+        )
+  );
 };
 
 // src/third-party/collection-group.tsx
 import * as React47 from "react";
 var CollectionGroup = (_a) => {
-  var _b = _a, {
-    collectionViewComponent: CollectionViewComponent,
-    collection,
-    collectionGroup,
-    schema,
-    value,
-    hidden,
-    summaryProps,
-    detailsProps
-  } = _b, rest = __objRest(_b, [
-    "collectionViewComponent",
-    "collection",
-    "collectionGroup",
-    "schema",
-    "value",
-    "hidden",
-    "summaryProps",
-    "detailsProps"
-  ]);
-  if (hidden)
-    return null;
-  return /* @__PURE__ */ React47.createElement("details", __spreadValues({
-    open: true,
-    className: "notion-collection-group"
-  }, detailsProps), /* @__PURE__ */ React47.createElement("summary", __spreadValues({
-    className: "notion-collection-group-title"
-  }, summaryProps), /* @__PURE__ */ React47.createElement("div", null, /* @__PURE__ */ React47.createElement(Property, {
-    schema,
-    data: [[value]],
-    collection
-  }), /* @__PURE__ */ React47.createElement("span", {
-    className: "notion-board-th-count"
-  }, collectionGroup == null ? void 0 : collectionGroup.total))), /* @__PURE__ */ React47.createElement(CollectionViewComponent, __spreadValues({
-    collection,
-    collectionGroup
-  }, rest)));
+  var _b = _a,
+    {
+      collectionViewComponent: CollectionViewComponent,
+      collection,
+      collectionGroup,
+      schema,
+      value,
+      hidden,
+      summaryProps,
+      detailsProps,
+    } = _b,
+    rest = __objRest(_b, [
+      "collectionViewComponent",
+      "collection",
+      "collectionGroup",
+      "schema",
+      "value",
+      "hidden",
+      "summaryProps",
+      "detailsProps",
+    ]);
+  if (hidden) return null;
+  return /* @__PURE__ */ React47.createElement(
+    "details",
+    __spreadValues(
+      {
+        open: true,
+        className: "notion-collection-group",
+      },
+      detailsProps
+    ),
+    /* @__PURE__ */ React47.createElement(
+      "summary",
+      __spreadValues(
+        {
+          className: "notion-collection-group-title",
+        },
+        summaryProps
+      ),
+      /* @__PURE__ */ React47.createElement(
+        "div",
+        null,
+        /* @__PURE__ */ React47.createElement(Property, {
+          schema,
+          data: [[value]],
+          collection,
+        }),
+        /* @__PURE__ */ React47.createElement(
+          "span",
+          {
+            className: "notion-board-th-count",
+          },
+          collectionGroup == null ? void 0 : collectionGroup.total
+        )
+      )
+    ),
+    /* @__PURE__ */ React47.createElement(
+      CollectionViewComponent,
+      __spreadValues(
+        {
+          collection,
+          collectionGroup,
+        },
+        rest
+      )
+    )
+  );
 };
 
 // src/third-party/collection-utils.ts
 var import_format3 = __toESM(require_format(), 1);
-function getCollectionGroups(collection, collectionView, collectionData, ...rest) {
+function getCollectionGroups(
+  collection,
+  collectionView,
+  collectionData,
+  ...rest
+) {
   var _a;
-  const elems = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_groups) || [];
-  return elems == null ? void 0 : elems.map(({ property, hidden, value: { value, type } }) => {
-    var _a2, _b;
-    const isUncategorizedValue = typeof value === "undefined";
-    const isDateValue = value == null ? void 0 : value.range;
-    const queryLabel = isUncategorizedValue ? "uncategorized" : isDateValue ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) || ((_b = value.range) == null ? void 0 : _b.end_date) : (value == null ? void 0 : value.value) || value;
-    const collectionGroup = collectionData[`results:${type}:${queryLabel}`];
-    let queryValue = !isUncategorizedValue && (isDateValue || (value == null ? void 0 : value.value) || value);
-    let schema = collection.schema[property];
-    if (type === "checkbox" && value) {
-      queryValue = "Yes";
-    }
-    if (isDateValue) {
-      schema = {
-        type: "text",
-        name: "text"
-      };
-      queryValue = (0, import_format3.default)(new Date(queryLabel), "MMM d, YYY hh:mm aa");
-    }
-    return __spreadValues({
-      collectionGroup,
-      schema,
-      value: queryValue || "No description",
-      hidden,
-      collection,
-      collectionView,
-      collectionData,
-      blockIds: collectionGroup == null ? void 0 : collectionGroup.blockIds
-    }, rest);
-  });
+  const elems =
+    ((_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_groups) || [];
+  return elems == null
+    ? void 0
+    : elems.map(({ property, hidden, value: { value, type } }) => {
+        var _a2, _b;
+        const isUncategorizedValue = typeof value === "undefined";
+        const isDateValue = value == null ? void 0 : value.range;
+        const queryLabel = isUncategorizedValue
+          ? "uncategorized"
+          : isDateValue
+          ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) ||
+            ((_b = value.range) == null ? void 0 : _b.end_date)
+          : (value == null ? void 0 : value.value) || value;
+        const collectionGroup = collectionData[`results:${type}:${queryLabel}`];
+        let queryValue =
+          !isUncategorizedValue &&
+          (isDateValue || (value == null ? void 0 : value.value) || value);
+        let schema = collection.schema[property];
+        if (type === "checkbox" && value) {
+          queryValue = "Yes";
+        }
+        if (isDateValue) {
+          schema = {
+            type: "text",
+            name: "text",
+          };
+          queryValue = (0, import_format3.default)(
+            new Date(queryLabel),
+            "MMM d, YYY hh:mm aa"
+          );
+        }
+        return __spreadValues(
+          {
+            collectionGroup,
+            schema,
+            value: queryValue || "No description",
+            hidden,
+            collection,
+            collectionView,
+            collectionData,
+            blockIds:
+              collectionGroup == null ? void 0 : collectionGroup.blockIds,
+          },
+          rest
+        );
+      });
 }
 
 // src/third-party/collection-view-board.tsx
@@ -6106,10 +7634,13 @@ var CollectionViewBoard = ({
   collection,
   collectionView,
   collectionData,
-  padding
+  padding,
 }) => {
   var _a;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
@@ -6117,24 +7648,42 @@ var CollectionViewBoard = ({
       collectionData,
       padding
     );
-    return collectionGroups.map((group, index) => /* @__PURE__ */ React48.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key: index
-    }, group), {
-      summaryProps: {
-        style: {
-          paddingLeft: padding
-        }
-      },
-      collectionViewComponent: (props) => /* @__PURE__ */ React48.createElement(Board, __spreadValues({
-        padding
-      }, props))
-    })));
+    return collectionGroups.map((group, index) =>
+      /* @__PURE__ */ React48.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key: index,
+            },
+            group
+          ),
+          {
+            summaryProps: {
+              style: {
+                paddingLeft: padding,
+              },
+            },
+            collectionViewComponent: (props) =>
+              /* @__PURE__ */ React48.createElement(
+                Board,
+                __spreadValues(
+                  {
+                    padding,
+                  },
+                  props
+                )
+              ),
+          }
+        )
+      )
+    );
   }
   return /* @__PURE__ */ React48.createElement(Board, {
     padding,
     collectionView,
     collection,
-    collectionData
+    collectionData,
   });
 };
 function Board({ collectionView, collectionData, collection, padding }) {
@@ -6143,87 +7692,162 @@ function Board({ collectionView, collectionData, collection, padding }) {
   const {
     board_cover = { type: "none" },
     board_cover_size = "medium",
-    board_cover_aspect = "cover"
+    board_cover_aspect = "cover",
   } = (collectionView == null ? void 0 : collectionView.format) || {};
-  const boardGroups = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.board_columns) || ((_b = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _b.board_groups2) || [];
+  const boardGroups =
+    ((_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.board_columns) ||
+    ((_b = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _b.board_groups2) ||
+    [];
   const boardStyle = React48.useMemo(
     () => ({
-      paddingLeft: padding
+      paddingLeft: padding,
     }),
     [padding]
   );
-  return /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board"
-  }, /* @__PURE__ */ React48.createElement("div", {
-    className: cs(
-      "notion-board-view",
-      `notion-board-view-size-${board_cover_size}`
-    ),
-    style: boardStyle
-  }, /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-header"
-  }, /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-header-inner"
-  }, boardGroups.map((p, index) => {
-    var _a2, _b2, _c;
-    if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {
-      return null;
-    }
-    const group = collectionData.board_columns.results[index];
-    const schema = collection.schema[p.property];
-    if (!group || !schema || p.hidden) {
-      return null;
-    }
-    return /* @__PURE__ */ React48.createElement("div", {
-      className: "notion-board-th",
-      key: index
-    }, /* @__PURE__ */ React48.createElement("div", {
-      className: "notion-board-th-body"
-    }, ((_b2 = group.value) == null ? void 0 : _b2.value) ? /* @__PURE__ */ React48.createElement(Property, {
-      schema,
-      data: [[(_c = group.value) == null ? void 0 : _c.value]],
-      collection
-    }) : /* @__PURE__ */ React48.createElement("span", null, /* @__PURE__ */ React48.createElement(EmptyIcon, {
-      className: "notion-board-th-empty"
-    }), " No Select"), /* @__PURE__ */ React48.createElement("span", {
-      className: "notion-board-th-count"
-    }, group.total)));
-  }))), /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-header-placeholder"
-  }), /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-body"
-  }, boardGroups.map((p, index) => {
-    var _a2, _b2, _c, _d, _e;
-    const boardResults = (_a2 = collectionData.board_columns) == null ? void 0 : _a2.results;
-    if (!boardResults)
-      return null;
-    if (!((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.type))
-      return null;
-    const schema = collection.schema[p.property];
-    const group = collectionData[`results:${(_c = p == null ? void 0 : p.value) == null ? void 0 : _c.type}:${((_d = p == null ? void 0 : p.value) == null ? void 0 : _d.value) || "uncategorized"}`];
-    if (!group || !schema || p.hidden) {
-      return null;
-    }
-    return /* @__PURE__ */ React48.createElement("div", {
-      className: "notion-board-group",
-      key: index
-    }, (_e = group.blockIds) == null ? void 0 : _e.map((blockId) => {
-      var _a3, _b3;
-      const block = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;
-      if (!block)
-        return null;
-      return /* @__PURE__ */ React48.createElement(CollectionCard, {
-        className: "notion-board-group-card",
-        collection,
-        block,
-        cover: board_cover,
-        coverSize: board_cover_size,
-        coverAspect: board_cover_aspect,
-        properties: (_b3 = collectionView.format) == null ? void 0 : _b3.board_properties,
-        key: blockId
-      });
-    }));
-  }))));
+  return /* @__PURE__ */ React48.createElement(
+    "div",
+    {
+      className: "notion-board",
+    },
+    /* @__PURE__ */ React48.createElement(
+      "div",
+      {
+        className: cs(
+          "notion-board-view",
+          `notion-board-view-size-${board_cover_size}`
+        ),
+        style: boardStyle,
+      },
+      /* @__PURE__ */ React48.createElement(
+        "div",
+        {
+          className: "notion-board-header",
+        },
+        /* @__PURE__ */ React48.createElement(
+          "div",
+          {
+            className: "notion-board-header-inner",
+          },
+          boardGroups.map((p, index) => {
+            var _a2, _b2, _c;
+            if (
+              !((_a2 = collectionData.board_columns) == null
+                ? void 0
+                : _a2.results)
+            ) {
+              return null;
+            }
+            const group = collectionData.board_columns.results[index];
+            const schema = collection.schema[p.property];
+            if (!group || !schema || p.hidden) {
+              return null;
+            }
+            return /* @__PURE__ */ React48.createElement(
+              "div",
+              {
+                className: "notion-board-th",
+                key: index,
+              },
+              /* @__PURE__ */ React48.createElement(
+                "div",
+                {
+                  className: "notion-board-th-body",
+                },
+                ((_b2 = group.value) == null ? void 0 : _b2.value)
+                  ? /* @__PURE__ */ React48.createElement(Property, {
+                      schema,
+                      data: [[(_c = group.value) == null ? void 0 : _c.value]],
+                      collection,
+                    })
+                  : /* @__PURE__ */ React48.createElement(
+                      "span",
+                      null,
+                      /* @__PURE__ */ React48.createElement(EmptyIcon, {
+                        className: "notion-board-th-empty",
+                      }),
+                      " No Select"
+                    ),
+                /* @__PURE__ */ React48.createElement(
+                  "span",
+                  {
+                    className: "notion-board-th-count",
+                  },
+                  group.total
+                )
+              )
+            );
+          })
+        )
+      ),
+      /* @__PURE__ */ React48.createElement("div", {
+        className: "notion-board-header-placeholder",
+      }),
+      /* @__PURE__ */ React48.createElement(
+        "div",
+        {
+          className: "notion-board-body",
+        },
+        boardGroups.map((p, index) => {
+          var _a2, _b2, _c, _d, _e;
+          const boardResults =
+            (_a2 = collectionData.board_columns) == null ? void 0 : _a2.results;
+          if (!boardResults) return null;
+          if (
+            !((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.type)
+          )
+            return null;
+          const schema = collection.schema[p.property];
+          const group =
+            collectionData[
+              `results:${
+                (_c = p == null ? void 0 : p.value) == null ? void 0 : _c.type
+              }:${
+                ((_d = p == null ? void 0 : p.value) == null
+                  ? void 0
+                  : _d.value) || "uncategorized"
+              }`
+            ];
+          if (!group || !schema || p.hidden) {
+            return null;
+          }
+          return /* @__PURE__ */ React48.createElement(
+            "div",
+            {
+              className: "notion-board-group",
+              key: index,
+            },
+            (_e = group.blockIds) == null
+              ? void 0
+              : _e.map((blockId) => {
+                  var _a3, _b3;
+                  const block =
+                    (_a3 = recordMap.block[blockId]) == null
+                      ? void 0
+                      : _a3.value;
+                  if (!block) return null;
+                  return /* @__PURE__ */ React48.createElement(CollectionCard, {
+                    className: "notion-board-group-card",
+                    collection,
+                    block,
+                    cover: board_cover,
+                    coverSize: board_cover_size,
+                    coverAspect: board_cover_aspect,
+                    properties:
+                      (_b3 = collectionView.format) == null
+                        ? void 0
+                        : _b3.board_properties,
+                    key: blockId,
+                  });
+                })
+          );
+        })
+      )
+    )
+  );
 }
 
 // src/third-party/collection-view-gallery.tsx
@@ -6232,27 +7856,52 @@ var defaultBlockIds = [];
 var CollectionViewGallery = ({
   collection,
   collectionView,
-  collectionData
+  collectionData,
 }) => {
   var _a, _b, _c, _d, _e;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
       collectionView,
       collectionData
     );
-    return collectionGroups.map((group, index) => /* @__PURE__ */ React49.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key: index
-    }, group), {
-      collectionViewComponent: Gallery
-    })));
+    return collectionGroups.map((group, index) =>
+      /* @__PURE__ */ React49.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key: index,
+            },
+            group
+          ),
+          {
+            collectionViewComponent: Gallery,
+          }
+        )
+      )
+    );
   }
-  const blockIds = ((_e = (_d = (_b = collectionData["collection_group_results"]) == null ? void 0 : _b.blockIds) != null ? _d : (_c = collectionData["results:relation:uncategorized"]) == null ? void 0 : _c.blockIds) != null ? _e : collectionData.blockIds) || defaultBlockIds;
+  const blockIds =
+    ((_e =
+      (_d =
+        (_b = collectionData["collection_group_results"]) == null
+          ? void 0
+          : _b.blockIds) != null
+        ? _d
+        : (_c = collectionData["results:relation:uncategorized"]) == null
+        ? void 0
+        : _c.blockIds) != null
+      ? _e
+      : collectionData.blockIds) || defaultBlockIds;
   return /* @__PURE__ */ React49.createElement(Gallery, {
     collectionView,
     collection,
-    blockIds
+    blockIds,
   });
 };
 function Gallery({ blockIds, collectionView, collection }) {
@@ -6260,109 +7909,187 @@ function Gallery({ blockIds, collectionView, collection }) {
   const {
     gallery_cover = { type: "none" },
     gallery_cover_size = "medium",
-    gallery_cover_aspect = "cover"
+    gallery_cover_aspect = "cover",
   } = collectionView.format || {};
-  return /* @__PURE__ */ React49.createElement("div", {
-    className: "notion-gallery"
-  }, /* @__PURE__ */ React49.createElement("div", {
-    className: "notion-gallery-view"
-  }, /* @__PURE__ */ React49.createElement("div", {
-    className: cs(
-      "notion-gallery-grid",
-      `notion-gallery-grid-size-${gallery_cover_size}`
+  return /* @__PURE__ */ React49.createElement(
+    "div",
+    {
+      className: "notion-gallery",
+    },
+    /* @__PURE__ */ React49.createElement(
+      "div",
+      {
+        className: "notion-gallery-view",
+      },
+      /* @__PURE__ */ React49.createElement(
+        "div",
+        {
+          className: cs(
+            "notion-gallery-grid",
+            `notion-gallery-grid-size-${gallery_cover_size}`
+          ),
+        },
+        blockIds == null
+          ? void 0
+          : blockIds.map((blockId) => {
+              var _a, _b;
+              const block =
+                (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+              if (!block) return null;
+              return /* @__PURE__ */ React49.createElement(CollectionCard, {
+                collection,
+                block,
+                cover: gallery_cover,
+                coverSize: gallery_cover_size,
+                coverAspect: gallery_cover_aspect,
+                properties:
+                  (_b = collectionView.format) == null
+                    ? void 0
+                    : _b.gallery_properties,
+                key: blockId,
+              });
+            })
+      )
     )
-  }, blockIds == null ? void 0 : blockIds.map((blockId) => {
-    var _a, _b;
-    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-    if (!block)
-      return null;
-    return /* @__PURE__ */ React49.createElement(CollectionCard, {
-      collection,
-      block,
-      cover: gallery_cover,
-      coverSize: gallery_cover_size,
-      coverAspect: gallery_cover_aspect,
-      properties: (_b = collectionView.format) == null ? void 0 : _b.gallery_properties,
-      key: blockId
-    });
-  }))));
+  );
 }
 
 // src/third-party/collection-view-list.tsx
 import * as React50 from "react";
 var defaultBlockIds2 = [];
-var CollectionViewList = ({
-  collection,
-  collectionView,
-  collectionData
-}) => {
+var CollectionViewList = ({ collection, collectionView, collectionData }) => {
   var _a, _b, _c;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
       collectionView,
       collectionData
     );
-    return collectionGroups.map((group, key) => /* @__PURE__ */ React50.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key
-    }, group), {
-      collectionViewComponent: List
-    })));
+    return collectionGroups.map((group, key) =>
+      /* @__PURE__ */ React50.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key,
+            },
+            group
+          ),
+          {
+            collectionViewComponent: List,
+          }
+        )
+      )
+    );
   }
-  const blockIds = ((_c = (_b = collectionData["collection_group_results"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds2;
+  const blockIds =
+    ((_c =
+      (_b = collectionData["collection_group_results"]) == null
+        ? void 0
+        : _b.blockIds) != null
+      ? _c
+      : collectionData.blockIds) || defaultBlockIds2;
   return /* @__PURE__ */ React50.createElement(List, {
     blockIds,
     collection,
-    collectionView
+    collectionView,
   });
 };
 function List({ blockIds, collection, collectionView }) {
   const { components, recordMap, mapPageUrl } = useNotionContext();
-  return /* @__PURE__ */ React50.createElement("div", {
-    className: "notion-list-collection"
-  }, /* @__PURE__ */ React50.createElement("div", {
-    className: "notion-list-view"
-  }, /* @__PURE__ */ React50.createElement("div", {
-    className: "notion-list-body"
-  }, blockIds == null ? void 0 : blockIds.map((blockId) => {
-    var _a, _b, _c, _d;
-    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-    if (!block)
-      return null;
-    const titleSchema = collection.schema.title;
-    const titleData = (_b = block == null ? void 0 : block.properties) == null ? void 0 : _b.title;
-    return /* @__PURE__ */ React50.createElement(components.PageLink, {
-      className: "notion-list-item notion-page-link",
-      href: mapPageUrl(block.id),
-      key: blockId
-    }, /* @__PURE__ */ React50.createElement("div", {
-      className: "notion-list-item-title"
-    }, /* @__PURE__ */ React50.createElement(Property, {
-      schema: titleSchema,
-      data: titleData,
-      block,
-      collection
-    })), /* @__PURE__ */ React50.createElement("div", {
-      className: "notion-list-item-body"
-    }, (_d = (_c = collectionView.format) == null ? void 0 : _c.list_properties) == null ? void 0 : _d.filter((p) => p.visible).map((p) => {
-      var _a2;
-      const schema = collection.schema[p.property];
-      const data = block && ((_a2 = block.properties) == null ? void 0 : _a2[p.property]);
-      if (!schema) {
-        return null;
-      }
-      return /* @__PURE__ */ React50.createElement("div", {
-        className: "notion-list-item-property",
-        key: p.property
-      }, /* @__PURE__ */ React50.createElement(Property, {
-        schema,
-        data,
-        block,
-        collection
-      }));
-    })));
-  }))));
+  return /* @__PURE__ */ React50.createElement(
+    "div",
+    {
+      className: "notion-list-collection",
+    },
+    /* @__PURE__ */ React50.createElement(
+      "div",
+      {
+        className: "notion-list-view",
+      },
+      /* @__PURE__ */ React50.createElement(
+        "div",
+        {
+          className: "notion-list-body",
+        },
+        blockIds == null
+          ? void 0
+          : blockIds.map((blockId) => {
+              var _a, _b, _c, _d;
+              const block =
+                (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+              if (!block) return null;
+              const titleSchema = collection.schema.title;
+              const titleData =
+                (_b = block == null ? void 0 : block.properties) == null
+                  ? void 0
+                  : _b.title;
+              return /* @__PURE__ */ React50.createElement(
+                components.PageLink,
+                {
+                  className: "notion-list-item notion-page-link",
+                  href: mapPageUrl(block.id),
+                  key: blockId,
+                },
+                /* @__PURE__ */ React50.createElement(
+                  "div",
+                  {
+                    className: "notion-list-item-title",
+                  },
+                  /* @__PURE__ */ React50.createElement(Property, {
+                    schema: titleSchema,
+                    data: titleData,
+                    block,
+                    collection,
+                  })
+                ),
+                /* @__PURE__ */ React50.createElement(
+                  "div",
+                  {
+                    className: "notion-list-item-body",
+                  },
+                  (_d =
+                    (_c = collectionView.format) == null
+                      ? void 0
+                      : _c.list_properties) == null
+                    ? void 0
+                    : _d
+                        .filter((p) => p.visible)
+                        .map((p) => {
+                          var _a2;
+                          const schema = collection.schema[p.property];
+                          const data =
+                            block &&
+                            ((_a2 = block.properties) == null
+                              ? void 0
+                              : _a2[p.property]);
+                          if (!schema) {
+                            return null;
+                          }
+                          return /* @__PURE__ */ React50.createElement(
+                            "div",
+                            {
+                              className: "notion-list-item-property",
+                              key: p.property,
+                            },
+                            /* @__PURE__ */ React50.createElement(Property, {
+                              schema,
+                              data,
+                              block,
+                              collection,
+                            })
+                          );
+                        })
+                )
+              );
+            })
+      )
+    )
+  );
 }
 
 // src/third-party/collection-view-table.tsx
@@ -6373,10 +8100,13 @@ var CollectionViewTable = ({
   collectionView,
   collectionData,
   padding,
-  width
+  width,
 }) => {
   var _a, _b, _c;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
@@ -6385,28 +8115,49 @@ var CollectionViewTable = ({
       padding,
       width
     );
-    return collectionGroups.map((group, index) => /* @__PURE__ */ React51.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key: index
-    }, group), {
-      collectionViewComponent: (props) => /* @__PURE__ */ React51.createElement(Table, __spreadProps(__spreadValues({}, props), {
-        padding,
-        width
-      })),
-      summaryProps: {
-        style: {
-          paddingLeft: padding,
-          paddingRight: padding
-        }
-      }
-    })));
+    return collectionGroups.map((group, index) =>
+      /* @__PURE__ */ React51.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key: index,
+            },
+            group
+          ),
+          {
+            collectionViewComponent: (props) =>
+              /* @__PURE__ */ React51.createElement(
+                Table,
+                __spreadProps(__spreadValues({}, props), {
+                  padding,
+                  width,
+                })
+              ),
+            summaryProps: {
+              style: {
+                paddingLeft: padding,
+                paddingRight: padding,
+              },
+            },
+          }
+        )
+      )
+    );
   }
-  const blockIds = ((_c = (_b = collectionData["collection_group_results"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds3;
+  const blockIds =
+    ((_c =
+      (_b = collectionData["collection_group_results"]) == null
+        ? void 0
+        : _b.blockIds) != null
+      ? _c
+      : collectionData.blockIds) || defaultBlockIds3;
   return /* @__PURE__ */ React51.createElement(Table, {
     blockIds,
     collection,
     collectionView,
     padding,
-    width
+    width,
   });
 };
 function Table({ blockIds = [], collection, collectionView, width, padding }) {
@@ -6415,14 +8166,14 @@ function Table({ blockIds = [], collection, collectionView, width, padding }) {
   const tableStyle = React51.useMemo(
     () => ({
       width,
-      maxWidth: width
+      maxWidth: width,
     }),
     [width]
   );
   const tableViewStyle = React51.useMemo(
     () => ({
       paddingLeft: padding,
-      paddingRight: padding
+      paddingRight: padding,
     }),
     [padding]
   );
@@ -6433,78 +8184,144 @@ function Table({ blockIds = [], collection, collectionView, width, padding }) {
     );
   } else {
     properties = [{ property: "title" }].concat(
-      Object.keys(collection.schema).filter((p) => p !== "title").map((property) => ({ property }))
+      Object.keys(collection.schema)
+        .filter((p) => p !== "title")
+        .map((property) => ({ property }))
     );
   }
-  return /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table",
-    style: tableStyle
-  }, /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-view",
-    style: tableViewStyle
-  }, !!properties.length && /* @__PURE__ */ React51.createElement(React51.Fragment, null, /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-header"
-  }, /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-header-inner"
-  }, properties.map((p) => {
-    var _a2;
-    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];
-    const isTitle = p.property === "title";
-    const style = {};
-    if (p.width) {
-      style.width = p.width;
-    } else if (isTitle) {
-      style.width = 280;
-    } else {
-      style.width = 200;
-    }
-    return /* @__PURE__ */ React51.createElement("div", {
-      className: "notion-table-th",
-      key: p.property
-    }, /* @__PURE__ */ React51.createElement("div", {
-      className: "notion-table-view-header-cell",
-      style
-    }, /* @__PURE__ */ React51.createElement("div", {
-      className: "notion-table-view-header-cell-inner"
-    }, /* @__PURE__ */ React51.createElement(CollectionColumnTitle, {
-      schema
-    }))));
-  }))), /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-header-placeholder"
-  }), /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-body"
-  }, blockIds == null ? void 0 : blockIds.map((blockId) => /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-row",
-    key: blockId
-  }, properties.map((p) => {
-    var _a2, _b, _c;
-    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];
-    const block = (_b = recordMap.block[blockId]) == null ? void 0 : _b.value;
-    const data = (_c = block == null ? void 0 : block.properties) == null ? void 0 : _c[p.property];
-    const isTitle = p.property === "title";
-    const style = {};
-    if (p.width) {
-      style.width = p.width;
-    } else if (isTitle) {
-      style.width = 280;
-    } else {
-      style.width = 200;
-    }
-    return /* @__PURE__ */ React51.createElement("div", {
-      key: p.property,
-      className: cs(
-        "notion-table-cell",
-        `notion-table-cell-${schema.type}`
-      ),
-      style
-    }, /* @__PURE__ */ React51.createElement(Property, {
-      schema,
-      data,
-      block,
-      collection,
-      linkToTitlePage: linkTableTitleProperties
-    }));
-  })))))));
+  return /* @__PURE__ */ React51.createElement(
+    "div",
+    {
+      className: "notion-table",
+      style: tableStyle,
+    },
+    /* @__PURE__ */ React51.createElement(
+      "div",
+      {
+        className: "notion-table-view",
+        style: tableViewStyle,
+      },
+      !!properties.length &&
+        /* @__PURE__ */ React51.createElement(
+          React51.Fragment,
+          null,
+          /* @__PURE__ */ React51.createElement(
+            "div",
+            {
+              className: "notion-table-header",
+            },
+            /* @__PURE__ */ React51.createElement(
+              "div",
+              {
+                className: "notion-table-header-inner",
+              },
+              properties.map((p) => {
+                var _a2;
+                const schema =
+                  (_a2 = collection.schema) == null ? void 0 : _a2[p.property];
+                const isTitle = p.property === "title";
+                const style = {};
+                if (p.width) {
+                  style.width = p.width;
+                } else if (isTitle) {
+                  style.width = 280;
+                } else {
+                  style.width = 200;
+                }
+                return /* @__PURE__ */ React51.createElement(
+                  "div",
+                  {
+                    className: "notion-table-th",
+                    key: p.property,
+                  },
+                  /* @__PURE__ */ React51.createElement(
+                    "div",
+                    {
+                      className: "notion-table-view-header-cell",
+                      style,
+                    },
+                    /* @__PURE__ */ React51.createElement(
+                      "div",
+                      {
+                        className: "notion-table-view-header-cell-inner",
+                      },
+                      /* @__PURE__ */ React51.createElement(
+                        CollectionColumnTitle,
+                        {
+                          schema,
+                        }
+                      )
+                    )
+                  )
+                );
+              })
+            )
+          ),
+          /* @__PURE__ */ React51.createElement("div", {
+            className: "notion-table-header-placeholder",
+          }),
+          /* @__PURE__ */ React51.createElement(
+            "div",
+            {
+              className: "notion-table-body",
+            },
+            blockIds == null
+              ? void 0
+              : blockIds.map((blockId) =>
+                  /* @__PURE__ */ React51.createElement(
+                    "div",
+                    {
+                      className: "notion-table-row",
+                      key: blockId,
+                    },
+                    properties.map((p) => {
+                      var _a2, _b, _c;
+                      const schema =
+                        (_a2 = collection.schema) == null
+                          ? void 0
+                          : _a2[p.property];
+                      const block =
+                        (_b = recordMap.block[blockId]) == null
+                          ? void 0
+                          : _b.value;
+                      const data =
+                        (_c = block == null ? void 0 : block.properties) == null
+                          ? void 0
+                          : _c[p.property];
+                      const isTitle = p.property === "title";
+                      const style = {};
+                      if (p.width) {
+                        style.width = p.width;
+                      } else if (isTitle) {
+                        style.width = 280;
+                      } else {
+                        style.width = 200;
+                      }
+                      return /* @__PURE__ */ React51.createElement(
+                        "div",
+                        {
+                          key: p.property,
+                          className: cs(
+                            "notion-table-cell",
+                            `notion-table-cell-${schema.type}`
+                          ),
+                          style,
+                        },
+                        /* @__PURE__ */ React51.createElement(Property, {
+                          schema,
+                          data,
+                          block,
+                          collection,
+                          linkToTitlePage: linkTableTitleProperties,
+                        })
+                      );
+                    })
+                  )
+                )
+          )
+        )
+    )
+  );
 }
 
 // src/third-party/collection-view.tsx
@@ -6512,13 +8329,25 @@ var CollectionViewImpl = (props) => {
   const { collectionView } = props;
   switch (collectionView.type) {
     case "table":
-      return /* @__PURE__ */ React52.createElement(CollectionViewTable, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewTable,
+        __spreadValues({}, props)
+      );
     case "gallery":
-      return /* @__PURE__ */ React52.createElement(CollectionViewGallery, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewGallery,
+        __spreadValues({}, props)
+      );
     case "list":
-      return /* @__PURE__ */ React52.createElement(CollectionViewList, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewList,
+        __spreadValues({}, props)
+      );
     case "board":
-      return /* @__PURE__ */ React52.createElement(CollectionViewBoard, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewBoard,
+        __spreadValues({}, props)
+      );
     default:
       console.warn("unsupported collection view", collectionView);
       return null;
@@ -6529,26 +8358,35 @@ var CollectionView = React52.memo(CollectionViewImpl);
 // src/third-party/collection.tsx
 var isServer2 = typeof window === "undefined";
 var Collection = ({ block, className, ctx: ctx2 }) => {
-  const context = React53.useMemo(
-    () => __spreadValues({}, ctx2),
-    [ctx2]
-  );
+  const context = React53.useMemo(() => __spreadValues({}, ctx2), [ctx2]);
   if (block.type === "page") {
     if (block.parent_table !== "collection") {
       return null;
     }
-    return /* @__PURE__ */ React53.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ React53.createElement("div", {
-      className: "notion-collection-page-properties"
-    }, /* @__PURE__ */ React53.createElement(CollectionRow, {
-      block,
-      pageHeader: true,
-      className
-    })));
+    return /* @__PURE__ */ React53.createElement(
+      NotionContextProvider,
+      __spreadValues({}, context),
+      /* @__PURE__ */ React53.createElement(
+        "div",
+        {
+          className: "notion-collection-page-properties",
+        },
+        /* @__PURE__ */ React53.createElement(CollectionRow, {
+          block,
+          pageHeader: true,
+          className,
+        })
+      )
+    );
   } else {
-    return /* @__PURE__ */ React53.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ React53.createElement(CollectionViewBlock, {
-      block,
-      className
-    }));
+    return /* @__PURE__ */ React53.createElement(
+      NotionContextProvider,
+      __spreadValues({}, context),
+      /* @__PURE__ */ React53.createElement(CollectionViewBlock, {
+        block,
+        className,
+      })
+    );
   }
 };
 var CollectionViewBlock = ({ block, className }) => {
@@ -6562,15 +8400,20 @@ var CollectionViewBlock = ({ block, className }) => {
   }, []);
   const defaultCollectionViewId = viewIds[0];
   const [collectionState, setCollectionState] = useLocalStorage(block.id, {
-    collectionViewId: defaultCollectionViewId
+    collectionViewId: defaultCollectionViewId,
   });
-  const collectionViewId = isMounted && viewIds.find((id) => id === collectionState.collectionViewId) || defaultCollectionViewId;
+  const collectionViewId =
+    (isMounted &&
+      viewIds.find((id) => id === collectionState.collectionViewId)) ||
+    defaultCollectionViewId;
   const onChangeView = React53.useCallback(
     (collectionViewId2) => {
       console.log("change collection view", collectionViewId2);
-      setCollectionState(__spreadProps(__spreadValues({}, collectionState), {
-        collectionViewId: collectionViewId2
-      }));
+      setCollectionState(
+        __spreadProps(__spreadValues({}, collectionState), {
+          collectionViewId: collectionViewId2,
+        })
+      );
     },
     [collectionState, setCollectionState]
   );
@@ -6578,109 +8421,190 @@ var CollectionViewBlock = ({ block, className }) => {
   if (isServer2) {
     windowWidth = 1024;
   }
-  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
-  const collectionView = (_b = recordMap.collection_view[collectionViewId]) == null ? void 0 : _b.value;
-  const collectionData = (_c = recordMap.collection_query[collectionId]) == null ? void 0 : _c[collectionViewId];
+  const collection =
+    (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
+  const collectionView =
+    (_b = recordMap.collection_view[collectionViewId]) == null
+      ? void 0
+      : _b.value;
+  const collectionData =
+    (_c = recordMap.collection_query[collectionId]) == null
+      ? void 0
+      : _c[collectionViewId];
   const parentPage = getBlockParentPage2(block, recordMap);
   const { width, padding } = React53.useMemo(() => {
     var _a2;
     const style = {};
-    if ((collectionView == null ? void 0 : collectionView.type) !== "table" && (collectionView == null ? void 0 : collectionView.type) !== "board") {
+    if (
+      (collectionView == null ? void 0 : collectionView.type) !== "table" &&
+      (collectionView == null ? void 0 : collectionView.type) !== "board"
+    ) {
       return {
         style,
         width: 0,
-        padding: 0
+        padding: 0,
       };
     }
     const width2 = windowWidth;
     const maxNotionBodyWidth = 708;
     let notionBodyWidth = maxNotionBodyWidth;
-    if ((_a2 = parentPage == null ? void 0 : parentPage.format) == null ? void 0 : _a2.page_full_width) {
-      notionBodyWidth = width2 - 2 * Math.min(96, width2 * 0.08) | 0;
+    if (
+      (_a2 = parentPage == null ? void 0 : parentPage.format) == null
+        ? void 0
+        : _a2.page_full_width
+    ) {
+      notionBodyWidth = (width2 - 2 * Math.min(96, width2 * 0.08)) | 0;
     } else {
-      notionBodyWidth = width2 < maxNotionBodyWidth ? width2 - width2 * 0.02 | 0 : maxNotionBodyWidth;
+      notionBodyWidth =
+        width2 < maxNotionBodyWidth
+          ? (width2 - width2 * 0.02) | 0
+          : maxNotionBodyWidth;
     }
-    const padding2 = isServer2 && !isMounted ? 96 : (width2 - notionBodyWidth) / 2 | 0;
+    const padding2 =
+      isServer2 && !isMounted ? 96 : ((width2 - notionBodyWidth) / 2) | 0;
     style.paddingLeft = padding2;
     style.paddingRight = padding2;
     return {
       style,
       width: width2,
-      padding: padding2
+      padding: padding2,
     };
-  }, [windowWidth, parentPage, collectionView == null ? void 0 : collectionView.type, isMounted]);
+  }, [
+    windowWidth,
+    parentPage,
+    collectionView == null ? void 0 : collectionView.type,
+    isMounted,
+  ]);
   if (!(collection && collectionView && collectionData)) {
     console.warn("skipping missing collection view for block", block.id, {
       collectionId,
       collectionViewId,
       collectionView,
       collectionData,
-      recordMap
+      recordMap,
     });
     return null;
   }
   const title = getTextContent4(collection.name).trim();
-  const showTitle = ((_d = collectionView.format) == null ? void 0 : _d.hide_linked_collection_name) !== true && title;
+  const showTitle =
+    ((_d = collectionView.format) == null
+      ? void 0
+      : _d.hide_linked_collection_name) !== true && title;
   if (collection.icon) {
     block.format = __spreadProps(__spreadValues({}, block.format), {
-      page_icon: collection.icon
+      page_icon: collection.icon,
     });
   }
-  return /* @__PURE__ */ React53.createElement(React53.Fragment, null, /* @__PURE__ */ React53.createElement("div", null, /* @__PURE__ */ React53.createElement("div", null, viewIds.length > 1 && showCollectionViewDropdown && /* @__PURE__ */ React53.createElement(CollectionViewTabs, {
-    collectionViewId,
-    viewIds,
-    onChangeView
-  })), showTitle && /* @__PURE__ */ React53.createElement("div", {
-    className: "notion-collection-header"
-  }, /* @__PURE__ */ React53.createElement("div", {
-    className: "notion-collection-header-title"
-  }, /* @__PURE__ */ React53.createElement(PageIcon, {
-    block,
-    className: "notion-page-title-icon",
-    hideDefaultIcon: true
-  }), title))), /* @__PURE__ */ React53.createElement("div", {
-    className: cs("notion-collection", className)
-  }, /* @__PURE__ */ React53.createElement(CollectionView, {
-    collection,
-    collectionView,
-    collectionData,
-    padding,
-    width
-  })));
+  return /* @__PURE__ */ React53.createElement(
+    React53.Fragment,
+    null,
+    /* @__PURE__ */ React53.createElement(
+      "div",
+      null,
+      /* @__PURE__ */ React53.createElement(
+        "div",
+        null,
+        viewIds.length > 1 &&
+          showCollectionViewDropdown &&
+          /* @__PURE__ */ React53.createElement(CollectionViewTabs, {
+            collectionViewId,
+            viewIds,
+            onChangeView,
+          })
+      ),
+      showTitle &&
+        /* @__PURE__ */ React53.createElement(
+          "div",
+          {
+            className: "notion-collection-header",
+          },
+          /* @__PURE__ */ React53.createElement(
+            "div",
+            {
+              className: "notion-collection-header-title",
+            },
+            /* @__PURE__ */ React53.createElement(PageIcon, {
+              block,
+              className: "notion-page-title-icon",
+              hideDefaultIcon: true,
+            }),
+            title
+          )
+        )
+    ),
+    /* @__PURE__ */ React53.createElement(
+      "div",
+      {
+        className: cs("notion-collection", className),
+      },
+      /* @__PURE__ */ React53.createElement(CollectionView, {
+        collection,
+        collectionView,
+        collectionData,
+        padding,
+        width,
+      })
+    )
+  );
 };
 var CollectionViewTabs = ({ collectionViewId, viewIds, onChangeView }) => {
   const { recordMap } = useNotionContext();
-  return /* @__PURE__ */ React53.createElement("div", {
-    className: "notion-collection-view-tabs-row"
-  }, viewIds.map((viewId) => {
-    var _a;
-    return /* @__PURE__ */ React53.createElement("button", {
-      onClick: () => onChangeView(viewId),
-      key: viewId,
-      className: cs(
-        "notion-collection-view-tabs-content-item",
-        collectionViewId === viewId && "notion-collection-view-tabs-content-item-active"
-      )
-    }, /* @__PURE__ */ React53.createElement(CollectionViewColumnDesc, {
-      collectionView: (_a = recordMap.collection_view[viewId]) == null ? void 0 : _a.value
-    }));
-  }));
+  return /* @__PURE__ */ React53.createElement(
+    "div",
+    {
+      className: "notion-collection-view-tabs-row",
+    },
+    viewIds.map((viewId) => {
+      var _a;
+      return /* @__PURE__ */ React53.createElement(
+        "button",
+        {
+          onClick: () => onChangeView(viewId),
+          key: viewId,
+          className: cs(
+            "notion-collection-view-tabs-content-item",
+            collectionViewId === viewId &&
+              "notion-collection-view-tabs-content-item-active"
+          ),
+        },
+        /* @__PURE__ */ React53.createElement(CollectionViewColumnDesc, {
+          collectionView:
+            (_a = recordMap.collection_view[viewId]) == null
+              ? void 0
+              : _a.value,
+        })
+      );
+    })
+  );
 };
 var CollectionViewColumnDesc = (_a) => {
-  var _b = _a, { collectionView, className, children } = _b, rest = __objRest(_b, ["collectionView", "className", "children"]);
+  var _b = _a,
+    { collectionView, className, children } = _b,
+    rest = __objRest(_b, ["collectionView", "className", "children"]);
   const { type } = collectionView;
-  const name = collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;
-  return /* @__PURE__ */ React53.createElement("div", __spreadValues({
-    className: cs("notion-collection-view-type", className)
-  }, rest), /* @__PURE__ */ React53.createElement(CollectionViewIcon, {
-    className: "notion-collection-view-type-icon",
-    type
-  }), /* @__PURE__ */ React53.createElement("span", {
-    className: "notion-collection-view-type-title"
-  }, name), children);
-};
-export {
-  Collection,
-  PropertyImplMemo as Property
+  const name =
+    collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;
+  return /* @__PURE__ */ React53.createElement(
+    "div",
+    __spreadValues(
+      {
+        className: cs("notion-collection-view-type", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React53.createElement(CollectionViewIcon, {
+      className: "notion-collection-view-type-icon",
+      type,
+    }),
+    /* @__PURE__ */ React53.createElement(
+      "span",
+      {
+        className: "notion-collection-view-type-title",
+      },
+      name
+    ),
+    children
+  );
 };
+export { Collection, PropertyImplMemo as Property };
 //# sourceMappingURL=collection.js.map
diff --git a/node_modules/react-notion-x/build/dev/third-party/equation.js b/node_modules/react-notion-x/build/dev/third-party/equation.js
index 07da17c..f1e2694 100644
--- a/node_modules/react-notion-x/build/dev/third-party/equation.js
+++ b/node_modules/react-notion-x/build/dev/third-party/equation.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -80,18 +102,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -99,11 +132,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -115,12 +151,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -148,7 +194,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -171,7 +218,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle2(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -180,9 +228,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -193,7 +241,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -203,7 +254,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -211,10 +263,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle2;
-  }
+  },
 });
 
 // src/third-party/equation.tsx
@@ -245,17 +301,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -289,7 +353,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -297,13 +361,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -313,12 +377,23 @@ import * as React2 from "react";
 // src/icons/type-github.tsx
 import * as React from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -326,18 +401,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React2.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React2.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -352,24 +442,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React2.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React2.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React2.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React2.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React2.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React2.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React2.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React2.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React2.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/text.tsx
@@ -383,7 +507,10 @@ var GracefulImage = (props) => {
   if (isBrowser) {
     return /* @__PURE__ */ React3.createElement(Img, __spreadValues({}, props));
   } else {
-    return /* @__PURE__ */ React3.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React3.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
@@ -398,15 +525,27 @@ import { getBlockIcon, getBlockTitle } from "notion-utils";
 // src/icons/default-page-icon.tsx
 import * as React4 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React4.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React4.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React4.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React4.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/lazy-image.tsx
@@ -414,32 +553,43 @@ import * as React5 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React5.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React5.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -449,18 +599,18 @@ var LazyImage = (_a) => {
   const attachZoom = React5.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React5.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
         src,
@@ -472,51 +622,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React5.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React5.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React5.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
@@ -527,38 +692,51 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React5.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -566,248 +744,366 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React6.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React6.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React6.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React6.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React6.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React6.memo(PageIconImpl);
 
 // src/components/page-title.tsx
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle2(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React7.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React7.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React7.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React7.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React7.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React7.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React7.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React7.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
+  return /* @__PURE__ */ React7.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React7.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React7.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React7.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
 };
 var PageTitle = React7.memo(PageTitleImpl);
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React8.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React8.createElement(React8.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React8.createElement(
+    React8.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React8.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React8.createElement(
+                React8.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React8.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React8.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React8.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React8.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React8.createElement(GracefulImage, {
+                      className: "notion-user",
+                      src: mapImageUrl(user.profile_photo, block),
+                      alt: name,
+                    });
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React8.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React8.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React8.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React8.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React8.createElement("b", null, element);
+              case "i":
+                return /* @__PURE__ */ React8.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React8.createElement("s", null, element);
+              case "_":
+                return /* @__PURE__ */ React8.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React8.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React8.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React8.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React8.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React8.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React8.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React8.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React8.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React8.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React8.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React8.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React8.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React8.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React8.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React8.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React8.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React8.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React8.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React8.createElement(React8.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React8.createElement(React8.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React8.createElement(React8.Fragment, null, text));
+          return /* @__PURE__ */ React8.createElement(
+            React8.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/components/header.tsx
@@ -818,84 +1114,144 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React9 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React9.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React9.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React9.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React12 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle3 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle3,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React10 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React10.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React10.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React10.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React10.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React11 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React11.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React11.createElement("defs", null, /* @__PURE__ */ React11.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React11.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React11.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React11.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React11.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React11.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React11.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React11.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React11.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React11.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React11.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React11.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React11.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React11.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React11.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React11.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React11.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React11.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React11.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React11.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/search-dialog.tsx
@@ -906,7 +1262,7 @@ var SearchDialog = class extends React12.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -917,7 +1273,11 @@ var SearchDialog = class extends React12.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -926,67 +1286,81 @@ var SearchDialog = class extends React12.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle3(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle3(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React12.createRef();
   }
   componentDidMount() {
@@ -997,87 +1371,189 @@ var SearchDialog = class extends React12.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React12.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React12.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React12.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React12.createElement(SearchIcon, null)), /* @__PURE__ */ React12.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React12.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React12.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React12.createElement(React12.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React12.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React12.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React12.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React12.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React12.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React12.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React12.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React12.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React12.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React12.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React12.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React12.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React12.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React12.createElement(
+                React12.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React12.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React12.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React12.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React12.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React12.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React12.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React12.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React12.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React12.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React12.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React12.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React12.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React12.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React12.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React12.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React12.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React12.createElement("div", null, /* @__PURE__ */ React12.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React12.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React12.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React12.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React13.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React13.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React13.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React13.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React13.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React13.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React13.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -1088,38 +1564,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React13.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React13.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React13.createElement(React13.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React13.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React13.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React13.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React13.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React13.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React13.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React13.createElement(
+        React13.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React13.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React13.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React13.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React13.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React13.useState(isShowingSearch);
   React13.useEffect(() => {
@@ -1145,20 +1654,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, hasSearch && /* @__PURE__ */ React13.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React13.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React13.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React13.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React13.createElement(
+    React13.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React13.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React13.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React13.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React13.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/components/asset.tsx
@@ -1168,9 +1695,11 @@ import { getTextContent } from "notion-utils";
 // src/components/lite-youtube-embed.tsx
 import * as React14 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -1182,7 +1711,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React14.useMemo(
@@ -1194,64 +1723,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React14.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React14.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React14.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React14.useState(false);
   const warmConnections = React14.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React14.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React14.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React14.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React14.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React14.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React14.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React14.createElement(
+    React14.Fragment,
+    null,
+    /* @__PURE__ */ React14.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React14.createElement(
+        React14.Fragment,
+        null,
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React14.createElement(
+        React14.Fragment,
+        null,
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React14.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React14.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React14.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React14.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -1268,7 +1824,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -1283,7 +1839,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -1293,7 +1849,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -1354,28 +1910,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React15.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React15.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React15.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React15.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -1385,29 +1950,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React15.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React15.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React15.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -1422,7 +2012,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React15.createElement("iframe", {
@@ -1433,29 +2023,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React15.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React15.createElement(React15.Fragment, null, /* @__PURE__ */ React15.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React15.createElement(
+    React15.Fragment,
+    null,
+    /* @__PURE__ */ React15.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -1466,7 +2074,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId2(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -1475,32 +2092,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React16.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React16.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React16.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React16.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React16.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React16.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React16.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React16.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId2(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React16.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React16.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -1526,11 +2172,18 @@ import * as React18 from "react";
 // src/icons/check.tsx
 import * as React17 from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React17.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React17.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React17.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React17.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -1538,17 +2191,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React18.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React18.createElement(check_default, null));
+    content = /* @__PURE__ */ React18.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React18.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React18.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React18.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React18.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/next.tsx
@@ -1556,79 +2217,89 @@ import * as React19 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React19.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React19.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React19.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React19.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React19.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React19.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React19.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React20.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React20.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React20.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React20.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React20.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React20.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React20.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React20.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyComponent = (name) => () => {
   console.warn(
@@ -1666,7 +2337,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -1675,7 +2346,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -1695,23 +2366,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React20.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -1733,17 +2406,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React20.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React20.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React20.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -1753,28 +2438,37 @@ var useNotionContext = () => {
 // src/third-party/equation.tsx
 var katexSettings = {
   throwOnError: false,
-  strict: false
+  strict: false,
 };
 var Equation = (_a) => {
-  var _b = _a, { block, math, inline = false, className } = _b, rest = __objRest(_b, ["block", "math", "inline", "className"]);
+  var _b = _a,
+    { block, math, inline = false, className } = _b,
+    rest = __objRest(_b, ["block", "math", "inline", "className"]);
   const { recordMap } = useNotionContext();
   math = math || getBlockTitle4(block, recordMap);
-  if (!math)
-    return null;
-  return /* @__PURE__ */ React21.createElement("span", {
-    role: "button",
-    tabIndex: 0,
-    className: cs(
-      "notion-equation",
-      inline ? "notion-equation-inline" : "notion-equation-block",
-      className
+  if (!math) return null;
+  return /* @__PURE__ */ React21.createElement(
+    "span",
+    {
+      role: "button",
+      tabIndex: 0,
+      className: cs(
+        "notion-equation",
+        inline ? "notion-equation-inline" : "notion-equation-block",
+        className
+      ),
+    },
+    /* @__PURE__ */ React21.createElement(
+      Katex,
+      __spreadValues(
+        {
+          math,
+          settings: katexSettings,
+        },
+        rest
+      )
     )
-  }, /* @__PURE__ */ React21.createElement(Katex, __spreadValues({
-    math,
-    settings: katexSettings
-  }, rest)));
-};
-export {
-  Equation
+  );
 };
+export { Equation };
 //# sourceMappingURL=equation.js.map
diff --git a/node_modules/react-notion-x/build/index.js b/node_modules/react-notion-x/build/index.js
index a18bcfd..d683f98 100644
--- a/node_modules/react-notion-x/build/index.js
+++ b/node_modules/react-notion-x/build/index.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -80,18 +102,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -99,11 +132,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -115,12 +151,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -148,7 +194,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -171,7 +218,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle3(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -180,9 +228,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -193,7 +241,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -203,7 +254,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -211,10 +263,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle3;
-  }
+  },
 });
 
 // src/renderer.tsx
@@ -229,7 +285,7 @@ import {
   getBlockParentPage as getBlockParentPage2,
   getPageTableOfContents,
   getTextContent as getTextContent2,
-  uuidToId as uuidToId2
+  uuidToId as uuidToId2,
 } from "notion-utils";
 
 // src/components/asset-wrapper.tsx
@@ -252,17 +308,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -295,18 +359,24 @@ var groupBlockContent = (blockMap) => {
     var _a, _b;
     const blockValue = (_a = blockMap[id]) == null ? void 0 : _a.value;
     if (blockValue) {
-      (_b = blockValue.content) == null ? void 0 : _b.forEach((blockId) => {
-        var _a2, _b2;
-        const blockType = (_b2 = (_a2 = blockMap[blockId]) == null ? void 0 : _a2.value) == null ? void 0 : _b2.type;
-        if (blockType && blockType !== lastType) {
-          index++;
-          lastType = blockType;
-          output[index] = [];
-        }
-        if (index > -1) {
-          output[index].push(blockId);
-        }
-      });
+      (_b = blockValue.content) == null
+        ? void 0
+        : _b.forEach((blockId) => {
+            var _a2, _b2;
+            const blockType =
+              (_b2 = (_a2 = blockMap[blockId]) == null ? void 0 : _a2.value) ==
+              null
+                ? void 0
+                : _b2.type;
+            if (blockType && blockType !== lastType) {
+              index++;
+              lastType = blockType;
+              output[index] = [];
+            }
+            if (index > -1) {
+              output[index].push(blockId);
+            }
+          });
     }
     lastType = void 0;
   });
@@ -329,7 +399,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -337,13 +407,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -360,11 +430,18 @@ import * as React2 from "react";
 // src/icons/check.tsx
 import * as React from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -372,17 +449,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React2.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React2.createElement(check_default, null));
+    content = /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React2.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React2.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React2.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React2.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/components/header.tsx
@@ -393,13 +478,22 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React3 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React3.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React3.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React3.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React3.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/page-icon.tsx
@@ -409,15 +503,27 @@ import { getBlockIcon, getBlockTitle } from "notion-utils";
 // src/icons/default-page-icon.tsx
 import * as React4 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React4.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React4.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React4.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React4.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/lazy-image.tsx
@@ -425,32 +531,43 @@ import * as React5 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React5.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React5.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -460,18 +577,18 @@ var LazyImage = (_a) => {
   const attachZoom = React5.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React5.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
         src,
@@ -483,51 +600,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React5.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React5.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React5.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
@@ -538,38 +670,51 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React5.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -577,113 +722,176 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React6.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React6.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React6.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React6.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React6.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React6.memo(PageIconImpl);
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React14 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle3 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle3,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React7 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React7.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React7.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React7.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React7.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React8 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React8.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React8.createElement("defs", null, /* @__PURE__ */ React8.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React8.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React8.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React8.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React8.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React8.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React8.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React8.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React8.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React8.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React8.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React8.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React8.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React8.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React8.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React8.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React8.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React8.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React8.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React8.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/page-title.tsx
@@ -700,12 +908,23 @@ import * as React10 from "react";
 // src/icons/type-github.tsx
 import * as React9 from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React9.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React9.createElement("g", null, /* @__PURE__ */ React9.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React9.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React9.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -713,18 +932,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React10.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React10.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -739,24 +973,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React10.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React10.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React10.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React10.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React10.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React10.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React10.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React10.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React10.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React10.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React10.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React10.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React10.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/graceful-image.tsx
@@ -764,215 +1032,338 @@ import * as React11 from "react";
 import { Img } from "react-image";
 var GracefulImage = (props) => {
   if (isBrowser) {
-    return /* @__PURE__ */ React11.createElement(Img, __spreadValues({}, props));
+    return /* @__PURE__ */ React11.createElement(
+      Img,
+      __spreadValues({}, props)
+    );
   } else {
-    return /* @__PURE__ */ React11.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React11.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React12.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React12.createElement(React12.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React12.createElement(
+    React12.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React12.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React12.createElement(
+                React12.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React12.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React12.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React12.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React12.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React12.createElement(
+                      GracefulImage,
+                      {
+                        className: "notion-user",
+                        src: mapImageUrl(user.profile_photo, block),
+                        alt: name,
+                      }
+                    );
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React12.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React12.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React12.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React12.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React12.createElement(
+                  "b",
+                  null,
+                  element
+                );
+              case "i":
+                return /* @__PURE__ */ React12.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React12.createElement(
+                  "s",
+                  null,
+                  element
+                );
+              case "_":
+                return /* @__PURE__ */ React12.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React12.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React12.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React12.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React12.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React12.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React12.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React12.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React12.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React12.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React12.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React12.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React12.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React12.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React12.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React12.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React12.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React12.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React12.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React12.createElement(React12.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React12.createElement(React12.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React12.createElement(React12.Fragment, null, text));
+          return /* @__PURE__ */ React12.createElement(
+            React12.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/components/page-title.tsx
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle2(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React13.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React13.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React13.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React13.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React13.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React13.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React13.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React13.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React13.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React13.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React13.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React13.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
+  return /* @__PURE__ */ React13.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React13.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React13.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React13.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
 };
 var PageTitle = React13.memo(PageTitleImpl);
 
@@ -984,7 +1375,7 @@ var SearchDialog = class extends React14.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -995,7 +1386,11 @@ var SearchDialog = class extends React14.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -1004,67 +1399,81 @@ var SearchDialog = class extends React14.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle3(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle3(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React14.createRef();
   }
   componentDidMount() {
@@ -1075,87 +1484,189 @@ var SearchDialog = class extends React14.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React14.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React14.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React14.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React14.createElement(SearchIcon, null)), /* @__PURE__ */ React14.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React14.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React14.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React14.createElement(React14.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React14.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React14.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React14.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React14.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React14.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React14.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React14.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React14.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React14.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React14.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React14.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React14.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React14.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React14.createElement(
+                React14.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React14.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React14.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React14.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React14.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React14.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React14.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React14.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React14.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React14.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React14.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React14.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React14.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React14.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React14.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React14.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React14.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React14.createElement("div", null, /* @__PURE__ */ React14.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React14.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React14.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React14.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React14.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React15.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React15.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React15.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React15.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React15.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React15.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React15.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React15.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -1166,38 +1677,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React15.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React15.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React15.createElement(React15.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React15.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React15.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React15.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React15.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React15.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React15.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React15.createElement(
+        React15.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React15.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React15.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React15.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React15.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React15.useState(isShowingSearch);
   React15.useEffect(() => {
@@ -1223,20 +1767,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React15.createElement(React15.Fragment, null, hasSearch && /* @__PURE__ */ React15.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React15.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React15.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React15.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React15.createElement(
+    React15.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React15.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React15.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React15.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React15.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/next.tsx
@@ -1244,83 +1806,98 @@ import * as React16 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React16.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React16.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React16.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React16.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React16.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React16.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React16.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React17.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React17.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React17.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React17.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React17.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React17.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React17.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React17.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyLink = (_a) => {
-  var _b = _a, { href, rel, target, title } = _b, rest = __objRest(_b, ["href", "rel", "target", "title"]);
-  return /* @__PURE__ */ React17.createElement("span", __spreadValues({}, rest));
+  var _b = _a,
+    { href, rel, target, title } = _b,
+    rest = __objRest(_b, ["href", "rel", "target", "title"]);
+  return /* @__PURE__ */ React17.createElement(
+    "span",
+    __spreadValues({}, rest)
+  );
 };
 var dummyComponent = (name) => () => {
   console.warn(
@@ -1358,7 +1935,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -1367,7 +1944,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -1387,23 +1964,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React17.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -1425,17 +2004,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React17.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React17.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React17.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -1445,9 +2036,11 @@ var useNotionContext = () => {
 // src/components/lite-youtube-embed.tsx
 import * as React18 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -1459,7 +2052,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React18.useMemo(
@@ -1471,64 +2064,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React18.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React18.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React18.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React18.useState(false);
   const warmConnections = React18.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React18.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React18.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React18.createElement(React18.Fragment, null, /* @__PURE__ */ React18.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React18.createElement(React18.Fragment, null, /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React18.createElement(React18.Fragment, null, /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React18.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React18.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React18.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React18.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React18.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React18.createElement(
+    React18.Fragment,
+    null,
+    /* @__PURE__ */ React18.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React18.createElement(
+        React18.Fragment,
+        null,
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React18.createElement(
+        React18.Fragment,
+        null,
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React18.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React18.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React18.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React18.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React18.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -1545,7 +2165,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -1560,7 +2180,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -1570,7 +2190,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -1631,28 +2251,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React19.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React19.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React19.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React19.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -1662,29 +2291,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React19.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React19.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React19.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -1699,7 +2353,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React19.createElement("iframe", {
@@ -1710,29 +2364,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React19.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React19.createElement(React19.Fragment, null, /* @__PURE__ */ React19.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React19.createElement(
+    React19.Fragment,
+    null,
+    /* @__PURE__ */ React19.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -1743,7 +2415,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId2(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -1752,32 +2433,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React20.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React20.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React20.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React20.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React20.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React20.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React20.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React20.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId2(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React20.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React20.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -1802,14 +2512,25 @@ import * as React21 from "react";
 var Audio = ({ block, className }) => {
   var _a, _b, _c;
   const { recordMap } = useNotionContext();
-  const source = recordMap.signed_urls[block.id] || ((_c = (_b = (_a = block.properties) == null ? void 0 : _a.source) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]);
-  return /* @__PURE__ */ React21.createElement("div", {
-    className: cs("notion-audio", className)
-  }, /* @__PURE__ */ React21.createElement("audio", {
-    controls: true,
-    preload: "none",
-    src: source
-  }));
+  const source =
+    recordMap.signed_urls[block.id] ||
+    ((_c =
+      (_b = (_a = block.properties) == null ? void 0 : _a.source) == null
+        ? void 0
+        : _b[0]) == null
+      ? void 0
+      : _c[0]);
+  return /* @__PURE__ */ React21.createElement(
+    "div",
+    {
+      className: cs("notion-audio", className),
+    },
+    /* @__PURE__ */ React21.createElement("audio", {
+      controls: true,
+      preload: "none",
+      src: source,
+    })
+  );
 };
 
 // src/components/file.tsx
@@ -1818,43 +2539,87 @@ import * as React23 from "react";
 // src/icons/file-icon.tsx
 import * as React22 from "react";
 var FileIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React22.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React22.createElement("path", {
-    d: "M22,8v12c0,3.866-3.134,7-7,7s-7-3.134-7-7V8c0-2.762,2.238-5,5-5s5,2.238,5,5v12c0,1.657-1.343,3-3,3s-3-1.343-3-3V8h-2v12c0,2.762,2.238,5,5,5s5-2.238,5-5V8c0-3.866-3.134-7-7-7S6,4.134,6,8v12c0,4.971,4.029,9,9,9s9-4.029,9-9V8H22z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React22.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React22.createElement("path", {
+      d: "M22,8v12c0,3.866-3.134,7-7,7s-7-3.134-7-7V8c0-2.762,2.238-5,5-5s5,2.238,5,5v12c0,1.657-1.343,3-3,3s-3-1.343-3-3V8h-2v12c0,2.762,2.238,5,5,5s5-2.238,5-5V8c0-3.866-3.134-7-7-7S6,4.134,6,8v12c0,4.971,4.029,9,9,9s9-4.029,9-9V8H22z",
+    })
+  );
 };
 
 // src/components/file.tsx
 var File = ({ block, className }) => {
   var _a, _b, _c, _d, _e;
   const { components, recordMap } = useNotionContext();
-  const source = recordMap.signed_urls[block.id] || ((_c = (_b = (_a = block.properties) == null ? void 0 : _a.source) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]);
-  return /* @__PURE__ */ React23.createElement("div", {
-    className: cs("notion-file", className)
-  }, /* @__PURE__ */ React23.createElement(components.Link, {
-    className: "notion-file-link",
-    href: source,
-    target: "_blank",
-    rel: "noopener noreferrer"
-  }, /* @__PURE__ */ React23.createElement(FileIcon, {
-    className: "notion-file-icon"
-  }), /* @__PURE__ */ React23.createElement("div", {
-    className: "notion-file-info"
-  }, /* @__PURE__ */ React23.createElement("div", {
-    className: "notion-file-title"
-  }, /* @__PURE__ */ React23.createElement(Text, {
-    value: ((_d = block.properties) == null ? void 0 : _d.title) || [["File"]],
-    block
-  })), ((_e = block.properties) == null ? void 0 : _e.size) && /* @__PURE__ */ React23.createElement("div", {
-    className: "notion-file-size"
-  }, /* @__PURE__ */ React23.createElement(Text, {
-    value: block.properties.size,
-    block
-  })))));
+  const source =
+    recordMap.signed_urls[block.id] ||
+    ((_c =
+      (_b = (_a = block.properties) == null ? void 0 : _a.source) == null
+        ? void 0
+        : _b[0]) == null
+      ? void 0
+      : _c[0]);
+  return /* @__PURE__ */ React23.createElement(
+    "div",
+    {
+      className: cs("notion-file", className),
+    },
+    /* @__PURE__ */ React23.createElement(
+      components.Link,
+      {
+        className: "notion-file-link",
+        href: source,
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      /* @__PURE__ */ React23.createElement(FileIcon, {
+        className: "notion-file-icon",
+      }),
+      /* @__PURE__ */ React23.createElement(
+        "div",
+        {
+          className: "notion-file-info",
+        },
+        /* @__PURE__ */ React23.createElement(
+          "div",
+          {
+            className: "notion-file-title",
+          },
+          /* @__PURE__ */ React23.createElement(Text, {
+            value: ((_d = block.properties) == null ? void 0 : _d.title) || [
+              ["File"],
+            ],
+            block,
+          })
+        ),
+        ((_e = block.properties) == null ? void 0 : _e.size) &&
+          /* @__PURE__ */ React23.createElement(
+            "div",
+            {
+              className: "notion-file-size",
+            },
+            /* @__PURE__ */ React23.createElement(Text, {
+              value: block.properties.size,
+              block,
+            })
+          )
+      )
+    )
+  );
 };
 
 // src/components/google-drive.tsx
@@ -1863,41 +2628,75 @@ var GoogleDrive = ({ block, className }) => {
   var _a;
   const { components, mapImageUrl } = useNotionContext();
   const properties = (_a = block.format) == null ? void 0 : _a.drive_properties;
-  if (!properties)
-    return null;
+  if (!properties) return null;
   let domain;
   try {
     const url = new URL(properties.url);
     domain = url.hostname;
-  } catch (err) {
-  }
-  return /* @__PURE__ */ React24.createElement("div", {
-    className: cs("notion-google-drive", className)
-  }, /* @__PURE__ */ React24.createElement(components.Link, {
-    className: "notion-google-drive-link",
-    href: properties.url,
-    target: "_blank",
-    rel: "noopener noreferrer"
-  }, /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-preview"
-  }, /* @__PURE__ */ React24.createElement(GracefulImage, {
-    src: mapImageUrl(properties.thumbnail, block),
-    alt: properties.title || "Google Drive Document",
-    loading: "lazy"
-  })), /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body"
-  }, properties.title && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-title"
-  }, properties.title), properties.icon && domain && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-source"
-  }, properties.icon && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-source-icon",
-    style: {
-      backgroundImage: `url(${properties.icon})`
-    }
-  }), domain && /* @__PURE__ */ React24.createElement("div", {
-    className: "notion-google-drive-body-source-domain"
-  }, domain)))));
+  } catch (err) {}
+  return /* @__PURE__ */ React24.createElement(
+    "div",
+    {
+      className: cs("notion-google-drive", className),
+    },
+    /* @__PURE__ */ React24.createElement(
+      components.Link,
+      {
+        className: "notion-google-drive-link",
+        href: properties.url,
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      /* @__PURE__ */ React24.createElement(
+        "div",
+        {
+          className: "notion-google-drive-preview",
+        },
+        /* @__PURE__ */ React24.createElement(GracefulImage, {
+          src: mapImageUrl(properties.thumbnail, block),
+          alt: properties.title || "Google Drive Document",
+          loading: "lazy",
+        })
+      ),
+      /* @__PURE__ */ React24.createElement(
+        "div",
+        {
+          className: "notion-google-drive-body",
+        },
+        properties.title &&
+          /* @__PURE__ */ React24.createElement(
+            "div",
+            {
+              className: "notion-google-drive-body-title",
+            },
+            properties.title
+          ),
+        properties.icon &&
+          domain &&
+          /* @__PURE__ */ React24.createElement(
+            "div",
+            {
+              className: "notion-google-drive-body-source",
+            },
+            properties.icon &&
+              /* @__PURE__ */ React24.createElement("div", {
+                className: "notion-google-drive-body-source-icon",
+                style: {
+                  backgroundImage: `url(${properties.icon})`,
+                },
+              }),
+            domain &&
+              /* @__PURE__ */ React24.createElement(
+                "div",
+                {
+                  className: "notion-google-drive-body-source-domain",
+                },
+                domain
+              )
+          )
+      )
+    )
+  );
 };
 
 // src/components/page-aside.tsx
@@ -1911,36 +2710,34 @@ var PageAside = ({
   pageAside,
   hasToc,
   hasAside,
-  className
+  className,
 }) => {
   const throttleMs = 100;
   const actionSectionScrollSpy = React25.useMemo(
-    () => (0, import_lodash2.default)(() => {
-      const sections = document.getElementsByClassName("notion-h");
-      let prevBBox = null;
-      let currentSectionId = activeSection;
-      for (let i = 0; i < sections.length; ++i) {
-        const section = sections[i];
-        if (!section || !(section instanceof Element))
-          continue;
-        if (!currentSectionId) {
-          currentSectionId = section.getAttribute("data-id");
-        }
-        const bbox = section.getBoundingClientRect();
-        const prevHeight = prevBBox ? bbox.top - prevBBox.bottom : 0;
-        const offset = Math.max(150, prevHeight / 4);
-        if (bbox.top - offset < 0) {
-          currentSectionId = section.getAttribute("data-id");
-          prevBBox = bbox;
-          continue;
+    () =>
+      (0, import_lodash2.default)(() => {
+        const sections = document.getElementsByClassName("notion-h");
+        let prevBBox = null;
+        let currentSectionId = activeSection;
+        for (let i = 0; i < sections.length; ++i) {
+          const section = sections[i];
+          if (!section || !(section instanceof Element)) continue;
+          if (!currentSectionId) {
+            currentSectionId = section.getAttribute("data-id");
+          }
+          const bbox = section.getBoundingClientRect();
+          const prevHeight = prevBBox ? bbox.top - prevBBox.bottom : 0;
+          const offset = Math.max(150, prevHeight / 4);
+          if (bbox.top - offset < 0) {
+            currentSectionId = section.getAttribute("data-id");
+            prevBBox = bbox;
+            continue;
+          }
+          break;
         }
-        break;
-      }
-      setActiveSection(currentSectionId);
-    }, throttleMs),
-    [
-      setActiveSection
-    ]
+        setActiveSection(currentSectionId);
+      }, throttleMs),
+    [setActiveSection]
   );
   React25.useEffect(() => {
     if (!hasToc) {
@@ -1955,32 +2752,59 @@ var PageAside = ({
   if (!hasAside) {
     return null;
   }
-  return /* @__PURE__ */ React25.createElement("aside", {
-    className: cs("notion-aside", className)
-  }, hasToc && /* @__PURE__ */ React25.createElement("div", {
-    className: "notion-aside-table-of-contents"
-  }, /* @__PURE__ */ React25.createElement("div", {
-    className: "notion-aside-table-of-contents-header"
-  }, "Table of Contents"), /* @__PURE__ */ React25.createElement("nav", {
-    className: "notion-table-of-contents"
-  }, toc.map((tocItem) => {
-    const id = uuidToId(tocItem.id);
-    return /* @__PURE__ */ React25.createElement("a", {
-      key: id,
-      href: `#${id}`,
-      className: cs(
-        "notion-table-of-contents-item",
-        `notion-table-of-contents-item-indent-level-${tocItem.indentLevel}`,
-        activeSection === id && "notion-table-of-contents-active-item"
-      )
-    }, /* @__PURE__ */ React25.createElement("span", {
-      className: "notion-table-of-contents-item-body",
-      style: {
-        display: "inline-block",
-        marginLeft: tocItem.indentLevel * 16
-      }
-    }, tocItem.text));
-  }))), pageAside);
+  return /* @__PURE__ */ React25.createElement(
+    "aside",
+    {
+      className: cs("notion-aside", className),
+    },
+    hasToc &&
+      /* @__PURE__ */ React25.createElement(
+        "div",
+        {
+          className: "notion-aside-table-of-contents",
+        },
+        /* @__PURE__ */ React25.createElement(
+          "div",
+          {
+            className: "notion-aside-table-of-contents-header",
+          },
+          "Table of Contents"
+        ),
+        /* @__PURE__ */ React25.createElement(
+          "nav",
+          {
+            className: "notion-table-of-contents",
+          },
+          toc.map((tocItem) => {
+            const id = uuidToId(tocItem.id);
+            return /* @__PURE__ */ React25.createElement(
+              "a",
+              {
+                key: id,
+                href: `#${id}`,
+                className: cs(
+                  "notion-table-of-contents-item",
+                  `notion-table-of-contents-item-indent-level-${tocItem.indentLevel}`,
+                  activeSection === id && "notion-table-of-contents-active-item"
+                ),
+              },
+              /* @__PURE__ */ React25.createElement(
+                "span",
+                {
+                  className: "notion-table-of-contents-item-body",
+                  style: {
+                    display: "inline-block",
+                    marginLeft: tocItem.indentLevel * 16,
+                  },
+                },
+                tocItem.text
+              )
+            );
+          })
+        )
+      ),
+    pageAside
+  );
 };
 
 // src/components/sync-pointer-block.tsx
@@ -1994,38 +2818,98 @@ var SyncPointerBlock = ({ block, level }) => {
     return null;
   }
   const syncPointerBlock = block;
-  const referencePointerId = (_b = (_a = syncPointerBlock == null ? void 0 : syncPointerBlock.format) == null ? void 0 : _a.transclusion_reference_pointer) == null ? void 0 : _b.id;
+  const referencePointerId =
+    (_b =
+      (_a = syncPointerBlock == null ? void 0 : syncPointerBlock.format) == null
+        ? void 0
+        : _a.transclusion_reference_pointer) == null
+      ? void 0
+      : _b.id;
   if (!referencePointerId) {
     return null;
   }
   return /* @__PURE__ */ React26.createElement(NotionBlockRenderer, {
     key: referencePointerId,
     level,
-    blockId: referencePointerId
+    blockId: referencePointerId,
   });
 };
 
 // src/icons/link-icon.tsx
 import * as React27 from "react";
 var LinkIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React27.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 16 16",
-    width: "16",
-    height: "16"
-  }), /* @__PURE__ */ React27.createElement("path", {
-    fillRule: "evenodd",
-    d: "M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React27.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 16 16",
+        width: "16",
+        height: "16",
+      }
+    ),
+    /* @__PURE__ */ React27.createElement("path", {
+      fillRule: "evenodd",
+      d: "M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z",
+    })
+  );
 };
 
 // src/block.tsx
 var tocIndentLevelCache = {};
 var pageCoverStyleCache = {};
 var Block = (props) => {
-  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L, _M, _N, _O, _P, _Q;
+  var _a,
+    _b,
+    _c,
+    _d,
+    _e,
+    _f,
+    _g,
+    _h,
+    _i,
+    _j,
+    _k,
+    _l,
+    _m,
+    _n,
+    _o,
+    _p,
+    _q,
+    _r,
+    _s,
+    _t,
+    _u,
+    _v,
+    _w,
+    _x,
+    _y,
+    _z,
+    _A,
+    _B,
+    _C,
+    _D,
+    _E,
+    _F,
+    _G,
+    _H,
+    _I,
+    _J,
+    _K,
+    _L,
+    _M,
+    _N,
+    _O,
+    _P,
+    _Q;
   const ctx2 = useNotionContext();
   const {
     components,
@@ -2038,7 +2922,7 @@ var Block = (props) => {
     minTableOfContentsItems,
     defaultPageIcon,
     defaultPageCover,
-    defaultPageCoverPosition
+    defaultPageCoverPosition,
   } = ctx2;
   const [activeSection, setActiveSection] = React28.useState(null);
   const {
@@ -2055,16 +2939,17 @@ var Block = (props) => {
     pageAside,
     pageCover,
     hideBlockId,
-    disableHeader
+    disableHeader,
   } = props;
   if (!block) {
     return null;
   }
   if (level === 0 && block.type === "collection_view") {
-    ;
     block.type = "collection_view_page";
   }
-  const blockId = hideBlockId ? "notion-block" : `notion-block-${uuidToId2(block.id)}`;
+  const blockId = hideBlockId
+    ? "notion-block"
+    : `notion-block-${uuidToId2(block.id)}`;
   switch (block.type) {
     case "collection_view_page":
     case "page":
@@ -2074,132 +2959,226 @@ var Block = (props) => {
           page_cover = defaultPageCover,
           page_cover_position = defaultPageCoverPosition,
           page_full_width,
-          page_small_text
+          page_small_text,
         } = block.format || {};
         if (fullPage) {
-          const properties = block.type === "page" ? block.properties : {
-            title: (_b = (_a = recordMap.collection[getBlockCollectionId(block, recordMap)]) == null ? void 0 : _a.value) == null ? void 0 : _b.name
-          };
+          const properties =
+            block.type === "page"
+              ? block.properties
+              : {
+                  title:
+                    (_b =
+                      (_a =
+                        recordMap.collection[
+                          getBlockCollectionId(block, recordMap)
+                        ]) == null
+                        ? void 0
+                        : _a.value) == null
+                      ? void 0
+                      : _b.name,
+                };
           const coverPosition = (1 - (page_cover_position || 0.5)) * 100;
           const pageCoverObjectPosition = `center ${coverPosition}%`;
           let pageCoverStyle = pageCoverStyleCache[pageCoverObjectPosition];
           if (!pageCoverStyle) {
             pageCoverStyle = pageCoverStyleCache[pageCoverObjectPosition] = {
-              objectPosition: pageCoverObjectPosition
+              objectPosition: pageCoverObjectPosition,
             };
           }
-          const pageIcon = (_c = getBlockIcon2(block, recordMap)) != null ? _c : defaultPageIcon;
+          const pageIcon =
+            (_c = getBlockIcon2(block, recordMap)) != null
+              ? _c
+              : defaultPageIcon;
           const isPageIconUrl = pageIcon && isUrl(pageIcon);
-          const toc = getPageTableOfContents(
-            block,
-            recordMap
-          );
-          const hasToc = showTableOfContents && toc.length >= minTableOfContentsItems;
+          const toc = getPageTableOfContents(block, recordMap);
+          const hasToc =
+            showTableOfContents && toc.length >= minTableOfContentsItems;
           const hasAside = (hasToc || pageAside) && !page_full_width;
           const hasPageCover = pageCover || page_cover;
-          return /* @__PURE__ */ React28.createElement("div", {
-            className: cs(
-              "notion",
-              "notion-app",
-              darkMode ? "dark-mode" : "light-mode",
-              blockId,
-              className
+          return /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: cs(
+                "notion",
+                "notion-app",
+                darkMode ? "dark-mode" : "light-mode",
+                blockId,
+                className
+              ),
+            },
+            /* @__PURE__ */ React28.createElement("div", {
+              className: "notion-viewport",
+            }),
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-frame",
+              },
+              !disableHeader &&
+                /* @__PURE__ */ React28.createElement(components.Header, {
+                  block,
+                }),
+              header,
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-page-scroller",
+                },
+                hasPageCover &&
+                  (pageCover
+                    ? pageCover
+                    : /* @__PURE__ */ React28.createElement(
+                        "div",
+                        {
+                          className: "notion-page-cover-wrapper",
+                        },
+                        /* @__PURE__ */ React28.createElement(LazyImage, {
+                          src: mapImageUrl(page_cover, block),
+                          alt: getTextContent2(
+                            properties == null ? void 0 : properties.title
+                          ),
+                          priority: true,
+                          className: "notion-page-cover",
+                          style: pageCoverStyle,
+                        })
+                      )),
+                /* @__PURE__ */ React28.createElement(
+                  "main",
+                  {
+                    className: cs(
+                      "notion-page",
+                      hasPageCover
+                        ? "notion-page-has-cover"
+                        : "notion-page-no-cover",
+                      page_icon
+                        ? "notion-page-has-icon"
+                        : "notion-page-no-icon",
+                      isPageIconUrl
+                        ? "notion-page-has-image-icon"
+                        : "notion-page-has-text-icon",
+                      "notion-full-page",
+                      page_full_width && "notion-full-width",
+                      page_small_text && "notion-small-text",
+                      bodyClassName
+                    ),
+                  },
+                  page_icon &&
+                    /* @__PURE__ */ React28.createElement(PageIcon, {
+                      block,
+                      defaultIcon: defaultPageIcon,
+                      inline: false,
+                    }),
+                  pageHeader,
+                  /* @__PURE__ */ React28.createElement(
+                    "h1",
+                    {
+                      className: "notion-title",
+                    },
+                    pageTitle != null
+                      ? pageTitle
+                      : /* @__PURE__ */ React28.createElement(Text, {
+                          value: properties == null ? void 0 : properties.title,
+                          block,
+                        })
+                  ),
+                  (block.type === "collection_view_page" ||
+                    (block.type === "page" &&
+                      block.parent_table === "collection")) &&
+                    /* @__PURE__ */ React28.createElement(
+                      components.Collection,
+                      {
+                        block,
+                        ctx: ctx2,
+                      }
+                    ),
+                  block.type !== "collection_view_page" &&
+                    /* @__PURE__ */ React28.createElement(
+                      "div",
+                      {
+                        className: cs(
+                          "notion-page-content",
+                          hasAside && "notion-page-content-has-aside",
+                          hasToc && "notion-page-content-has-toc"
+                        ),
+                      },
+                      /* @__PURE__ */ React28.createElement(
+                        "article",
+                        {
+                          className: "notion-page-content-inner",
+                        },
+                        children
+                      ),
+                      hasAside &&
+                        /* @__PURE__ */ React28.createElement(PageAside, {
+                          toc,
+                          activeSection,
+                          setActiveSection,
+                          hasToc,
+                          hasAside,
+                          pageAside,
+                        })
+                    ),
+                  pageFooter
+                ),
+                footer
+              )
             )
-          }, /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-viewport"
-          }), /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-frame"
-          }, !disableHeader && /* @__PURE__ */ React28.createElement(components.Header, {
-            block
-          }), header, /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-page-scroller"
-          }, hasPageCover && (pageCover ? pageCover : /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-page-cover-wrapper"
-          }, /* @__PURE__ */ React28.createElement(LazyImage, {
-            src: mapImageUrl(page_cover, block),
-            alt: getTextContent2(properties == null ? void 0 : properties.title),
-            priority: true,
-            className: "notion-page-cover",
-            style: pageCoverStyle
-          }))), /* @__PURE__ */ React28.createElement("main", {
-            className: cs(
-              "notion-page",
-              hasPageCover ? "notion-page-has-cover" : "notion-page-no-cover",
-              page_icon ? "notion-page-has-icon" : "notion-page-no-icon",
-              isPageIconUrl ? "notion-page-has-image-icon" : "notion-page-has-text-icon",
-              "notion-full-page",
-              page_full_width && "notion-full-width",
-              page_small_text && "notion-small-text",
-              bodyClassName
-            )
-          }, page_icon && /* @__PURE__ */ React28.createElement(PageIcon, {
-            block,
-            defaultIcon: defaultPageIcon,
-            inline: false
-          }), pageHeader, /* @__PURE__ */ React28.createElement("h1", {
-            className: "notion-title"
-          }, pageTitle != null ? pageTitle : /* @__PURE__ */ React28.createElement(Text, {
-            value: properties == null ? void 0 : properties.title,
-            block
-          })), (block.type === "collection_view_page" || block.type === "page" && block.parent_table === "collection") && /* @__PURE__ */ React28.createElement(components.Collection, {
-            block,
-            ctx: ctx2
-          }), block.type !== "collection_view_page" && /* @__PURE__ */ React28.createElement("div", {
-            className: cs(
-              "notion-page-content",
-              hasAside && "notion-page-content-has-aside",
-              hasToc && "notion-page-content-has-toc"
-            )
-          }, /* @__PURE__ */ React28.createElement("article", {
-            className: "notion-page-content-inner"
-          }, children), hasAside && /* @__PURE__ */ React28.createElement(PageAside, {
-            toc,
-            activeSection,
-            setActiveSection,
-            hasToc,
-            hasAside,
-            pageAside
-          })), pageFooter), footer)));
+          );
         } else {
-          return /* @__PURE__ */ React28.createElement("main", {
-            className: cs(
-              "notion",
-              darkMode ? "dark-mode" : "light-mode",
-              "notion-page",
-              page_full_width && "notion-full-width",
-              page_small_text && "notion-small-text",
-              blockId,
-              className,
-              bodyClassName
-            )
-          }, /* @__PURE__ */ React28.createElement("div", {
-            className: "notion-viewport"
-          }), pageHeader, (block.type === "collection_view_page" || block.type === "page" && block.parent_table === "collection") && /* @__PURE__ */ React28.createElement(components.Collection, {
-            block,
-            ctx: ctx2
-          }), block.type !== "collection_view_page" && children, pageFooter);
+          return /* @__PURE__ */ React28.createElement(
+            "main",
+            {
+              className: cs(
+                "notion",
+                darkMode ? "dark-mode" : "light-mode",
+                "notion-page",
+                page_full_width && "notion-full-width",
+                page_small_text && "notion-small-text",
+                blockId,
+                className,
+                bodyClassName
+              ),
+            },
+            /* @__PURE__ */ React28.createElement("div", {
+              className: "notion-viewport",
+            }),
+            pageHeader,
+            (block.type === "collection_view_page" ||
+              (block.type === "page" && block.parent_table === "collection")) &&
+              /* @__PURE__ */ React28.createElement(components.Collection, {
+                block,
+                ctx: ctx2,
+              }),
+            block.type !== "collection_view_page" && children,
+            pageFooter
+          );
         }
       } else {
-        const blockColor = (_d = block.format) == null ? void 0 : _d.block_color;
-        return /* @__PURE__ */ React28.createElement(components.PageLink, {
-          className: cs(
-            "notion-page-link",
-            blockColor && `notion-${blockColor}`,
-            blockId
-          ),
-          href: mapPageUrl(block.id)
-        }, /* @__PURE__ */ React28.createElement(PageTitle, {
-          block
-        }));
+        const blockColor =
+          (_d = block.format) == null ? void 0 : _d.block_color;
+        return /* @__PURE__ */ React28.createElement(
+          components.PageLink,
+          {
+            className: cs(
+              "notion-page-link",
+              blockColor && `notion-${blockColor}`,
+              blockId
+            ),
+            href: mapPageUrl(block.id),
+          },
+          /* @__PURE__ */ React28.createElement(PageTitle, {
+            block,
+          })
+        );
       }
     case "header":
     case "sub_header":
     case "sub_sub_header": {
-      if (!block.properties)
-        return null;
+      if (!block.properties) return null;
       const blockColor = (_e = block.format) == null ? void 0 : _e.block_color;
       const id = uuidToId2(block.id);
-      const title = getTextContent2(block.properties.title) || `Notion Header ${id}`;
+      const title =
+        getTextContent2(block.properties.title) || `Notion Header ${id}`;
       let indentLevel = tocIndentLevelCache[block.id];
       let indentLevelClass;
       if (indentLevel === void 0) {
@@ -2227,96 +3206,180 @@ var Block = (props) => {
         indentLevelClass,
         blockId
       );
-      const innerHeader = /* @__PURE__ */ React28.createElement("span", null, /* @__PURE__ */ React28.createElement("div", {
-        id,
-        className: "notion-header-anchor"
-      }), !((_f = block.format) == null ? void 0 : _f.toggleable) && /* @__PURE__ */ React28.createElement("a", {
-        className: "notion-hash-link",
-        href: `#${id}`,
-        title
-      }, /* @__PURE__ */ React28.createElement(LinkIcon, null)), /* @__PURE__ */ React28.createElement("span", {
-        className: "notion-h-title"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: block.properties.title,
-        block
-      })));
+      const innerHeader = /* @__PURE__ */ React28.createElement(
+        "span",
+        null,
+        /* @__PURE__ */ React28.createElement("div", {
+          id,
+          className: "notion-header-anchor",
+        }),
+        !((_f = block.format) == null ? void 0 : _f.toggleable) &&
+          /* @__PURE__ */ React28.createElement(
+            "a",
+            {
+              className: "notion-hash-link",
+              href: `#${id}`,
+              title,
+            },
+            /* @__PURE__ */ React28.createElement(LinkIcon, null)
+          ),
+        /* @__PURE__ */ React28.createElement(
+          "span",
+          {
+            className: "notion-h-title",
+          },
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: block.properties.title,
+            block,
+          })
+        )
+      );
       let headerBlock = null;
       if (isH1) {
-        headerBlock = /* @__PURE__ */ React28.createElement("h2", {
-          className: classNameStr,
-          "data-id": id
-        }, innerHeader);
+        headerBlock = /* @__PURE__ */ React28.createElement(
+          "h2",
+          {
+            className: classNameStr,
+            "data-id": id,
+          },
+          innerHeader
+        );
       } else if (isH2) {
-        headerBlock = /* @__PURE__ */ React28.createElement("h3", {
-          className: classNameStr,
-          "data-id": id
-        }, innerHeader);
+        headerBlock = /* @__PURE__ */ React28.createElement(
+          "h3",
+          {
+            className: classNameStr,
+            "data-id": id,
+          },
+          innerHeader
+        );
       } else {
-        headerBlock = /* @__PURE__ */ React28.createElement("h4", {
-          className: classNameStr,
-          "data-id": id
-        }, innerHeader);
+        headerBlock = /* @__PURE__ */ React28.createElement(
+          "h4",
+          {
+            className: classNameStr,
+            "data-id": id,
+          },
+          innerHeader
+        );
       }
       if ((_g = block.format) == null ? void 0 : _g.toggleable) {
-        return /* @__PURE__ */ React28.createElement("details", {
-          className: cs("notion-toggle", blockId)
-        }, /* @__PURE__ */ React28.createElement("summary", null, headerBlock), /* @__PURE__ */ React28.createElement("div", null, children));
+        return /* @__PURE__ */ React28.createElement(
+          "details",
+          {
+            className: cs("notion-toggle", blockId),
+          },
+          /* @__PURE__ */ React28.createElement("summary", null, headerBlock),
+          /* @__PURE__ */ React28.createElement("div", null, children)
+        );
       } else {
         return headerBlock;
       }
     }
     case "divider":
       return /* @__PURE__ */ React28.createElement("hr", {
-        className: cs("notion-hr", blockId)
+        className: cs("notion-hr", blockId),
       });
     case "text": {
-      if (!block.properties && !((_h = block.content) == null ? void 0 : _h.length)) {
-        return /* @__PURE__ */ React28.createElement("div", {
-          className: cs("notion-blank", blockId)
-        }, "\xA0");
+      if (
+        !block.properties &&
+        !((_h = block.content) == null ? void 0 : _h.length)
+      ) {
+        return /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: cs("notion-blank", blockId),
+          },
+          "\xA0"
+        );
       }
       const blockColor = (_i = block.format) == null ? void 0 : _i.block_color;
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs(
-          "notion-text",
-          blockColor && `notion-${blockColor}`,
-          blockId
-        )
-      }, ((_j = block.properties) == null ? void 0 : _j.title) && /* @__PURE__ */ React28.createElement(Text, {
-        value: block.properties.title,
-        block
-      }), children && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-text-children"
-      }, children));
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs(
+            "notion-text",
+            blockColor && `notion-${blockColor}`,
+            blockId
+          ),
+        },
+        ((_j = block.properties) == null ? void 0 : _j.title) &&
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: block.properties.title,
+            block,
+          }),
+        children &&
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: "notion-text-children",
+            },
+            children
+          )
+      );
     }
     case "bulleted_list":
     case "numbered_list": {
-      const wrapList = (content, start2) => block.type === "bulleted_list" ? /* @__PURE__ */ React28.createElement("ul", {
-        className: cs("notion-list", "notion-list-disc", blockId)
-      }, content) : /* @__PURE__ */ React28.createElement("ol", {
-        start: start2,
-        className: cs("notion-list", "notion-list-numbered", blockId)
-      }, content);
+      const wrapList = (content, start2) =>
+        block.type === "bulleted_list"
+          ? /* @__PURE__ */ React28.createElement(
+              "ul",
+              {
+                className: cs("notion-list", "notion-list-disc", blockId),
+              },
+              content
+            )
+          : /* @__PURE__ */ React28.createElement(
+              "ol",
+              {
+                start: start2,
+                className: cs("notion-list", "notion-list-numbered", blockId),
+              },
+              content
+            );
       let output = null;
       if (block.content) {
-        output = /* @__PURE__ */ React28.createElement(React28.Fragment, null, block.properties && /* @__PURE__ */ React28.createElement("li", null, /* @__PURE__ */ React28.createElement(Text, {
-          value: block.properties.title,
-          block
-        })), wrapList(children));
+        output = /* @__PURE__ */ React28.createElement(
+          React28.Fragment,
+          null,
+          block.properties &&
+            /* @__PURE__ */ React28.createElement(
+              "li",
+              null,
+              /* @__PURE__ */ React28.createElement(Text, {
+                value: block.properties.title,
+                block,
+              })
+            ),
+          wrapList(children)
+        );
       } else {
-        output = block.properties ? /* @__PURE__ */ React28.createElement("li", null, /* @__PURE__ */ React28.createElement(Text, {
-          value: block.properties.title,
-          block
-        })) : null;
+        output = block.properties
+          ? /* @__PURE__ */ React28.createElement(
+              "li",
+              null,
+              /* @__PURE__ */ React28.createElement(Text, {
+                value: block.properties.title,
+                block,
+              })
+            )
+          : null;
       }
-      const isTopLevel = block.type !== ((_l = (_k = recordMap.block[block.parent_id]) == null ? void 0 : _k.value) == null ? void 0 : _l.type);
+      const isTopLevel =
+        block.type !==
+        ((_l =
+          (_k = recordMap.block[block.parent_id]) == null
+            ? void 0
+            : _k.value) == null
+          ? void 0
+          : _l.type);
       const start = getListNumber(block.id, recordMap.block);
       return isTopLevel ? wrapList(output, start) : output;
     }
     case "embed":
       return /* @__PURE__ */ React28.createElement(components.Embed, {
         blockId,
-        block
+        block,
       });
     case "tweet":
     case "maps":
@@ -2330,110 +3393,150 @@ var Block = (props) => {
     case "video":
       return /* @__PURE__ */ React28.createElement(AssetWrapper, {
         blockId,
-        block
+        block,
       });
     case "drive": {
-      const properties = (_m = block.format) == null ? void 0 : _m.drive_properties;
+      const properties =
+        (_m = block.format) == null ? void 0 : _m.drive_properties;
       if (!properties) {
         if ((_n = block.format) == null ? void 0 : _n.display_source) {
           return /* @__PURE__ */ React28.createElement(AssetWrapper, {
             blockId,
-            block
+            block,
           });
         }
       }
       return /* @__PURE__ */ React28.createElement(GoogleDrive, {
         block,
-        className: blockId
+        className: blockId,
       });
     }
     case "audio":
       return /* @__PURE__ */ React28.createElement(Audio, {
         block,
-        className: blockId
+        className: blockId,
       });
     case "file":
       return /* @__PURE__ */ React28.createElement(File, {
         block,
-        className: blockId
+        className: blockId,
       });
     case "equation":
       return /* @__PURE__ */ React28.createElement(components.Equation, {
         block,
         inline: false,
-        className: blockId
+        className: blockId,
       });
     case "code":
       return /* @__PURE__ */ React28.createElement(components.Code, {
-        block
+        block,
       });
     case "column_list":
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-row", blockId)
-      }, children);
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs("notion-row", blockId),
+        },
+        children
+      );
     case "column": {
       const spacerWidth = `min(32px, 4vw)`;
-      const ratio = ((_o = block.format) == null ? void 0 : _o.column_ratio) || 0.5;
-      const parent = (_p = recordMap.block[block.parent_id]) == null ? void 0 : _p.value;
-      const columns = ((_q = parent == null ? void 0 : parent.content) == null ? void 0 : _q.length) || Math.max(2, Math.ceil(1 / ratio));
-      const width = `calc((100% - (${columns - 1} * ${spacerWidth})) * ${ratio})`;
+      const ratio =
+        ((_o = block.format) == null ? void 0 : _o.column_ratio) || 0.5;
+      const parent =
+        (_p = recordMap.block[block.parent_id]) == null ? void 0 : _p.value;
+      const columns =
+        ((_q = parent == null ? void 0 : parent.content) == null
+          ? void 0
+          : _q.length) || Math.max(2, Math.ceil(1 / ratio));
+      const width = `calc((100% - (${
+        columns - 1
+      } * ${spacerWidth})) * ${ratio})`;
       const style = { width };
-      return /* @__PURE__ */ React28.createElement(React28.Fragment, null, /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-column", blockId),
-        style
-      }, children), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-spacer"
-      }));
+      return /* @__PURE__ */ React28.createElement(
+        React28.Fragment,
+        null,
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: cs("notion-column", blockId),
+            style,
+          },
+          children
+        ),
+        /* @__PURE__ */ React28.createElement("div", {
+          className: "notion-spacer",
+        })
+      );
     }
     case "quote": {
-      if (!block.properties)
-        return null;
+      if (!block.properties) return null;
       const blockColor = (_r = block.format) == null ? void 0 : _r.block_color;
-      return /* @__PURE__ */ React28.createElement("blockquote", {
-        className: cs(
-          "notion-quote",
-          blockColor && `notion-${blockColor}`,
-          blockId
-        )
-      }, /* @__PURE__ */ React28.createElement("div", null, /* @__PURE__ */ React28.createElement(Text, {
-        value: block.properties.title,
-        block
-      })), children);
+      return /* @__PURE__ */ React28.createElement(
+        "blockquote",
+        {
+          className: cs(
+            "notion-quote",
+            blockColor && `notion-${blockColor}`,
+            blockId
+          ),
+        },
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          null,
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: block.properties.title,
+            block,
+          })
+        ),
+        children
+      );
     }
     case "collection_view":
       return /* @__PURE__ */ React28.createElement(components.Collection, {
         block,
         className: blockId,
-        ctx: ctx2
+        ctx: ctx2,
       });
     case "callout":
       if (components.Callout) {
         return /* @__PURE__ */ React28.createElement(components.Callout, {
           block,
-          className: blockId
+          className: blockId,
         });
       } else {
-        return /* @__PURE__ */ React28.createElement("div", {
-          className: cs(
-            "notion-callout",
-            ((_s = block.format) == null ? void 0 : _s.block_color) && `notion-${(_t = block.format) == null ? void 0 : _t.block_color}_co`,
-            blockId
+        return /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: cs(
+              "notion-callout",
+              ((_s = block.format) == null ? void 0 : _s.block_color) &&
+                `notion-${
+                  (_t = block.format) == null ? void 0 : _t.block_color
+                }_co`,
+              blockId
+            ),
+          },
+          /* @__PURE__ */ React28.createElement(PageIcon, {
+            block,
+          }),
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: "notion-callout-text",
+            },
+            /* @__PURE__ */ React28.createElement(Text, {
+              value: (_u = block.properties) == null ? void 0 : _u.title,
+              block,
+            }),
+            children
           )
-        }, /* @__PURE__ */ React28.createElement(PageIcon, {
-          block
-        }), /* @__PURE__ */ React28.createElement("div", {
-          className: "notion-callout-text"
-        }, /* @__PURE__ */ React28.createElement(Text, {
-          value: (_u = block.properties) == null ? void 0 : _u.title,
-          block
-        }), children));
+        );
       }
     case "bookmark": {
-      if (!block.properties)
-        return null;
+      if (!block.properties) return null;
       const link = block.properties.link;
-      if (!link || !((_v = link[0]) == null ? void 0 : _v[0]))
-        return null;
+      if (!link || !((_v = link[0]) == null ? void 0 : _v[0])) return null;
       let title = getTextContent2(block.properties.title);
       if (!title) {
         title = getTextContent2(link);
@@ -2443,167 +3546,318 @@ var Block = (props) => {
           try {
             const url = new URL(title);
             title = url.hostname;
-          } catch (err) {
-          }
+          } catch (err) {}
         }
       }
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-row"
-      }, /* @__PURE__ */ React28.createElement(components.Link, {
-        target: "_blank",
-        rel: "noopener noreferrer",
-        className: cs(
-          "notion-bookmark",
-          ((_w = block.format) == null ? void 0 : _w.block_color) && `notion-${block.format.block_color}`,
-          blockId
-        ),
-        href: link[0][0]
-      }, /* @__PURE__ */ React28.createElement("div", null, title && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-title"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: [[title]],
-        block
-      })), ((_x = block.properties) == null ? void 0 : _x.description) && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-description"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: (_y = block.properties) == null ? void 0 : _y.description,
-        block
-      })), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-link"
-      }, ((_z = block.format) == null ? void 0 : _z.bookmark_icon) && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-link-icon"
-      }, /* @__PURE__ */ React28.createElement(LazyImage, {
-        src: mapImageUrl((_A = block.format) == null ? void 0 : _A.bookmark_icon, block),
-        alt: title
-      })), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-link-text"
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: link,
-        block
-      })))), ((_B = block.format) == null ? void 0 : _B.bookmark_cover) && /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-bookmark-image"
-      }, /* @__PURE__ */ React28.createElement(LazyImage, {
-        src: mapImageUrl((_C = block.format) == null ? void 0 : _C.bookmark_cover, block),
-        alt: getTextContent2((_D = block.properties) == null ? void 0 : _D.title),
-        style: {
-          objectFit: "cover"
-        }
-      }))));
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: "notion-row",
+        },
+        /* @__PURE__ */ React28.createElement(
+          components.Link,
+          {
+            target: "_blank",
+            rel: "noopener noreferrer",
+            className: cs(
+              "notion-bookmark",
+              ((_w = block.format) == null ? void 0 : _w.block_color) &&
+                `notion-${block.format.block_color}`,
+              blockId
+            ),
+            href: link[0][0],
+          },
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            null,
+            title &&
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-bookmark-title",
+                },
+                /* @__PURE__ */ React28.createElement(Text, {
+                  value: [[title]],
+                  block,
+                })
+              ),
+            ((_x = block.properties) == null ? void 0 : _x.description) &&
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-bookmark-description",
+                },
+                /* @__PURE__ */ React28.createElement(Text, {
+                  value:
+                    (_y = block.properties) == null ? void 0 : _y.description,
+                  block,
+                })
+              ),
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-bookmark-link",
+              },
+              ((_z = block.format) == null ? void 0 : _z.bookmark_icon) &&
+                /* @__PURE__ */ React28.createElement(
+                  "div",
+                  {
+                    className: "notion-bookmark-link-icon",
+                  },
+                  /* @__PURE__ */ React28.createElement(LazyImage, {
+                    src: mapImageUrl(
+                      (_A = block.format) == null ? void 0 : _A.bookmark_icon,
+                      block
+                    ),
+                    alt: title,
+                  })
+                ),
+              /* @__PURE__ */ React28.createElement(
+                "div",
+                {
+                  className: "notion-bookmark-link-text",
+                },
+                /* @__PURE__ */ React28.createElement(Text, {
+                  value: link,
+                  block,
+                })
+              )
+            )
+          ),
+          ((_B = block.format) == null ? void 0 : _B.bookmark_cover) &&
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-bookmark-image",
+              },
+              /* @__PURE__ */ React28.createElement(LazyImage, {
+                src: mapImageUrl(
+                  (_C = block.format) == null ? void 0 : _C.bookmark_cover,
+                  block
+                ),
+                alt: getTextContent2(
+                  (_D = block.properties) == null ? void 0 : _D.title
+                ),
+                style: {
+                  objectFit: "cover",
+                },
+              })
+            )
+        )
+      );
     }
     case "toggle":
-      return /* @__PURE__ */ React28.createElement("details", {
-        className: cs("notion-toggle", blockId)
-      }, /* @__PURE__ */ React28.createElement("summary", null, /* @__PURE__ */ React28.createElement(Text, {
-        value: (_E = block.properties) == null ? void 0 : _E.title,
-        block
-      })), /* @__PURE__ */ React28.createElement("div", null, children));
+      return /* @__PURE__ */ React28.createElement(
+        "details",
+        {
+          className: cs("notion-toggle", blockId),
+        },
+        /* @__PURE__ */ React28.createElement(
+          "summary",
+          null,
+          /* @__PURE__ */ React28.createElement(Text, {
+            value: (_E = block.properties) == null ? void 0 : _E.title,
+            block,
+          })
+        ),
+        /* @__PURE__ */ React28.createElement("div", null, children)
+      );
     case "table_of_contents": {
       const page = getBlockParentPage2(block, recordMap);
-      if (!page)
-        return null;
+      if (!page) return null;
       const toc = getPageTableOfContents(page, recordMap);
       const blockColor = (_F = block.format) == null ? void 0 : _F.block_color;
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs(
-          "notion-table-of-contents",
-          blockColor && `notion-${blockColor}`,
-          blockId
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs(
+            "notion-table-of-contents",
+            blockColor && `notion-${blockColor}`,
+            blockId
+          ),
+        },
+        toc.map((tocItem) =>
+          /* @__PURE__ */ React28.createElement(
+            "a",
+            {
+              key: tocItem.id,
+              href: `#${uuidToId2(tocItem.id)}`,
+              className: "notion-table-of-contents-item",
+            },
+            /* @__PURE__ */ React28.createElement(
+              "span",
+              {
+                className: "notion-table-of-contents-item-body",
+                style: {
+                  display: "inline-block",
+                  marginLeft: tocItem.indentLevel * 24,
+                },
+              },
+              tocItem.text
+            )
+          )
         )
-      }, toc.map((tocItem) => /* @__PURE__ */ React28.createElement("a", {
-        key: tocItem.id,
-        href: `#${uuidToId2(tocItem.id)}`,
-        className: "notion-table-of-contents-item"
-      }, /* @__PURE__ */ React28.createElement("span", {
-        className: "notion-table-of-contents-item-body",
-        style: {
-          display: "inline-block",
-          marginLeft: tocItem.indentLevel * 24
-        }
-      }, tocItem.text))));
+      );
     }
     case "to_do": {
-      const isChecked = ((_I = (_H = (_G = block.properties) == null ? void 0 : _G.checked) == null ? void 0 : _H[0]) == null ? void 0 : _I[0]) === "Yes";
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-to-do", blockId)
-      }, /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-to-do-item"
-      }, /* @__PURE__ */ React28.createElement(components.Checkbox, {
-        blockId,
-        isChecked
-      }), /* @__PURE__ */ React28.createElement("div", {
-        className: cs(
-          "notion-to-do-body",
-          isChecked && `notion-to-do-checked`
+      const isChecked =
+        ((_I =
+          (_H = (_G = block.properties) == null ? void 0 : _G.checked) == null
+            ? void 0
+            : _H[0]) == null
+          ? void 0
+          : _I[0]) === "Yes";
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs("notion-to-do", blockId),
+        },
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: "notion-to-do-item",
+          },
+          /* @__PURE__ */ React28.createElement(components.Checkbox, {
+            blockId,
+            isChecked,
+          }),
+          /* @__PURE__ */ React28.createElement(
+            "div",
+            {
+              className: cs(
+                "notion-to-do-body",
+                isChecked && `notion-to-do-checked`
+              ),
+            },
+            /* @__PURE__ */ React28.createElement(Text, {
+              value: (_J = block.properties) == null ? void 0 : _J.title,
+              block,
+            })
+          )
+        ),
+        /* @__PURE__ */ React28.createElement(
+          "div",
+          {
+            className: "notion-to-do-children",
+          },
+          children
         )
-      }, /* @__PURE__ */ React28.createElement(Text, {
-        value: (_J = block.properties) == null ? void 0 : _J.title,
-        block
-      }))), /* @__PURE__ */ React28.createElement("div", {
-        className: "notion-to-do-children"
-      }, children));
+      );
     }
     case "transclusion_container":
-      return /* @__PURE__ */ React28.createElement("div", {
-        className: cs("notion-sync-block", blockId)
-      }, children);
+      return /* @__PURE__ */ React28.createElement(
+        "div",
+        {
+          className: cs("notion-sync-block", blockId),
+        },
+        children
+      );
     case "transclusion_reference":
-      return /* @__PURE__ */ React28.createElement(SyncPointerBlock, __spreadValues({
-        block,
-        level: level + 1
-      }, props));
+      return /* @__PURE__ */ React28.createElement(
+        SyncPointerBlock,
+        __spreadValues(
+          {
+            block,
+            level: level + 1,
+          },
+          props
+        )
+      );
     case "alias": {
-      const blockPointerId = (_L = (_K = block == null ? void 0 : block.format) == null ? void 0 : _K.alias_pointer) == null ? void 0 : _L.id;
-      const linkedBlock = (_M = recordMap.block[blockPointerId]) == null ? void 0 : _M.value;
+      const blockPointerId =
+        (_L =
+          (_K = block == null ? void 0 : block.format) == null
+            ? void 0
+            : _K.alias_pointer) == null
+          ? void 0
+          : _L.id;
+      const linkedBlock =
+        (_M = recordMap.block[blockPointerId]) == null ? void 0 : _M.value;
       if (!linkedBlock) {
         console.log('"alias" missing block', blockPointerId);
         return null;
       }
-      return /* @__PURE__ */ React28.createElement(components.PageLink, {
-        className: cs("notion-page-link", blockPointerId),
-        href: mapPageUrl(blockPointerId)
-      }, /* @__PURE__ */ React28.createElement(PageTitle, {
-        block: linkedBlock
-      }));
+      return /* @__PURE__ */ React28.createElement(
+        components.PageLink,
+        {
+          className: cs("notion-page-link", blockPointerId),
+          href: mapPageUrl(blockPointerId),
+        },
+        /* @__PURE__ */ React28.createElement(PageTitle, {
+          block: linkedBlock,
+        })
+      );
     }
     case "table":
-      return /* @__PURE__ */ React28.createElement("table", {
-        className: cs("notion-simple-table", blockId)
-      }, /* @__PURE__ */ React28.createElement("tbody", null, children));
+      return /* @__PURE__ */ React28.createElement(
+        "table",
+        {
+          className: cs("notion-simple-table", blockId),
+        },
+        /* @__PURE__ */ React28.createElement("tbody", null, children)
+      );
     case "table_row": {
-      const tableBlock = (_N = recordMap.block[block.parent_id]) == null ? void 0 : _N.value;
-      const order = (_O = tableBlock.format) == null ? void 0 : _O.table_block_column_order;
-      const formatMap = (_P = tableBlock.format) == null ? void 0 : _P.table_block_column_format;
-      const backgroundColor = (_Q = block.format) == null ? void 0 : _Q.block_color;
+      const tableBlock =
+        (_N = recordMap.block[block.parent_id]) == null ? void 0 : _N.value;
+      const order =
+        (_O = tableBlock.format) == null ? void 0 : _O.table_block_column_order;
+      const formatMap =
+        (_P = tableBlock.format) == null
+          ? void 0
+          : _P.table_block_column_format;
+      const backgroundColor =
+        (_Q = block.format) == null ? void 0 : _Q.block_color;
       if (!tableBlock || !order) {
         return null;
       }
-      return /* @__PURE__ */ React28.createElement("tr", {
-        className: cs(
-          "notion-simple-table-row",
-          backgroundColor && `notion-${backgroundColor}`,
-          blockId
-        )
-      }, order.map((column) => {
-        var _a2, _b2, _c2;
-        const color = (_a2 = formatMap == null ? void 0 : formatMap[column]) == null ? void 0 : _a2.color;
-        return /* @__PURE__ */ React28.createElement("td", {
-          key: column,
-          className: color ? `notion-${color}` : "",
-          style: {
-            width: ((_b2 = formatMap == null ? void 0 : formatMap[column]) == null ? void 0 : _b2.width) || 120
-          }
-        }, /* @__PURE__ */ React28.createElement("div", {
-          className: "notion-simple-table-cell"
-        }, /* @__PURE__ */ React28.createElement(Text, {
-          value: ((_c2 = block.properties) == null ? void 0 : _c2[column]) || [["\u3164"]],
-          block
-        })));
-      }));
+      return /* @__PURE__ */ React28.createElement(
+        "tr",
+        {
+          className: cs(
+            "notion-simple-table-row",
+            backgroundColor && `notion-${backgroundColor}`,
+            blockId
+          ),
+        },
+        order.map((column) => {
+          var _a2, _b2, _c2;
+          const color =
+            (_a2 = formatMap == null ? void 0 : formatMap[column]) == null
+              ? void 0
+              : _a2.color;
+          return /* @__PURE__ */ React28.createElement(
+            "td",
+            {
+              key: column,
+              className: color ? `notion-${color}` : "",
+              style: {
+                width:
+                  ((_b2 = formatMap == null ? void 0 : formatMap[column]) ==
+                  null
+                    ? void 0
+                    : _b2.width) || 120,
+              },
+            },
+            /* @__PURE__ */ React28.createElement(
+              "div",
+              {
+                className: "notion-simple-table-cell",
+              },
+              /* @__PURE__ */ React28.createElement(Text, {
+                value: ((_c2 = block.properties) == null
+                  ? void 0
+                  : _c2[column]) || [["\u3164"]],
+                block,
+              })
+            )
+          );
+        })
+      );
     }
     case "external_object_instance":
       return /* @__PURE__ */ React28.createElement(EOI, {
         block,
-        className: blockId
+        className: blockId,
       });
     default:
       if (true) {
@@ -2619,88 +3873,101 @@ var Block = (props) => {
 
 // src/renderer.tsx
 var NotionRenderer = (_a) => {
-  var _b = _a, {
-    components,
-    recordMap,
-    mapPageUrl,
-    mapImageUrl,
-    searchNotion,
-    isShowingSearch,
-    onHideSearch,
-    fullPage,
-    rootPageId,
-    rootDomain,
-    darkMode,
-    previewImages,
-    forceCustomImages,
-    showCollectionViewDropdown,
-    linkTableTitleProperties,
-    isLinkCollectionToUrlProperty,
-    isImageZoomable = true,
-    showTableOfContents,
-    minTableOfContentsItems,
-    defaultPageIcon,
-    defaultPageCover,
-    defaultPageCoverPosition
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "recordMap",
-    "mapPageUrl",
-    "mapImageUrl",
-    "searchNotion",
-    "isShowingSearch",
-    "onHideSearch",
-    "fullPage",
-    "rootPageId",
-    "rootDomain",
-    "darkMode",
-    "previewImages",
-    "forceCustomImages",
-    "showCollectionViewDropdown",
-    "linkTableTitleProperties",
-    "isLinkCollectionToUrlProperty",
-    "isImageZoomable",
-    "showTableOfContents",
-    "minTableOfContentsItems",
-    "defaultPageIcon",
-    "defaultPageCover",
-    "defaultPageCoverPosition"
-  ]);
+  var _b = _a,
+    {
+      components,
+      recordMap,
+      mapPageUrl,
+      mapImageUrl,
+      searchNotion,
+      isShowingSearch,
+      onHideSearch,
+      fullPage,
+      rootPageId,
+      rootDomain,
+      darkMode,
+      previewImages,
+      forceCustomImages,
+      showCollectionViewDropdown,
+      linkTableTitleProperties,
+      isLinkCollectionToUrlProperty,
+      isImageZoomable = true,
+      showTableOfContents,
+      minTableOfContentsItems,
+      defaultPageIcon,
+      defaultPageCover,
+      defaultPageCoverPosition,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "recordMap",
+      "mapPageUrl",
+      "mapImageUrl",
+      "searchNotion",
+      "isShowingSearch",
+      "onHideSearch",
+      "fullPage",
+      "rootPageId",
+      "rootDomain",
+      "darkMode",
+      "previewImages",
+      "forceCustomImages",
+      "showCollectionViewDropdown",
+      "linkTableTitleProperties",
+      "isLinkCollectionToUrlProperty",
+      "isImageZoomable",
+      "showTableOfContents",
+      "minTableOfContentsItems",
+      "defaultPageIcon",
+      "defaultPageCover",
+      "defaultPageCoverPosition",
+    ]);
   const zoom = React29.useMemo(
-    () => typeof window !== "undefined" && mediumZoom({
-      background: "rgba(0, 0, 0, 0.8)",
-      minZoomScale: 2,
-      margin: getMediumZoomMargin()
-    }),
+    () =>
+      typeof window !== "undefined" &&
+      mediumZoom({
+        background: "rgba(0, 0, 0, 0.8)",
+        minZoomScale: 2,
+        margin: getMediumZoomMargin(),
+      }),
     []
   );
-  return /* @__PURE__ */ React29.createElement(NotionContextProvider, {
-    components,
-    recordMap,
-    mapPageUrl,
-    mapImageUrl,
-    searchNotion,
-    isShowingSearch,
-    onHideSearch,
-    fullPage,
-    rootPageId,
-    rootDomain,
-    darkMode,
-    previewImages,
-    forceCustomImages,
-    showCollectionViewDropdown,
-    linkTableTitleProperties,
-    isLinkCollectionToUrlProperty,
-    showTableOfContents,
-    minTableOfContentsItems,
-    defaultPageIcon,
-    defaultPageCover,
-    defaultPageCoverPosition,
-    zoom: isImageZoomable ? zoom : null
-  }, /* @__PURE__ */ React29.createElement(NotionBlockRenderer, __spreadValues({}, rest)));
+  return /* @__PURE__ */ React29.createElement(
+    NotionContextProvider,
+    {
+      components,
+      recordMap,
+      mapPageUrl,
+      mapImageUrl,
+      searchNotion,
+      isShowingSearch,
+      onHideSearch,
+      fullPage,
+      rootPageId,
+      rootDomain,
+      darkMode,
+      previewImages,
+      forceCustomImages,
+      showCollectionViewDropdown,
+      linkTableTitleProperties,
+      isLinkCollectionToUrlProperty,
+      showTableOfContents,
+      minTableOfContentsItems,
+      defaultPageIcon,
+      defaultPageCover,
+      defaultPageCoverPosition,
+      zoom: isImageZoomable ? zoom : null,
+    },
+    /* @__PURE__ */ React29.createElement(
+      NotionBlockRenderer,
+      __spreadValues({}, rest)
+    )
+  );
 };
 var NotionBlockRenderer = (_a) => {
-  var _b = _a, { level = 0, blockId } = _b, props = __objRest(_b, ["level", "blockId"]);
+  var _b = _a,
+    { level = 0, blockId } = _b,
+    props = __objRest(_b, ["level", "blockId"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
   const id = blockId || Object.keys(recordMap.block)[0];
@@ -2711,15 +3978,32 @@ var NotionBlockRenderer = (_a) => {
     }
     return null;
   }
-  return /* @__PURE__ */ React29.createElement(Block, __spreadValues({
-    key: id,
-    level,
-    block
-  }, props), (_b2 = block == null ? void 0 : block.content) == null ? void 0 : _b2.map((contentBlockId) => /* @__PURE__ */ React29.createElement(NotionBlockRenderer, __spreadValues({
-    key: contentBlockId,
-    blockId: contentBlockId,
-    level: level + 1
-  }, props))));
+  return /* @__PURE__ */ React29.createElement(
+    Block,
+    __spreadValues(
+      {
+        key: id,
+        level,
+        block,
+      },
+      props
+    ),
+    (_b2 = block == null ? void 0 : block.content) == null
+      ? void 0
+      : _b2.map((contentBlockId) =>
+          /* @__PURE__ */ React29.createElement(
+            NotionBlockRenderer,
+            __spreadValues(
+              {
+                key: contentBlockId,
+                blockId: contentBlockId,
+                level: level + 1,
+              },
+              props
+            )
+          )
+        )
+  );
 };
 function getMediumZoomMargin() {
   const width = window.innerWidth;
@@ -2758,5 +4042,5 @@ export {
   getYoutubeId,
   isBrowser,
   isUrl,
-  useNotionContext
+  useNotionContext,
 };
diff --git a/node_modules/react-notion-x/build/third-party/code.js b/node_modules/react-notion-x/build/third-party/code.js
index 72117eb..6f326b6 100644
--- a/node_modules/react-notion-x/build/third-party/code.js
+++ b/node_modules/react-notion-x/build/third-party/code.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -104,8 +126,7 @@ var require_clipboard_copy = __commonJS({
           selection.removeAllRanges();
           window.document.body.removeChild(span);
         }
-        if (!success)
-          throw makeError();
+        if (!success) throw makeError();
       });
     }
     function clipboardCopy(text) {
@@ -121,7 +142,7 @@ var require_clipboard_copy = __commonJS({
         }
       });
     }
-  }
+  },
 });
 
 // ../../node_modules/lodash.throttle/index.js
@@ -135,18 +156,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -154,11 +186,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -170,12 +205,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -203,7 +248,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -226,7 +272,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle2(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -235,9 +282,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -248,7 +295,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -258,7 +308,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -266,10 +317,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle2;
-  }
+  },
 });
 
 // src/third-party/code.tsx
@@ -314,17 +369,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -358,7 +421,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -366,13 +429,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -382,12 +445,23 @@ import * as React2 from "react";
 // src/icons/type-github.tsx
 import * as React from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -395,18 +469,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React2.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React2.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -421,24 +510,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React2.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React2.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React2.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React2.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React2.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React2.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React2.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React2.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React2.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/graceful-image.tsx
@@ -448,7 +571,10 @@ var GracefulImage = (props) => {
   if (isBrowser) {
     return /* @__PURE__ */ React3.createElement(Img, __spreadValues({}, props));
   } else {
-    return /* @__PURE__ */ React3.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React3.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
@@ -457,32 +583,43 @@ import * as React4 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React4.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React4.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -492,18 +629,18 @@ var LazyImage = (_a) => {
   const attachZoom = React4.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React4.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React4.createElement(components.Image, {
         src,
@@ -515,51 +652,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React4.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React4.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React4.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React4.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React4.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React4.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React4.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React4.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React4.createElement(components.Image, {
@@ -570,18 +722,24 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React4.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React4.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
@@ -592,34 +750,53 @@ import { getBlockIcon, getBlockTitle } from "notion-utils";
 // src/icons/default-page-icon.tsx
 import * as React5 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React5.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React5.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React5.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React5.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -627,41 +804,53 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React6.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React6.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React6.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React6.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React6.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React6.memo(PageIconImpl);
 
@@ -669,45 +858,73 @@ var PageIcon = React6.memo(PageIconImpl);
 import * as React7 from "react";
 import { getBlockTitle as getBlockTitle2 } from "notion-utils";
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle2(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React7.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React7.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React7.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React7.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React7.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React7.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React7.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React7.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
+  return /* @__PURE__ */ React7.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React7.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React7.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React7.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
 };
 var PageTitle = React7.memo(PageTitleImpl);
 
@@ -719,84 +936,144 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React8 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React8.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React8.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React8.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React8.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React11 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle3 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle3,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React9 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React9.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React9.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React9.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React10 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React10.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React10.createElement("defs", null, /* @__PURE__ */ React10.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React10.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React10.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React10.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React10.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React10.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React10.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React10.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React10.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React10.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React10.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React10.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React10.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React10.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React10.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React10.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React10.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React10.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React10.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React10.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/search-dialog.tsx
@@ -807,7 +1084,7 @@ var SearchDialog = class extends React11.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -818,7 +1095,11 @@ var SearchDialog = class extends React11.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -827,67 +1108,81 @@ var SearchDialog = class extends React11.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle3(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle3(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React11.createRef();
   }
   componentDidMount() {
@@ -898,87 +1193,189 @@ var SearchDialog = class extends React11.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React11.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React11.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React11.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React11.createElement(SearchIcon, null)), /* @__PURE__ */ React11.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React11.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React11.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React11.createElement(React11.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React11.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React11.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React11.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React11.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React11.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React11.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React11.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React11.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React11.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React11.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React11.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React11.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React11.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React11.createElement(
+                React11.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React11.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React11.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React11.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React11.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React11.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React11.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React11.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React11.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React11.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React11.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React11.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React11.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React11.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React11.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React11.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React11.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React11.createElement("div", null, /* @__PURE__ */ React11.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React11.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React11.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React11.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React11.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React12.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React12.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React12.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React12.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React12.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React12.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React12.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React12.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -989,38 +1386,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React12.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React12.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React12.createElement(React12.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React12.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React12.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React12.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React12.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React12.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React12.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React12.createElement(
+        React12.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React12.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React12.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React12.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React12.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React12.useState(isShowingSearch);
   React12.useEffect(() => {
@@ -1046,20 +1476,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, hasSearch && /* @__PURE__ */ React12.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React12.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React12.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React12.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React12.createElement(
+    React12.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React12.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React12.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React12.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React12.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/components/asset.tsx
@@ -1069,9 +1517,11 @@ import { getTextContent } from "notion-utils";
 // src/components/lite-youtube-embed.tsx
 import * as React13 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -1083,7 +1533,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React13.useMemo(
@@ -1095,64 +1545,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React13.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React13.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React13.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React13.useState(false);
   const warmConnections = React13.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React13.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React13.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React13.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React13.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React13.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React13.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React13.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React13.createElement(
+    React13.Fragment,
+    null,
+    /* @__PURE__ */ React13.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React13.createElement(
+        React13.Fragment,
+        null,
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React13.createElement(
+        React13.Fragment,
+        null,
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React13.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React13.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React13.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React13.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -1169,7 +1646,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -1184,7 +1661,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -1194,7 +1671,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -1255,28 +1732,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React14.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React14.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React14.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React14.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -1286,29 +1772,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React14.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React14.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React14.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -1323,7 +1834,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React14.createElement("iframe", {
@@ -1334,29 +1845,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React14.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React14.createElement(
+    React14.Fragment,
+    null,
+    /* @__PURE__ */ React14.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -1367,7 +1896,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -1376,32 +1914,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React15.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React15.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React15.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React15.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React15.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React15.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React15.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React15.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React15.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React15.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -1427,11 +1994,18 @@ import * as React17 from "react";
 // src/icons/check.tsx
 import * as React16 from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React16.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React16.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React16.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React16.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -1439,17 +2013,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React17.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React17.createElement(check_default, null));
+    content = /* @__PURE__ */ React17.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React17.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React17.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React17.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React17.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/next.tsx
@@ -1457,79 +2039,89 @@ import * as React18 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React18.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React18.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React18.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React18.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React18.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React18.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React18.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React19.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React19.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React19.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React19.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React19.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React19.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React19.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React19.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyComponent = (name) => () => {
   console.warn(
@@ -1567,7 +2159,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -1576,7 +2168,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -1596,23 +2188,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React19.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -1634,17 +2228,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React19.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React19.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React19.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -1653,181 +2259,278 @@ var useNotionContext = () => {
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React20.createElement(React20.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React20.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React20.createElement(React20.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React20.createElement(
+    React20.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React20.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React20.createElement(
+                React20.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React20.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React20.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React20.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React20.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React20.createElement(
+                      GracefulImage,
+                      {
+                        className: "notion-user",
+                        src: mapImageUrl(user.profile_photo, block),
+                        alt: name,
+                      }
+                    );
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React20.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React20.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React20.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React20.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React20.createElement(
+                  "b",
+                  null,
+                  element
+                );
+              case "i":
+                return /* @__PURE__ */ React20.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React20.createElement(
+                  "s",
+                  null,
+                  element
+                );
+              case "_":
+                return /* @__PURE__ */ React20.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React20.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId2(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React20.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React20.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React20.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React20.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React20.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React20.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React20.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React20.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React20.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React20.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React20.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React20.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React20.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId2(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React20.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React20.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React20.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React20.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React20.createElement(React20.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React20.createElement(React20.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React20.createElement(React20.Fragment, null, text));
+          return /* @__PURE__ */ React20.createElement(
+            React20.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/icons/copy.tsx
 import * as React21 from "react";
 function SvgCopy(props) {
-  return /* @__PURE__ */ React21.createElement("svg", __spreadValues({
-    fill: "currentColor",
-    viewBox: "0 0 16 16",
-    width: "1em",
-    version: "1.1"
-  }, props), /* @__PURE__ */ React21.createElement("path", {
-    fillRule: "evenodd",
-    d: "M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"
-  }), /* @__PURE__ */ React21.createElement("path", {
-    fillRule: "evenodd",
-    d: "M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"
-  }));
+  return /* @__PURE__ */ React21.createElement(
+    "svg",
+    __spreadValues(
+      {
+        fill: "currentColor",
+        viewBox: "0 0 16 16",
+        width: "1em",
+        version: "1.1",
+      },
+      props
+    ),
+    /* @__PURE__ */ React21.createElement("path", {
+      fillRule: "evenodd",
+      d: "M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z",
+    }),
+    /* @__PURE__ */ React21.createElement("path", {
+      fillRule: "evenodd",
+      d: "M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z",
+    })
+  );
 }
 var copy_default = SvgCopy;
 
@@ -1838,7 +2541,14 @@ var Code = ({ block, defaultLanguage = "typescript", className }) => {
   const copyTimeout = React22.useRef();
   const { recordMap } = useNotionContext();
   const content = getBlockTitle4(block, recordMap);
-  const language = (((_c = (_b = (_a = block.properties) == null ? void 0 : _a.language) == null ? void 0 : _b[0]) == null ? void 0 : _c[0]) || defaultLanguage).toLowerCase();
+  const language = (
+    ((_c =
+      (_b = (_a = block.properties) == null ? void 0 : _a.language) == null
+        ? void 0
+        : _b[0]) == null
+      ? void 0
+      : _c[0]) || defaultLanguage
+  ).toLowerCase();
   const caption = block.properties.caption;
   const codeRef = React22.useRef();
   React22.useEffect(() => {
@@ -1861,27 +2571,62 @@ var Code = ({ block, defaultLanguage = "typescript", className }) => {
       setIsCopied(false);
     }, 1200);
   }, [content, copyTimeout]);
-  const copyButton = /* @__PURE__ */ React22.createElement("div", {
-    className: "notion-code-copy-button",
-    onClick: onClickCopyToClipboard
-  }, /* @__PURE__ */ React22.createElement(copy_default, null));
-  return /* @__PURE__ */ React22.createElement(React22.Fragment, null, /* @__PURE__ */ React22.createElement("pre", {
-    className: cs("notion-code", className)
-  }, /* @__PURE__ */ React22.createElement("div", {
-    className: "notion-code-copy"
-  }, copyButton, isCopied && /* @__PURE__ */ React22.createElement("div", {
-    className: "notion-code-copy-tooltip"
-  }, /* @__PURE__ */ React22.createElement("div", null, isCopied ? "Copied" : "Copy"))), /* @__PURE__ */ React22.createElement("code", {
-    className: `language-${language}`,
-    ref: codeRef
-  }, content)), caption && /* @__PURE__ */ React22.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React22.createElement(Text, {
-    value: caption,
-    block
-  })));
-};
-export {
-  Code
+  const copyButton = /* @__PURE__ */ React22.createElement(
+    "div",
+    {
+      className: "notion-code-copy-button",
+      onClick: onClickCopyToClipboard,
+    },
+    /* @__PURE__ */ React22.createElement(copy_default, null)
+  );
+  return /* @__PURE__ */ React22.createElement(
+    React22.Fragment,
+    null,
+    /* @__PURE__ */ React22.createElement(
+      "pre",
+      {
+        className: cs("notion-code", className),
+      },
+      /* @__PURE__ */ React22.createElement(
+        "div",
+        {
+          className: "notion-code-copy",
+        },
+        copyButton,
+        isCopied &&
+          /* @__PURE__ */ React22.createElement(
+            "div",
+            {
+              className: "notion-code-copy-tooltip",
+            },
+            /* @__PURE__ */ React22.createElement(
+              "div",
+              null,
+              isCopied ? "Copied" : "Copy"
+            )
+          )
+      ),
+      /* @__PURE__ */ React22.createElement(
+        "code",
+        {
+          className: `language-${language}`,
+          ref: codeRef,
+        },
+        content
+      )
+    ),
+    caption &&
+      /* @__PURE__ */ React22.createElement(
+        "figcaption",
+        {
+          className: "notion-asset-caption",
+        },
+        /* @__PURE__ */ React22.createElement(Text, {
+          value: caption,
+          block,
+        })
+      )
+  );
 };
+export { Code };
 /*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
diff --git a/node_modules/react-notion-x/build/third-party/collection.js b/node_modules/react-notion-x/build/third-party/collection.js
index 216ef37..961f15c 100644
--- a/node_modules/react-notion-x/build/third-party/collection.js
+++ b/node_modules/react-notion-x/build/third-party/collection.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -80,18 +102,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -99,11 +132,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -115,12 +151,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -148,7 +194,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -171,7 +218,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle2(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -180,9 +228,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -193,7 +241,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -203,7 +254,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -211,10 +263,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle2;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/requiredArgs/index.js
@@ -222,16 +278,23 @@ var require_requiredArgs = __commonJS({
   "../../node_modules/date-fns/_lib/requiredArgs/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = requiredArgs;
     function requiredArgs(required, args) {
       if (args.length < required) {
-        throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
+        throw new TypeError(
+          required +
+            " argument" +
+            (required > 1 ? "s" : "") +
+            " required, but only " +
+            args.length +
+            " present"
+        );
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/isDate/index.js
@@ -239,7 +302,7 @@ var require_isDate = __commonJS({
   "../../node_modules/date-fns/isDate/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = isDate;
     var _index = _interopRequireDefault(require_requiredArgs());
@@ -248,10 +311,14 @@ var require_isDate = __commonJS({
     }
     function isDate(value) {
       (0, _index.default)(1, arguments);
-      return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
+      return (
+        value instanceof Date ||
+        (typeof value === "object" &&
+          Object.prototype.toString.call(value) === "[object Date]")
+      );
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/toDate/index.js
@@ -259,7 +326,7 @@ var require_toDate = __commonJS({
   "../../node_modules/date-fns/toDate/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = toDate;
     var _index = _interopRequireDefault(require_requiredArgs());
@@ -269,20 +336,28 @@ var require_toDate = __commonJS({
     function toDate(argument) {
       (0, _index.default)(1, arguments);
       var argStr = Object.prototype.toString.call(argument);
-      if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
+      if (
+        argument instanceof Date ||
+        (typeof argument === "object" && argStr === "[object Date]")
+      ) {
         return new Date(argument.getTime());
       } else if (typeof argument === "number" || argStr === "[object Number]") {
         return new Date(argument);
       } else {
-        if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
-          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
+        if (
+          (typeof argument === "string" || argStr === "[object String]") &&
+          typeof console !== "undefined"
+        ) {
+          console.warn(
+            "Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"
+          );
           console.warn(new Error().stack);
         }
         return new Date(NaN);
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/isValid/index.js
@@ -290,7 +365,7 @@ var require_isValid = __commonJS({
   "../../node_modules/date-fns/isValid/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = isValid;
     var _index = _interopRequireDefault(require_isDate());
@@ -308,81 +383,84 @@ var require_isValid = __commonJS({
       return !isNaN(Number(date));
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js
 var require_formatDistance = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var formatDistanceLocale = {
       lessThanXSeconds: {
         one: "less than a second",
-        other: "less than {{count}} seconds"
+        other: "less than {{count}} seconds",
       },
       xSeconds: {
         one: "1 second",
-        other: "{{count}} seconds"
+        other: "{{count}} seconds",
       },
       halfAMinute: "half a minute",
       lessThanXMinutes: {
         one: "less than a minute",
-        other: "less than {{count}} minutes"
+        other: "less than {{count}} minutes",
       },
       xMinutes: {
         one: "1 minute",
-        other: "{{count}} minutes"
+        other: "{{count}} minutes",
       },
       aboutXHours: {
         one: "about 1 hour",
-        other: "about {{count}} hours"
+        other: "about {{count}} hours",
       },
       xHours: {
         one: "1 hour",
-        other: "{{count}} hours"
+        other: "{{count}} hours",
       },
       xDays: {
         one: "1 day",
-        other: "{{count}} days"
+        other: "{{count}} days",
       },
       aboutXWeeks: {
         one: "about 1 week",
-        other: "about {{count}} weeks"
+        other: "about {{count}} weeks",
       },
       xWeeks: {
         one: "1 week",
-        other: "{{count}} weeks"
+        other: "{{count}} weeks",
       },
       aboutXMonths: {
         one: "about 1 month",
-        other: "about {{count}} months"
+        other: "about {{count}} months",
       },
       xMonths: {
         one: "1 month",
-        other: "{{count}} months"
+        other: "{{count}} months",
       },
       aboutXYears: {
         one: "about 1 year",
-        other: "about {{count}} years"
+        other: "about {{count}} years",
       },
       xYears: {
         one: "1 year",
-        other: "{{count}} years"
+        other: "{{count}} years",
       },
       overXYears: {
         one: "over 1 year",
-        other: "over {{count}} years"
+        other: "over {{count}} years",
       },
       almostXYears: {
         one: "almost 1 year",
-        other: "almost {{count}} years"
-      }
+        other: "almost {{count}} years",
+      },
     };
-    var formatDistance = function(token, count, options) {
+    var formatDistance = function (token, count, options) {
       var result;
       var tokenValue = formatDistanceLocale[token];
       if (typeof tokenValue === "string") {
@@ -404,35 +482,42 @@ var require_formatDistance = __commonJS({
     var _default = formatDistance;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js
 var require_buildFormatLongFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildFormatLongFn;
     function buildFormatLongFn(args) {
-      return function() {
-        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
+      return function () {
+        var options =
+          arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
         var width = options.width ? String(options.width) : args.defaultWidth;
         var format4 = args.formats[width] || args.formats[args.defaultWidth];
         return format4;
       };
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js
 var require_formatLong = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_buildFormatLongFn());
@@ -443,46 +528,49 @@ var require_formatLong = __commonJS({
       full: "EEEE, MMMM do, y",
       long: "MMMM do, y",
       medium: "MMM d, y",
-      short: "MM/dd/yyyy"
+      short: "MM/dd/yyyy",
     };
     var timeFormats = {
       full: "h:mm:ss a zzzz",
       long: "h:mm:ss a z",
       medium: "h:mm:ss a",
-      short: "h:mm a"
+      short: "h:mm a",
     };
     var dateTimeFormats = {
       full: "{{date}} 'at' {{time}}",
       long: "{{date}} 'at' {{time}}",
       medium: "{{date}}, {{time}}",
-      short: "{{date}}, {{time}}"
+      short: "{{date}}, {{time}}",
     };
     var formatLong = {
       date: (0, _index.default)({
         formats: dateFormats,
-        defaultWidth: "full"
+        defaultWidth: "full",
       }),
       time: (0, _index.default)({
         formats: timeFormats,
-        defaultWidth: "full"
+        defaultWidth: "full",
       }),
       dateTime: (0, _index.default)({
         formats: dateTimeFormats,
-        defaultWidth: "full"
-      })
+        defaultWidth: "full",
+      }),
     };
     var _default = formatLong;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js
 var require_formatRelative = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var formatRelativeLocale = {
@@ -491,53 +579,64 @@ var require_formatRelative = __commonJS({
       today: "'today at' p",
       tomorrow: "'tomorrow at' p",
       nextWeek: "eeee 'at' p",
-      other: "P"
+      other: "P",
     };
-    var formatRelative = function(token, _date, _baseDate, _options) {
+    var formatRelative = function (token, _date, _baseDate, _options) {
       return formatRelativeLocale[token];
     };
     var _default = formatRelative;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js
 var require_buildLocalizeFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildLocalizeFn;
     function buildLocalizeFn(args) {
-      return function(dirtyIndex, dirtyOptions) {
+      return function (dirtyIndex, dirtyOptions) {
         var options = dirtyOptions || {};
         var context = options.context ? String(options.context) : "standalone";
         var valuesArray;
         if (context === "formatting" && args.formattingValues) {
           var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
           var width = options.width ? String(options.width) : defaultWidth;
-          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
+          valuesArray =
+            args.formattingValues[width] || args.formattingValues[defaultWidth];
         } else {
           var _defaultWidth = args.defaultWidth;
-          var _width = options.width ? String(options.width) : args.defaultWidth;
+          var _width = options.width
+            ? String(options.width)
+            : args.defaultWidth;
           valuesArray = args.values[_width] || args.values[_defaultWidth];
         }
-        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
+        var index = args.argumentCallback
+          ? args.argumentCallback(dirtyIndex)
+          : dirtyIndex;
         return valuesArray[index];
       };
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/localize/index.js
 var require_localize = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/localize/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/localize/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_buildLocalizeFn());
@@ -547,23 +646,57 @@ var require_localize = __commonJS({
     var eraValues = {
       narrow: ["B", "A"],
       abbreviated: ["BC", "AD"],
-      wide: ["Before Christ", "Anno Domini"]
+      wide: ["Before Christ", "Anno Domini"],
     };
     var quarterValues = {
       narrow: ["1", "2", "3", "4"],
       abbreviated: ["Q1", "Q2", "Q3", "Q4"],
-      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
+      wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
     };
     var monthValues = {
       narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
-      abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
-      wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
+      abbreviated: [
+        "Jan",
+        "Feb",
+        "Mar",
+        "Apr",
+        "May",
+        "Jun",
+        "Jul",
+        "Aug",
+        "Sep",
+        "Oct",
+        "Nov",
+        "Dec",
+      ],
+      wide: [
+        "January",
+        "February",
+        "March",
+        "April",
+        "May",
+        "June",
+        "July",
+        "August",
+        "September",
+        "October",
+        "November",
+        "December",
+      ],
     };
     var dayValues = {
       narrow: ["S", "M", "T", "W", "T", "F", "S"],
       short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
       abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
-      wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
+      wide: [
+        "Sunday",
+        "Monday",
+        "Tuesday",
+        "Wednesday",
+        "Thursday",
+        "Friday",
+        "Saturday",
+      ],
     };
     var dayPeriodValues = {
       narrow: {
@@ -574,7 +707,7 @@ var require_localize = __commonJS({
         morning: "morning",
         afternoon: "afternoon",
         evening: "evening",
-        night: "night"
+        night: "night",
       },
       abbreviated: {
         am: "AM",
@@ -584,7 +717,7 @@ var require_localize = __commonJS({
         morning: "morning",
         afternoon: "afternoon",
         evening: "evening",
-        night: "night"
+        night: "night",
       },
       wide: {
         am: "a.m.",
@@ -594,8 +727,8 @@ var require_localize = __commonJS({
         morning: "morning",
         afternoon: "afternoon",
         evening: "evening",
-        night: "night"
-      }
+        night: "night",
+      },
     };
     var formattingDayPeriodValues = {
       narrow: {
@@ -606,7 +739,7 @@ var require_localize = __commonJS({
         morning: "in the morning",
         afternoon: "in the afternoon",
         evening: "in the evening",
-        night: "at night"
+        night: "at night",
       },
       abbreviated: {
         am: "AM",
@@ -616,7 +749,7 @@ var require_localize = __commonJS({
         morning: "in the morning",
         afternoon: "in the afternoon",
         evening: "in the evening",
-        night: "at night"
+        night: "at night",
       },
       wide: {
         am: "a.m.",
@@ -626,10 +759,10 @@ var require_localize = __commonJS({
         morning: "in the morning",
         afternoon: "in the afternoon",
         evening: "in the evening",
-        night: "at night"
-      }
+        night: "at night",
+      },
     };
-    var ordinalNumber = function(dirtyNumber, _options) {
+    var ordinalNumber = function (dirtyNumber, _options) {
       var number = Number(dirtyNumber);
       var rem100 = number % 100;
       if (rem100 > 20 || rem100 < 10) {
@@ -648,67 +781,77 @@ var require_localize = __commonJS({
       ordinalNumber,
       era: (0, _index.default)({
         values: eraValues,
-        defaultWidth: "wide"
+        defaultWidth: "wide",
       }),
       quarter: (0, _index.default)({
         values: quarterValues,
         defaultWidth: "wide",
-        argumentCallback: function(quarter) {
+        argumentCallback: function (quarter) {
           return quarter - 1;
-        }
+        },
       }),
       month: (0, _index.default)({
         values: monthValues,
-        defaultWidth: "wide"
+        defaultWidth: "wide",
       }),
       day: (0, _index.default)({
         values: dayValues,
-        defaultWidth: "wide"
+        defaultWidth: "wide",
       }),
       dayPeriod: (0, _index.default)({
         values: dayPeriodValues,
         defaultWidth: "wide",
         formattingValues: formattingDayPeriodValues,
-        defaultFormattingWidth: "wide"
-      })
+        defaultFormattingWidth: "wide",
+      }),
     };
     var _default = localize;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js
 var require_buildMatchFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildMatchFn;
     function buildMatchFn(args) {
-      return function(string) {
-        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
+      return function (string) {
+        var options =
+          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
         var width = options.width;
-        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
+        var matchPattern =
+          (width && args.matchPatterns[width]) ||
+          args.matchPatterns[args.defaultMatchWidth];
         var matchResult = string.match(matchPattern);
         if (!matchResult) {
           return null;
         }
         var matchedString = matchResult[0];
-        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
-        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
-          return pattern.test(matchedString);
-        }) : findKey(parsePatterns, function(pattern) {
-          return pattern.test(matchedString);
-        });
+        var parsePatterns =
+          (width && args.parsePatterns[width]) ||
+          args.parsePatterns[args.defaultParseWidth];
+        var key = Array.isArray(parsePatterns)
+          ? findIndex(parsePatterns, function (pattern) {
+              return pattern.test(matchedString);
+            })
+          : findKey(parsePatterns, function (pattern) {
+              return pattern.test(matchedString);
+            });
         var value;
         value = args.valueCallback ? args.valueCallback(key) : key;
         value = options.valueCallback ? options.valueCallback(value) : value;
         var rest = string.slice(matchedString.length);
         return {
           value,
-          rest
+          rest,
         };
       };
     }
@@ -729,46 +872,53 @@ var require_buildMatchFn = __commonJS({
       return void 0;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js
 var require_buildMatchPatternFn = __commonJS({
-  "../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = buildMatchPatternFn;
     function buildMatchPatternFn(args) {
-      return function(string) {
-        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
+      return function (string) {
+        var options =
+          arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
         var matchResult = string.match(args.matchPattern);
-        if (!matchResult)
-          return null;
+        if (!matchResult) return null;
         var matchedString = matchResult[0];
         var parseResult = string.match(args.parsePattern);
-        if (!parseResult)
-          return null;
-        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
+        if (!parseResult) return null;
+        var value = args.valueCallback
+          ? args.valueCallback(parseResult[0])
+          : parseResult[0];
         value = options.valueCallback ? options.valueCallback(value) : value;
         var rest = string.slice(matchedString.length);
         return {
           value,
-          rest
+          rest,
         };
       };
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/_lib/match/index.js
 var require_match = __commonJS({
-  "../../node_modules/date-fns/locale/en-US/_lib/match/index.js"(exports, module) {
+  "../../node_modules/date-fns/locale/en-US/_lib/match/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_buildMatchFn());
@@ -781,41 +931,67 @@ var require_match = __commonJS({
     var matchEraPatterns = {
       narrow: /^(b|a)/i,
       abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
-      wide: /^(before christ|before common era|anno domini|common era)/i
+      wide: /^(before christ|before common era|anno domini|common era)/i,
     };
     var parseEraPatterns = {
-      any: [/^b/i, /^(a|c)/i]
+      any: [/^b/i, /^(a|c)/i],
     };
     var matchQuarterPatterns = {
       narrow: /^[1234]/i,
       abbreviated: /^q[1234]/i,
-      wide: /^[1234](th|st|nd|rd)? quarter/i
+      wide: /^[1234](th|st|nd|rd)? quarter/i,
     };
     var parseQuarterPatterns = {
-      any: [/1/i, /2/i, /3/i, /4/i]
+      any: [/1/i, /2/i, /3/i, /4/i],
     };
     var matchMonthPatterns = {
       narrow: /^[jfmasond]/i,
       abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
-      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
+      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
     };
     var parseMonthPatterns = {
-      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
-      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
+      narrow: [
+        /^j/i,
+        /^f/i,
+        /^m/i,
+        /^a/i,
+        /^m/i,
+        /^j/i,
+        /^j/i,
+        /^a/i,
+        /^s/i,
+        /^o/i,
+        /^n/i,
+        /^d/i,
+      ],
+      any: [
+        /^ja/i,
+        /^f/i,
+        /^mar/i,
+        /^ap/i,
+        /^may/i,
+        /^jun/i,
+        /^jul/i,
+        /^au/i,
+        /^s/i,
+        /^o/i,
+        /^n/i,
+        /^d/i,
+      ],
     };
     var matchDayPatterns = {
       narrow: /^[smtwf]/i,
       short: /^(su|mo|tu|we|th|fr|sa)/i,
       abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
-      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
+      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
     };
     var parseDayPatterns = {
       narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
-      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
+      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
     };
     var matchDayPeriodPatterns = {
       narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
-      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
+      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
     };
     var parseDayPeriodPatterns = {
       any: {
@@ -826,55 +1002,55 @@ var require_match = __commonJS({
         morning: /morning/i,
         afternoon: /afternoon/i,
         evening: /evening/i,
-        night: /night/i
-      }
+        night: /night/i,
+      },
     };
     var match = {
       ordinalNumber: (0, _index2.default)({
         matchPattern: matchOrdinalNumberPattern,
         parsePattern: parseOrdinalNumberPattern,
-        valueCallback: function(value) {
+        valueCallback: function (value) {
           return parseInt(value, 10);
-        }
+        },
       }),
       era: (0, _index.default)({
         matchPatterns: matchEraPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseEraPatterns,
-        defaultParseWidth: "any"
+        defaultParseWidth: "any",
       }),
       quarter: (0, _index.default)({
         matchPatterns: matchQuarterPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseQuarterPatterns,
         defaultParseWidth: "any",
-        valueCallback: function(index) {
+        valueCallback: function (index) {
           return index + 1;
-        }
+        },
       }),
       month: (0, _index.default)({
         matchPatterns: matchMonthPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseMonthPatterns,
-        defaultParseWidth: "any"
+        defaultParseWidth: "any",
       }),
       day: (0, _index.default)({
         matchPatterns: matchDayPatterns,
         defaultMatchWidth: "wide",
         parsePatterns: parseDayPatterns,
-        defaultParseWidth: "any"
+        defaultParseWidth: "any",
       }),
       dayPeriod: (0, _index.default)({
         matchPatterns: matchDayPeriodPatterns,
         defaultMatchWidth: "any",
         parsePatterns: parseDayPeriodPatterns,
-        defaultParseWidth: "any"
-      })
+        defaultParseWidth: "any",
+      }),
     };
     var _default = match;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/locale/en-US/index.js
@@ -882,7 +1058,7 @@ var require_en_US = __commonJS({
   "../../node_modules/date-fns/locale/en-US/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_formatDistance());
@@ -902,13 +1078,13 @@ var require_en_US = __commonJS({
       match: _index5.default,
       options: {
         weekStartsOn: 0,
-        firstWeekContainsDate: 1
-      }
+        firstWeekContainsDate: 1,
+      },
     };
     var _default = locale;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/toInteger/index.js
@@ -916,11 +1092,15 @@ var require_toInteger = __commonJS({
   "../../node_modules/date-fns/_lib/toInteger/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = toInteger;
     function toInteger(dirtyNumber) {
-      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
+      if (
+        dirtyNumber === null ||
+        dirtyNumber === true ||
+        dirtyNumber === false
+      ) {
         return NaN;
       }
       var number = Number(dirtyNumber);
@@ -930,7 +1110,7 @@ var require_toInteger = __commonJS({
       return number < 0 ? Math.ceil(number) : Math.floor(number);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/addMilliseconds/index.js
@@ -938,7 +1118,7 @@ var require_addMilliseconds = __commonJS({
   "../../node_modules/date-fns/addMilliseconds/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addMilliseconds;
     var _index = _interopRequireDefault(require_toInteger());
@@ -954,7 +1134,7 @@ var require_addMilliseconds = __commonJS({
       return new Date(timestamp + amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/subMilliseconds/index.js
@@ -962,7 +1142,7 @@ var require_subMilliseconds = __commonJS({
   "../../node_modules/date-fns/subMilliseconds/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = subMilliseconds;
     var _index = _interopRequireDefault(require_toInteger());
@@ -977,7 +1157,7 @@ var require_subMilliseconds = __commonJS({
       return (0, _index2.default)(dirtyDate, -amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js
@@ -985,7 +1165,7 @@ var require_getUTCDayOfYear = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCDayOfYear;
     var _index = _interopRequireDefault(require_toDate());
@@ -1005,15 +1185,18 @@ var require_getUTCDayOfYear = __commonJS({
       return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js
 var require_startOfUTCISOWeek = __commonJS({
-  "../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCISOWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1032,15 +1215,18 @@ var require_startOfUTCISOWeek = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js
 var require_getUTCISOWeekYear = __commonJS({
-  "../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCISOWeekYear;
     var _index = _interopRequireDefault(require_toDate());
@@ -1070,15 +1256,18 @@ var require_getUTCISOWeekYear = __commonJS({
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js
 var require_startOfUTCISOWeekYear = __commonJS({
-  "../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCISOWeekYear;
     var _index = _interopRequireDefault(require_getUTCISOWeekYear());
@@ -1097,7 +1286,7 @@ var require_startOfUTCISOWeekYear = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCISOWeek/index.js
@@ -1105,7 +1294,7 @@ var require_getUTCISOWeek = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCISOWeek/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCISOWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1119,11 +1308,13 @@ var require_getUTCISOWeek = __commonJS({
     function getUTCISOWeek(dirtyDate) {
       (0, _index4.default)(1, arguments);
       var date = (0, _index.default)(dirtyDate);
-      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();
+      var diff =
+        (0, _index2.default)(date).getTime() -
+        (0, _index3.default)(date).getTime();
       return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCWeek/index.js
@@ -1131,7 +1322,7 @@ var require_startOfUTCWeek = __commonJS({
   "../../node_modules/date-fns/_lib/startOfUTCWeek/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1144,11 +1335,20 @@ var require_startOfUTCWeek = __commonJS({
       (0, _index2.default)(1, arguments);
       var options = dirtyOptions || {};
       var locale = options.locale;
-      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
-      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);
-      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options.weekStartsOn);
+      var localeWeekStartsOn =
+        locale && locale.options && locale.options.weekStartsOn;
+      var defaultWeekStartsOn =
+        localeWeekStartsOn == null
+          ? 0
+          : (0, _index3.default)(localeWeekStartsOn);
+      var weekStartsOn =
+        options.weekStartsOn == null
+          ? defaultWeekStartsOn
+          : (0, _index3.default)(options.weekStartsOn);
       if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
-        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
+        throw new RangeError(
+          "weekStartsOn must be between 0 and 6 inclusively"
+        );
       }
       var date = (0, _index.default)(dirtyDate);
       var day = date.getUTCDay();
@@ -1158,7 +1358,7 @@ var require_startOfUTCWeek = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCWeekYear/index.js
@@ -1166,7 +1366,7 @@ var require_getUTCWeekYear = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCWeekYear/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCWeekYear;
     var _index = _interopRequireDefault(require_toDate());
@@ -1182,20 +1382,35 @@ var require_getUTCWeekYear = __commonJS({
       var year = date.getUTCFullYear();
       var options = dirtyOptions || {};
       var locale = options.locale;
-      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
-      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
-      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);
+      var localeFirstWeekContainsDate =
+        locale && locale.options && locale.options.firstWeekContainsDate;
+      var defaultFirstWeekContainsDate =
+        localeFirstWeekContainsDate == null
+          ? 1
+          : (0, _index4.default)(localeFirstWeekContainsDate);
+      var firstWeekContainsDate =
+        options.firstWeekContainsDate == null
+          ? defaultFirstWeekContainsDate
+          : (0, _index4.default)(options.firstWeekContainsDate);
       if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
-        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
+        throw new RangeError(
+          "firstWeekContainsDate must be between 1 and 7 inclusively"
+        );
       }
       var firstWeekOfNextYear = new Date(0);
       firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
       firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
-      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, dirtyOptions);
+      var startOfNextYear = (0, _index3.default)(
+        firstWeekOfNextYear,
+        dirtyOptions
+      );
       var firstWeekOfThisYear = new Date(0);
       firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
       firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
-      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, dirtyOptions);
+      var startOfThisYear = (0, _index3.default)(
+        firstWeekOfThisYear,
+        dirtyOptions
+      );
       if (date.getTime() >= startOfNextYear.getTime()) {
         return year + 1;
       } else if (date.getTime() >= startOfThisYear.getTime()) {
@@ -1205,15 +1420,18 @@ var require_getUTCWeekYear = __commonJS({
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js
 var require_startOfUTCWeekYear = __commonJS({
-  "../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfUTCWeekYear;
     var _index = _interopRequireDefault(require_getUTCWeekYear());
@@ -1227,9 +1445,16 @@ var require_startOfUTCWeekYear = __commonJS({
       (0, _index2.default)(1, arguments);
       var options = dirtyOptions || {};
       var locale = options.locale;
-      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
-      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);
-      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);
+      var localeFirstWeekContainsDate =
+        locale && locale.options && locale.options.firstWeekContainsDate;
+      var defaultFirstWeekContainsDate =
+        localeFirstWeekContainsDate == null
+          ? 1
+          : (0, _index4.default)(localeFirstWeekContainsDate);
+      var firstWeekContainsDate =
+        options.firstWeekContainsDate == null
+          ? defaultFirstWeekContainsDate
+          : (0, _index4.default)(options.firstWeekContainsDate);
       var year = (0, _index.default)(dirtyDate, dirtyOptions);
       var firstWeek = new Date(0);
       firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
@@ -1238,7 +1463,7 @@ var require_startOfUTCWeekYear = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getUTCWeek/index.js
@@ -1246,7 +1471,7 @@ var require_getUTCWeek = __commonJS({
   "../../node_modules/date-fns/_lib/getUTCWeek/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getUTCWeek;
     var _index = _interopRequireDefault(require_toDate());
@@ -1260,11 +1485,13 @@ var require_getUTCWeek = __commonJS({
     function getUTCWeek(dirtyDate, options) {
       (0, _index4.default)(1, arguments);
       var date = (0, _index.default)(dirtyDate);
-      var diff = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime();
+      var diff =
+        (0, _index2.default)(date, options).getTime() -
+        (0, _index3.default)(date, options).getTime();
       return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/addLeadingZeros/index.js
@@ -1272,7 +1499,7 @@ var require_addLeadingZeros = __commonJS({
   "../../node_modules/date-fns/_lib/addLeadingZeros/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addLeadingZeros;
     function addLeadingZeros(number, targetLength) {
@@ -1284,15 +1511,18 @@ var require_addLeadingZeros = __commonJS({
       return sign + output;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/format/lightFormatters/index.js
 var require_lightFormatters = __commonJS({
-  "../../node_modules/date-fns/_lib/format/lightFormatters/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/format/lightFormatters/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_addLeadingZeros());
@@ -1300,19 +1530,24 @@ var require_lightFormatters = __commonJS({
       return obj && obj.__esModule ? obj : { default: obj };
     }
     var formatters = {
-      y: function(date, token) {
+      y: function (date, token) {
         var signedYear = date.getUTCFullYear();
         var year = signedYear > 0 ? signedYear : 1 - signedYear;
-        return (0, _index.default)(token === "yy" ? year % 100 : year, token.length);
+        return (0, _index.default)(
+          token === "yy" ? year % 100 : year,
+          token.length
+        );
       },
-      M: function(date, token) {
+      M: function (date, token) {
         var month = date.getUTCMonth();
-        return token === "M" ? String(month + 1) : (0, _index.default)(month + 1, 2);
+        return token === "M"
+          ? String(month + 1)
+          : (0, _index.default)(month + 1, 2);
       },
-      d: function(date, token) {
+      d: function (date, token) {
         return (0, _index.default)(date.getUTCDate(), token.length);
       },
-      a: function(date, token) {
+      a: function (date, token) {
         var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
         switch (token) {
           case "a":
@@ -1327,37 +1562,42 @@ var require_lightFormatters = __commonJS({
             return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
         }
       },
-      h: function(date, token) {
+      h: function (date, token) {
         return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);
       },
-      H: function(date, token) {
+      H: function (date, token) {
         return (0, _index.default)(date.getUTCHours(), token.length);
       },
-      m: function(date, token) {
+      m: function (date, token) {
         return (0, _index.default)(date.getUTCMinutes(), token.length);
       },
-      s: function(date, token) {
+      s: function (date, token) {
         return (0, _index.default)(date.getUTCSeconds(), token.length);
       },
-      S: function(date, token) {
+      S: function (date, token) {
         var numberOfDigits = token.length;
         var milliseconds = date.getUTCMilliseconds();
-        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
+        var fractionalSeconds = Math.floor(
+          milliseconds * Math.pow(10, numberOfDigits - 3)
+        );
         return (0, _index.default)(fractionalSeconds, token.length);
-      }
+      },
     };
     var _default = formatters;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/format/formatters/index.js
 var require_formatters = __commonJS({
-  "../../node_modules/date-fns/_lib/format/formatters/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/format/formatters/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     var _index = _interopRequireDefault(require_getUTCDayOfYear());
@@ -1378,40 +1618,40 @@ var require_formatters = __commonJS({
       morning: "morning",
       afternoon: "afternoon",
       evening: "evening",
-      night: "night"
+      night: "night",
     };
     var formatters = {
-      G: function(date, token, localize) {
+      G: function (date, token, localize) {
         var era = date.getUTCFullYear() > 0 ? 1 : 0;
         switch (token) {
           case "G":
           case "GG":
           case "GGG":
             return localize.era(era, {
-              width: "abbreviated"
+              width: "abbreviated",
             });
           case "GGGGG":
             return localize.era(era, {
-              width: "narrow"
+              width: "narrow",
             });
           case "GGGG":
           default:
             return localize.era(era, {
-              width: "wide"
+              width: "wide",
             });
         }
       },
-      y: function(date, token, localize) {
+      y: function (date, token, localize) {
         if (token === "yo") {
           var signedYear = date.getUTCFullYear();
           var year = signedYear > 0 ? signedYear : 1 - signedYear;
           return localize.ordinalNumber(year, {
-            unit: "year"
+            unit: "year",
           });
         }
         return _index7.default.y(date, token);
       },
-      Y: function(date, token, localize, options) {
+      Y: function (date, token, localize, options) {
         var signedWeekYear = (0, _index5.default)(date, options);
         var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
         if (token === "YY") {
@@ -1420,20 +1660,20 @@ var require_formatters = __commonJS({
         }
         if (token === "Yo") {
           return localize.ordinalNumber(weekYear, {
-            unit: "year"
+            unit: "year",
           });
         }
         return (0, _index6.default)(weekYear, token.length);
       },
-      R: function(date, token) {
+      R: function (date, token) {
         var isoWeekYear = (0, _index3.default)(date);
         return (0, _index6.default)(isoWeekYear, token.length);
       },
-      u: function(date, token) {
+      u: function (date, token) {
         var year = date.getUTCFullYear();
         return (0, _index6.default)(year, token.length);
       },
-      Q: function(date, token, localize) {
+      Q: function (date, token, localize) {
         var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
         switch (token) {
           case "Q":
@@ -1442,27 +1682,27 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(quarter, 2);
           case "Qo":
             return localize.ordinalNumber(quarter, {
-              unit: "quarter"
+              unit: "quarter",
             });
           case "QQQ":
             return localize.quarter(quarter, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "QQQQQ":
             return localize.quarter(quarter, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "QQQQ":
           default:
             return localize.quarter(quarter, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      q: function(date, token, localize) {
+      q: function (date, token, localize) {
         var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
         switch (token) {
           case "q":
@@ -1471,27 +1711,27 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(quarter, 2);
           case "qo":
             return localize.ordinalNumber(quarter, {
-              unit: "quarter"
+              unit: "quarter",
             });
           case "qqq":
             return localize.quarter(quarter, {
               width: "abbreviated",
-              context: "standalone"
+              context: "standalone",
             });
           case "qqqqq":
             return localize.quarter(quarter, {
               width: "narrow",
-              context: "standalone"
+              context: "standalone",
             });
           case "qqqq":
           default:
             return localize.quarter(quarter, {
               width: "wide",
-              context: "standalone"
+              context: "standalone",
             });
         }
       },
-      M: function(date, token, localize) {
+      M: function (date, token, localize) {
         var month = date.getUTCMonth();
         switch (token) {
           case "M":
@@ -1499,27 +1739,27 @@ var require_formatters = __commonJS({
             return _index7.default.M(date, token);
           case "Mo":
             return localize.ordinalNumber(month + 1, {
-              unit: "month"
+              unit: "month",
             });
           case "MMM":
             return localize.month(month, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "MMMMM":
             return localize.month(month, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "MMMM":
           default:
             return localize.month(month, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      L: function(date, token, localize) {
+      L: function (date, token, localize) {
         var month = date.getUTCMonth();
         switch (token) {
           case "L":
@@ -1528,62 +1768,62 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(month + 1, 2);
           case "Lo":
             return localize.ordinalNumber(month + 1, {
-              unit: "month"
+              unit: "month",
             });
           case "LLL":
             return localize.month(month, {
               width: "abbreviated",
-              context: "standalone"
+              context: "standalone",
             });
           case "LLLLL":
             return localize.month(month, {
               width: "narrow",
-              context: "standalone"
+              context: "standalone",
             });
           case "LLLL":
           default:
             return localize.month(month, {
               width: "wide",
-              context: "standalone"
+              context: "standalone",
             });
         }
       },
-      w: function(date, token, localize, options) {
+      w: function (date, token, localize, options) {
         var week = (0, _index4.default)(date, options);
         if (token === "wo") {
           return localize.ordinalNumber(week, {
-            unit: "week"
+            unit: "week",
           });
         }
         return (0, _index6.default)(week, token.length);
       },
-      I: function(date, token, localize) {
+      I: function (date, token, localize) {
         var isoWeek = (0, _index2.default)(date);
         if (token === "Io") {
           return localize.ordinalNumber(isoWeek, {
-            unit: "week"
+            unit: "week",
           });
         }
         return (0, _index6.default)(isoWeek, token.length);
       },
-      d: function(date, token, localize) {
+      d: function (date, token, localize) {
         if (token === "do") {
           return localize.ordinalNumber(date.getUTCDate(), {
-            unit: "date"
+            unit: "date",
           });
         }
         return _index7.default.d(date, token);
       },
-      D: function(date, token, localize) {
+      D: function (date, token, localize) {
         var dayOfYear = (0, _index.default)(date);
         if (token === "Do") {
           return localize.ordinalNumber(dayOfYear, {
-            unit: "dayOfYear"
+            unit: "dayOfYear",
           });
         }
         return (0, _index6.default)(dayOfYear, token.length);
       },
-      E: function(date, token, localize) {
+      E: function (date, token, localize) {
         var dayOfWeek = date.getUTCDay();
         switch (token) {
           case "E":
@@ -1591,27 +1831,27 @@ var require_formatters = __commonJS({
           case "EEE":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "EEEEE":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "EEEEEE":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "formatting"
+              context: "formatting",
             });
           case "EEEE":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      e: function(date, token, localize, options) {
+      e: function (date, token, localize, options) {
         var dayOfWeek = date.getUTCDay();
         var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
         switch (token) {
@@ -1621,32 +1861,32 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(localDayOfWeek, 2);
           case "eo":
             return localize.ordinalNumber(localDayOfWeek, {
-              unit: "day"
+              unit: "day",
             });
           case "eee":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "eeeee":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "eeeeee":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "formatting"
+              context: "formatting",
             });
           case "eeee":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      c: function(date, token, localize, options) {
+      c: function (date, token, localize, options) {
         var dayOfWeek = date.getUTCDay();
         var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
         switch (token) {
@@ -1656,32 +1896,32 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(localDayOfWeek, token.length);
           case "co":
             return localize.ordinalNumber(localDayOfWeek, {
-              unit: "day"
+              unit: "day",
             });
           case "ccc":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "standalone"
+              context: "standalone",
             });
           case "ccccc":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "standalone"
+              context: "standalone",
             });
           case "cccccc":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "standalone"
+              context: "standalone",
             });
           case "cccc":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "standalone"
+              context: "standalone",
             });
         }
       },
-      i: function(date, token, localize) {
+      i: function (date, token, localize) {
         var dayOfWeek = date.getUTCDay();
         var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
         switch (token) {
@@ -1691,32 +1931,32 @@ var require_formatters = __commonJS({
             return (0, _index6.default)(isoDayOfWeek, token.length);
           case "io":
             return localize.ordinalNumber(isoDayOfWeek, {
-              unit: "day"
+              unit: "day",
             });
           case "iii":
             return localize.day(dayOfWeek, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "iiiii":
             return localize.day(dayOfWeek, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "iiiiii":
             return localize.day(dayOfWeek, {
               width: "short",
-              context: "formatting"
+              context: "formatting",
             });
           case "iiii":
           default:
             return localize.day(dayOfWeek, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      a: function(date, token, localize) {
+      a: function (date, token, localize) {
         var hours = date.getUTCHours();
         var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
         switch (token) {
@@ -1724,27 +1964,29 @@ var require_formatters = __commonJS({
           case "aa":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "aaa":
-            return localize.dayPeriod(dayPeriodEnumValue, {
-              width: "abbreviated",
-              context: "formatting"
-            }).toLowerCase();
+            return localize
+              .dayPeriod(dayPeriodEnumValue, {
+                width: "abbreviated",
+                context: "formatting",
+              })
+              .toLowerCase();
           case "aaaaa":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "aaaa":
           default:
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      b: function(date, token, localize) {
+      b: function (date, token, localize) {
         var hours = date.getUTCHours();
         var dayPeriodEnumValue;
         if (hours === 12) {
@@ -1759,27 +2001,29 @@ var require_formatters = __commonJS({
           case "bb":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "bbb":
-            return localize.dayPeriod(dayPeriodEnumValue, {
-              width: "abbreviated",
-              context: "formatting"
-            }).toLowerCase();
+            return localize
+              .dayPeriod(dayPeriodEnumValue, {
+                width: "abbreviated",
+                context: "formatting",
+              })
+              .toLowerCase();
           case "bbbbb":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "bbbb":
           default:
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      B: function(date, token, localize) {
+      B: function (date, token, localize) {
         var hours = date.getUTCHours();
         var dayPeriodEnumValue;
         if (hours >= 17) {
@@ -1797,80 +2041,78 @@ var require_formatters = __commonJS({
           case "BBB":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "abbreviated",
-              context: "formatting"
+              context: "formatting",
             });
           case "BBBBB":
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "narrow",
-              context: "formatting"
+              context: "formatting",
             });
           case "BBBB":
           default:
             return localize.dayPeriod(dayPeriodEnumValue, {
               width: "wide",
-              context: "formatting"
+              context: "formatting",
             });
         }
       },
-      h: function(date, token, localize) {
+      h: function (date, token, localize) {
         if (token === "ho") {
           var hours = date.getUTCHours() % 12;
-          if (hours === 0)
-            hours = 12;
+          if (hours === 0) hours = 12;
           return localize.ordinalNumber(hours, {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return _index7.default.h(date, token);
       },
-      H: function(date, token, localize) {
+      H: function (date, token, localize) {
         if (token === "Ho") {
           return localize.ordinalNumber(date.getUTCHours(), {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return _index7.default.H(date, token);
       },
-      K: function(date, token, localize) {
+      K: function (date, token, localize) {
         var hours = date.getUTCHours() % 12;
         if (token === "Ko") {
           return localize.ordinalNumber(hours, {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return (0, _index6.default)(hours, token.length);
       },
-      k: function(date, token, localize) {
+      k: function (date, token, localize) {
         var hours = date.getUTCHours();
-        if (hours === 0)
-          hours = 24;
+        if (hours === 0) hours = 24;
         if (token === "ko") {
           return localize.ordinalNumber(hours, {
-            unit: "hour"
+            unit: "hour",
           });
         }
         return (0, _index6.default)(hours, token.length);
       },
-      m: function(date, token, localize) {
+      m: function (date, token, localize) {
         if (token === "mo") {
           return localize.ordinalNumber(date.getUTCMinutes(), {
-            unit: "minute"
+            unit: "minute",
           });
         }
         return _index7.default.m(date, token);
       },
-      s: function(date, token, localize) {
+      s: function (date, token, localize) {
         if (token === "so") {
           return localize.ordinalNumber(date.getUTCSeconds(), {
-            unit: "second"
+            unit: "second",
           });
         }
         return _index7.default.s(date, token);
       },
-      S: function(date, token) {
+      S: function (date, token) {
         return _index7.default.S(date, token);
       },
-      X: function(date, token, _localize, options) {
+      X: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         if (timezoneOffset === 0) {
@@ -1888,7 +2130,7 @@ var require_formatters = __commonJS({
             return formatTimezone(timezoneOffset, ":");
         }
       },
-      x: function(date, token, _localize, options) {
+      x: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         switch (token) {
@@ -1903,7 +2145,7 @@ var require_formatters = __commonJS({
             return formatTimezone(timezoneOffset, ":");
         }
       },
-      O: function(date, token, _localize, options) {
+      O: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         switch (token) {
@@ -1916,7 +2158,7 @@ var require_formatters = __commonJS({
             return "GMT" + formatTimezone(timezoneOffset, ":");
         }
       },
-      z: function(date, token, _localize, options) {
+      z: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timezoneOffset = originalDate.getTimezoneOffset();
         switch (token) {
@@ -1929,16 +2171,16 @@ var require_formatters = __commonJS({
             return "GMT" + formatTimezone(timezoneOffset, ":");
         }
       },
-      t: function(date, token, _localize, options) {
+      t: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timestamp = Math.floor(originalDate.getTime() / 1e3);
         return (0, _index6.default)(timestamp, token.length);
       },
-      T: function(date, token, _localize, options) {
+      T: function (date, token, _localize, options) {
         var originalDate = options._originalDate || date;
         var timestamp = originalDate.getTime();
         return (0, _index6.default)(timestamp, token.length);
-      }
+      },
     };
     function formatTimezoneShort(offset, dirtyDelimiter) {
       var sign = offset > 0 ? "-" : "+";
@@ -1949,7 +2191,9 @@ var require_formatters = __commonJS({
         return sign + String(hours);
       }
       var delimiter = dirtyDelimiter || "";
-      return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);
+      return (
+        sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2)
+      );
     }
     function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
       if (offset % 60 === 0) {
@@ -1969,35 +2213,38 @@ var require_formatters = __commonJS({
     var _default = formatters;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/format/longFormatters/index.js
 var require_longFormatters = __commonJS({
-  "../../node_modules/date-fns/_lib/format/longFormatters/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/format/longFormatters/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = void 0;
     function dateLongFormatter(pattern, formatLong) {
       switch (pattern) {
         case "P":
           return formatLong.date({
-            width: "short"
+            width: "short",
           });
         case "PP":
           return formatLong.date({
-            width: "medium"
+            width: "medium",
           });
         case "PPP":
           return formatLong.date({
-            width: "long"
+            width: "long",
           });
         case "PPPP":
         default:
           return formatLong.date({
-            width: "full"
+            width: "full",
           });
       }
     }
@@ -2005,20 +2252,20 @@ var require_longFormatters = __commonJS({
       switch (pattern) {
         case "p":
           return formatLong.time({
-            width: "short"
+            width: "short",
           });
         case "pp":
           return formatLong.time({
-            width: "medium"
+            width: "medium",
           });
         case "ppp":
           return formatLong.time({
-            width: "long"
+            width: "long",
           });
         case "pppp":
         default:
           return formatLong.time({
-            width: "full"
+            width: "full",
           });
       }
     }
@@ -2033,53 +2280,68 @@ var require_longFormatters = __commonJS({
       switch (datePattern) {
         case "P":
           dateTimeFormat = formatLong.dateTime({
-            width: "short"
+            width: "short",
           });
           break;
         case "PP":
           dateTimeFormat = formatLong.dateTime({
-            width: "medium"
+            width: "medium",
           });
           break;
         case "PPP":
           dateTimeFormat = formatLong.dateTime({
-            width: "long"
+            width: "long",
           });
           break;
         case "PPPP":
         default:
           dateTimeFormat = formatLong.dateTime({
-            width: "full"
+            width: "full",
           });
           break;
       }
-      return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong));
+      return dateTimeFormat
+        .replace("{{date}}", dateLongFormatter(datePattern, formatLong))
+        .replace("{{time}}", timeLongFormatter(timePattern, formatLong));
     }
     var longFormatters = {
       p: timeLongFormatter,
-      P: dateTimeLongFormatter
+      P: dateTimeLongFormatter,
     };
     var _default = longFormatters;
     exports.default = _default;
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js
 var require_getTimezoneOffsetInMilliseconds = __commonJS({
-  "../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(exports, module) {
+  "../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getTimezoneOffsetInMilliseconds;
     function getTimezoneOffsetInMilliseconds(date) {
-      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
+      var utcDate = new Date(
+        Date.UTC(
+          date.getFullYear(),
+          date.getMonth(),
+          date.getDate(),
+          date.getHours(),
+          date.getMinutes(),
+          date.getSeconds(),
+          date.getMilliseconds()
+        )
+      );
       utcDate.setUTCFullYear(date.getFullYear());
       return date.getTime() - utcDate.getTime();
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/protectedTokens/index.js
@@ -2087,7 +2349,7 @@ var require_protectedTokens = __commonJS({
   "../../node_modules/date-fns/_lib/protectedTokens/index.js"(exports) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;
     exports.isProtectedWeekYearToken = isProtectedWeekYearToken;
@@ -2102,16 +2364,38 @@ var require_protectedTokens = __commonJS({
     }
     function throwProtectedError(token, format4, input) {
       if (token === "YYYY") {
-        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format4, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `yyyy` instead of `YYYY` (in `"
+            .concat(format4, "`) for formatting years to the input `")
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       } else if (token === "YY") {
-        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format4, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `yy` instead of `YY` (in `"
+            .concat(format4, "`) for formatting years to the input `")
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       } else if (token === "D") {
-        throw new RangeError("Use `d` instead of `D` (in `".concat(format4, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `d` instead of `D` (in `"
+            .concat(
+              format4,
+              "`) for formatting days of the month to the input `"
+            )
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       } else if (token === "DD") {
-        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format4, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
+        throw new RangeError(
+          "Use `dd` instead of `DD` (in `"
+            .concat(
+              format4,
+              "`) for formatting days of the month to the input `"
+            )
+            .concat(input, "`; see: https://git.io/fxCyr")
+        );
       }
     }
-  }
+  },
 });
 
 // ../../node_modules/date-fns/format/index.js
@@ -2119,7 +2403,7 @@ var require_format = __commonJS({
   "../../node_modules/date-fns/format/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = format4;
     var _index = _interopRequireDefault(require_isValid());
@@ -2128,14 +2412,17 @@ var require_format = __commonJS({
     var _index4 = _interopRequireDefault(require_toDate());
     var _index5 = _interopRequireDefault(require_formatters());
     var _index6 = _interopRequireDefault(require_longFormatters());
-    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
+    var _index7 = _interopRequireDefault(
+      require_getTimezoneOffsetInMilliseconds()
+    );
     var _index8 = require_protectedTokens();
     var _index9 = _interopRequireDefault(require_toInteger());
     var _index10 = _interopRequireDefault(require_requiredArgs());
     function _interopRequireDefault(obj) {
       return obj && obj.__esModule ? obj : { default: obj };
     }
-    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
+    var formattingTokensRegExp =
+      /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
     var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
     var escapedStringRegExp = /^'([^]*?)'?$/;
     var doubleQuoteRegExp = /''/g;
@@ -2145,17 +2432,34 @@ var require_format = __commonJS({
       var formatStr = String(dirtyFormatStr);
       var options = dirtyOptions || {};
       var locale = options.locale || _index2.default;
-      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
-      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index9.default)(localeFirstWeekContainsDate);
-      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index9.default)(options.firstWeekContainsDate);
+      var localeFirstWeekContainsDate =
+        locale.options && locale.options.firstWeekContainsDate;
+      var defaultFirstWeekContainsDate =
+        localeFirstWeekContainsDate == null
+          ? 1
+          : (0, _index9.default)(localeFirstWeekContainsDate);
+      var firstWeekContainsDate =
+        options.firstWeekContainsDate == null
+          ? defaultFirstWeekContainsDate
+          : (0, _index9.default)(options.firstWeekContainsDate);
       if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
-        throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
+        throw new RangeError(
+          "firstWeekContainsDate must be between 1 and 7 inclusively"
+        );
       }
       var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
-      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index9.default)(localeWeekStartsOn);
-      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index9.default)(options.weekStartsOn);
+      var defaultWeekStartsOn =
+        localeWeekStartsOn == null
+          ? 0
+          : (0, _index9.default)(localeWeekStartsOn);
+      var weekStartsOn =
+        options.weekStartsOn == null
+          ? defaultWeekStartsOn
+          : (0, _index9.default)(options.weekStartsOn);
       if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
-        throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
+        throw new RangeError(
+          "weekStartsOn must be between 0 and 6 inclusively"
+        );
       }
       if (!locale.localize) {
         throw new RangeError("locale must contain localize property");
@@ -2173,45 +2477,80 @@ var require_format = __commonJS({
         firstWeekContainsDate,
         weekStartsOn,
         locale,
-        _originalDate: originalDate
+        _originalDate: originalDate,
       };
-      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
-        var firstCharacter = substring[0];
-        if (firstCharacter === "p" || firstCharacter === "P") {
-          var longFormatter = _index6.default[firstCharacter];
-          return longFormatter(substring, locale.formatLong, formatterOptions);
-        }
-        return substring;
-      }).join("").match(formattingTokensRegExp).map(function(substring) {
-        if (substring === "''") {
-          return "'";
-        }
-        var firstCharacter = substring[0];
-        if (firstCharacter === "'") {
-          return cleanEscapedString(substring);
-        }
-        var formatter = _index5.default[firstCharacter];
-        if (formatter) {
-          if (!options.useAdditionalWeekYearTokens && (0, _index8.isProtectedWeekYearToken)(substring)) {
-            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
+      var result = formatStr
+        .match(longFormattingTokensRegExp)
+        .map(function (substring) {
+          var firstCharacter = substring[0];
+          if (firstCharacter === "p" || firstCharacter === "P") {
+            var longFormatter = _index6.default[firstCharacter];
+            return longFormatter(
+              substring,
+              locale.formatLong,
+              formatterOptions
+            );
           }
-          if (!options.useAdditionalDayOfYearTokens && (0, _index8.isProtectedDayOfYearToken)(substring)) {
-            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);
+          return substring;
+        })
+        .join("")
+        .match(formattingTokensRegExp)
+        .map(function (substring) {
+          if (substring === "''") {
+            return "'";
           }
-          return formatter(utcDate, substring, locale.localize, formatterOptions);
-        }
-        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
-          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
-        }
-        return substring;
-      }).join("");
+          var firstCharacter = substring[0];
+          if (firstCharacter === "'") {
+            return cleanEscapedString(substring);
+          }
+          var formatter = _index5.default[firstCharacter];
+          if (formatter) {
+            if (
+              !options.useAdditionalWeekYearTokens &&
+              (0, _index8.isProtectedWeekYearToken)(substring)
+            ) {
+              (0, _index8.throwProtectedError)(
+                substring,
+                dirtyFormatStr,
+                dirtyDate
+              );
+            }
+            if (
+              !options.useAdditionalDayOfYearTokens &&
+              (0, _index8.isProtectedDayOfYearToken)(substring)
+            ) {
+              (0, _index8.throwProtectedError)(
+                substring,
+                dirtyFormatStr,
+                dirtyDate
+              );
+            }
+            return formatter(
+              utcDate,
+              substring,
+              locale.localize,
+              formatterOptions
+            );
+          }
+          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
+            throw new RangeError(
+              "Format string contains an unescaped latin alphabet character `" +
+                firstCharacter +
+                "`"
+            );
+          }
+          return substring;
+        })
+        .join("");
       return result;
     }
     function cleanEscapedString(input) {
-      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
+      return input
+        .match(escapedStringRegExp)[1]
+        .replace(doubleQuoteRegExp, "'");
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/format-number/index.js
@@ -2221,7 +2560,8 @@ var require_format_number = __commonJS({
     module.exports.default = formatter;
     function formatter(options) {
       options = options || {};
-      options.negativeType = options.negativeType || (options.negative === "R" ? "right" : "left");
+      options.negativeType =
+        options.negativeType || (options.negative === "R" ? "right" : "left");
       if (typeof options.negativeLeftSymbol !== "string") {
         switch (options.negativeType) {
           case "left":
@@ -2255,9 +2595,13 @@ var require_format_number = __commonJS({
       options.prefix = options.prefix || "";
       options.suffix = options.suffix || "";
       if (typeof options.integerSeparator !== "string") {
-        options.integerSeparator = typeof options.separator === "string" ? options.separator : ",";
+        options.integerSeparator =
+          typeof options.separator === "string" ? options.separator : ",";
       }
-      options.decimalsSeparator = typeof options.decimalsSeparator === "string" ? options.decimalsSeparator : "";
+      options.decimalsSeparator =
+        typeof options.decimalsSeparator === "string"
+          ? options.decimalsSeparator
+          : "";
       options.decimal = options.decimal || ".";
       options.padLeft = options.padLeft || -1;
       options.padRight = options.padRight || -1;
@@ -2281,8 +2625,7 @@ var require_format_number = __commonJS({
           output.push(options.prefix);
         }
         number = number.split(".");
-        if (options.round != null)
-          round(number, options.round);
+        if (options.round != null) round(number, options.round);
         if (options.truncate != null)
           number[1] = truncate(number[1], options.truncate);
         if (options.padLeft > 0)
@@ -2290,7 +2633,10 @@ var require_format_number = __commonJS({
         if (options.padRight > 0)
           number[1] = padRight(number[1], options.padRight);
         if (!overrideOptions.noSeparator && number[1])
-          number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);
+          number[1] = addDecimalSeparators(
+            number[1],
+            options.decimalsSeparator
+          );
         if (!overrideOptions.noSeparator && number[0])
           number[0] = addIntegerSeparators(number[0], options.integerSeparator);
         output.push(number[0]);
@@ -2329,7 +2675,7 @@ var require_format_number = __commonJS({
       function unformat(number, allowedSeparators) {
         allowedSeparators = allowedSeparators || [];
         if (options.allowedSeparators) {
-          options.allowedSeparators.forEach(function(s) {
+          options.allowedSeparators.forEach(function (s) {
             allowedSeparators.push(s);
           });
         }
@@ -2352,9 +2698,17 @@ var require_format_number = __commonJS({
         number = number.split(options.decimal);
         if (number.length > 2) {
           return false;
-        } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {
+        } else if (
+          options.truncate != null &&
+          number[1] &&
+          number[1].length > options.truncate
+        ) {
           return false;
-        } else if (options.round != null && number[1] && number[1].length > options.round) {
+        } else if (
+          options.round != null &&
+          number[1] &&
+          number[1].length > options.round
+        ) {
           return false;
         } else {
           return /^-?\d+\.?\d*$/.test(number);
@@ -2364,8 +2718,7 @@ var require_format_number = __commonJS({
     }
     function addIntegerSeparators(x, separator) {
       x += "";
-      if (!separator)
-        return x;
+      if (!separator) return x;
       var rgx = /(\d+)(\d{3})/;
       while (rgx.test(x)) {
         x = x.replace(rgx, "$1" + separator + "$2");
@@ -2374,8 +2727,7 @@ var require_format_number = __commonJS({
     }
     function addDecimalSeparators(x, separator) {
       x += "";
-      if (!separator)
-        return x;
+      if (!separator) return x;
       var rgx = /(\d{3})(\d+)/;
       while (rgx.test(x)) {
         x = x.replace(rgx, "$1" + separator + "$2");
@@ -2432,7 +2784,7 @@ var require_format_number = __commonJS({
       }
       return number;
     }
-  }
+  },
 });
 
 // ../../node_modules/date-fns/addDays/index.js
@@ -2440,7 +2792,7 @@ var require_addDays = __commonJS({
   "../../node_modules/date-fns/addDays/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addDays;
     var _index = _interopRequireDefault(require_toInteger());
@@ -2463,7 +2815,7 @@ var require_addDays = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/addMonths/index.js
@@ -2471,7 +2823,7 @@ var require_addMonths = __commonJS({
   "../../node_modules/date-fns/addMonths/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = addMonths;
     var _index = _interopRequireDefault(require_toInteger());
@@ -2497,12 +2849,16 @@ var require_addMonths = __commonJS({
       if (dayOfMonth >= daysInMonth) {
         return endOfDesiredMonth;
       } else {
-        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
+        date.setFullYear(
+          endOfDesiredMonth.getFullYear(),
+          endOfDesiredMonth.getMonth(),
+          dayOfMonth
+        );
         return date;
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/add/index.js
@@ -2510,7 +2866,7 @@ var require_add = __commonJS({
   "../../node_modules/date-fns/add/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = add2;
     var _index = _interopRequireDefault(require_addDays());
@@ -2523,18 +2879,27 @@ var require_add = __commonJS({
     }
     function add2(dirtyDate, duration) {
       (0, _index4.default)(2, arguments);
-      if (!duration || typeof duration !== "object")
-        return new Date(NaN);
+      if (!duration || typeof duration !== "object") return new Date(NaN);
       var years = duration.years ? (0, _index5.default)(duration.years) : 0;
       var months = duration.months ? (0, _index5.default)(duration.months) : 0;
       var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;
       var days = duration.days ? (0, _index5.default)(duration.days) : 0;
       var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;
-      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;
-      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;
+      var minutes = duration.minutes
+        ? (0, _index5.default)(duration.minutes)
+        : 0;
+      var seconds = duration.seconds
+        ? (0, _index5.default)(duration.seconds)
+        : 0;
       var date = (0, _index3.default)(dirtyDate);
-      var dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date;
-      var dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths;
+      var dateWithMonths =
+        months || years
+          ? (0, _index2.default)(date, months + years * 12)
+          : date;
+      var dateWithDays =
+        days || weeks
+          ? (0, _index.default)(dateWithMonths, days + weeks * 7)
+          : dateWithMonths;
       var minutesToAdd = minutes + hours * 60;
       var secondsToAdd = seconds + minutesToAdd * 60;
       var msToAdd = secondsToAdd * 1e3;
@@ -2542,7 +2907,7 @@ var require_add = __commonJS({
       return finalDate;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getDate/index.js
@@ -2550,7 +2915,7 @@ var require_getDate = __commonJS({
   "../../node_modules/date-fns/getDate/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getDate2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2565,7 +2930,7 @@ var require_getDate = __commonJS({
       return dayOfMonth;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getDay/index.js
@@ -2573,7 +2938,7 @@ var require_getDay = __commonJS({
   "../../node_modules/date-fns/getDay/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getDay2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2588,7 +2953,7 @@ var require_getDay = __commonJS({
       return day;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getHours/index.js
@@ -2596,7 +2961,7 @@ var require_getHours = __commonJS({
   "../../node_modules/date-fns/getHours/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getHours2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2611,7 +2976,7 @@ var require_getHours = __commonJS({
       return hours;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getMinutes/index.js
@@ -2619,7 +2984,7 @@ var require_getMinutes = __commonJS({
   "../../node_modules/date-fns/getMinutes/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getMinutes2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2634,7 +2999,7 @@ var require_getMinutes = __commonJS({
       return minutes;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getMonth/index.js
@@ -2642,7 +3007,7 @@ var require_getMonth = __commonJS({
   "../../node_modules/date-fns/getMonth/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getMonth2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2657,7 +3022,7 @@ var require_getMonth = __commonJS({
       return month;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/getYear/index.js
@@ -2665,7 +3030,7 @@ var require_getYear = __commonJS({
   "../../node_modules/date-fns/getYear/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = getYear2;
     var _index = _interopRequireDefault(require_toDate());
@@ -2678,7 +3043,7 @@ var require_getYear = __commonJS({
       return (0, _index.default)(dirtyDate).getFullYear();
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/compareAsc/index.js
@@ -2686,7 +3051,7 @@ var require_compareAsc = __commonJS({
   "../../node_modules/date-fns/compareAsc/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = compareAsc;
     var _index = _interopRequireDefault(require_toDate());
@@ -2708,15 +3073,18 @@ var require_compareAsc = __commonJS({
       }
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInCalendarYears/index.js
 var require_differenceInCalendarYears = __commonJS({
-  "../../node_modules/date-fns/differenceInCalendarYears/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInCalendarYears/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInCalendarYears;
     var _index = _interopRequireDefault(require_toDate());
@@ -2731,7 +3099,7 @@ var require_differenceInCalendarYears = __commonJS({
       return dateLeft.getFullYear() - dateRight.getFullYear();
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInYears/index.js
@@ -2739,7 +3107,7 @@ var require_differenceInYears = __commonJS({
   "../../node_modules/date-fns/differenceInYears/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInYears;
     var _index = _interopRequireDefault(require_toDate());
@@ -2757,20 +3125,24 @@ var require_differenceInYears = __commonJS({
       var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
       dateLeft.setFullYear(1584);
       dateRight.setFullYear(1584);
-      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
+      var isLastYearNotFull =
+        (0, _index3.default)(dateLeft, dateRight) === -sign;
       var result = sign * (difference - Number(isLastYearNotFull));
       return result === 0 ? 0 : result;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInCalendarMonths/index.js
 var require_differenceInCalendarMonths = __commonJS({
-  "../../node_modules/date-fns/differenceInCalendarMonths/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInCalendarMonths/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInCalendarMonths;
     var _index = _interopRequireDefault(require_toDate());
@@ -2787,7 +3159,7 @@ var require_differenceInCalendarMonths = __commonJS({
       return yearDiff * 12 + monthDiff;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/endOfDay/index.js
@@ -2795,7 +3167,7 @@ var require_endOfDay = __commonJS({
   "../../node_modules/date-fns/endOfDay/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = endOfDay;
     var _index = _interopRequireDefault(require_toDate());
@@ -2810,7 +3182,7 @@ var require_endOfDay = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/endOfMonth/index.js
@@ -2818,7 +3190,7 @@ var require_endOfMonth = __commonJS({
   "../../node_modules/date-fns/endOfMonth/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = endOfMonth;
     var _index = _interopRequireDefault(require_toDate());
@@ -2835,7 +3207,7 @@ var require_endOfMonth = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/isLastDayOfMonth/index.js
@@ -2843,7 +3215,7 @@ var require_isLastDayOfMonth = __commonJS({
   "../../node_modules/date-fns/isLastDayOfMonth/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = isLastDayOfMonth;
     var _index = _interopRequireDefault(require_toDate());
@@ -2856,10 +3228,13 @@ var require_isLastDayOfMonth = __commonJS({
     function isLastDayOfMonth(dirtyDate) {
       (0, _index4.default)(1, arguments);
       var date = (0, _index.default)(dirtyDate);
-      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();
+      return (
+        (0, _index2.default)(date).getTime() ===
+        (0, _index3.default)(date).getTime()
+      );
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInMonths/index.js
@@ -2867,7 +3242,7 @@ var require_differenceInMonths = __commonJS({
   "../../node_modules/date-fns/differenceInMonths/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInMonths;
     var _index = _interopRequireDefault(require_toDate());
@@ -2892,8 +3267,13 @@ var require_differenceInMonths = __commonJS({
           dateLeft.setDate(30);
         }
         dateLeft.setMonth(dateLeft.getMonth() - sign * difference);
-        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;
-        if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {
+        var isLastMonthNotFull =
+          (0, _index3.default)(dateLeft, dateRight) === -sign;
+        if (
+          (0, _index5.default)((0, _index.default)(dirtyDateLeft)) &&
+          difference === 1 &&
+          (0, _index3.default)(dirtyDateLeft, dateRight) === 1
+        ) {
           isLastMonthNotFull = false;
         }
         result = sign * (difference - Number(isLastMonthNotFull));
@@ -2901,7 +3281,7 @@ var require_differenceInMonths = __commonJS({
       return result === 0 ? 0 : result;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/startOfDay/index.js
@@ -2909,7 +3289,7 @@ var require_startOfDay = __commonJS({
   "../../node_modules/date-fns/startOfDay/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = startOfDay;
     var _index = _interopRequireDefault(require_toDate());
@@ -2924,18 +3304,23 @@ var require_startOfDay = __commonJS({
       return date;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInCalendarDays/index.js
 var require_differenceInCalendarDays = __commonJS({
-  "../../node_modules/date-fns/differenceInCalendarDays/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInCalendarDays/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInCalendarDays;
-    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());
+    var _index = _interopRequireDefault(
+      require_getTimezoneOffsetInMilliseconds()
+    );
     var _index2 = _interopRequireDefault(require_startOfDay());
     var _index3 = _interopRequireDefault(require_requiredArgs());
     function _interopRequireDefault(obj) {
@@ -2946,12 +3331,14 @@ var require_differenceInCalendarDays = __commonJS({
       (0, _index3.default)(2, arguments);
       var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);
       var startOfDayRight = (0, _index2.default)(dirtyDateRight);
-      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
-      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
+      var timestampLeft =
+        startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);
+      var timestampRight =
+        startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);
       return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInDays/index.js
@@ -2959,7 +3346,7 @@ var require_differenceInDays = __commonJS({
   "../../node_modules/date-fns/differenceInDays/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInDays;
     var _index = _interopRequireDefault(require_toDate());
@@ -2969,7 +3356,14 @@ var require_differenceInDays = __commonJS({
       return obj && obj.__esModule ? obj : { default: obj };
     }
     function compareLocalAsc(dateLeft, dateRight) {
-      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
+      var diff =
+        dateLeft.getFullYear() - dateRight.getFullYear() ||
+        dateLeft.getMonth() - dateRight.getMonth() ||
+        dateLeft.getDate() - dateRight.getDate() ||
+        dateLeft.getHours() - dateRight.getHours() ||
+        dateLeft.getMinutes() - dateRight.getMinutes() ||
+        dateLeft.getSeconds() - dateRight.getSeconds() ||
+        dateLeft.getMilliseconds() - dateRight.getMilliseconds();
       if (diff < 0) {
         return -1;
       } else if (diff > 0) {
@@ -2985,12 +3379,14 @@ var require_differenceInDays = __commonJS({
       var sign = compareLocalAsc(dateLeft, dateRight);
       var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));
       dateLeft.setDate(dateLeft.getDate() - sign * difference);
-      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);
+      var isLastDayNotFull = Number(
+        compareLocalAsc(dateLeft, dateRight) === -sign
+      );
       var result = sign * (difference - isLastDayNotFull);
       return result === 0 ? 0 : result;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/constants/index.js
@@ -2998,9 +3394,21 @@ var require_constants = __commonJS({
   "../../node_modules/date-fns/constants/index.js"(exports) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
-    exports.secondsInMinute = exports.secondsInHour = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInHour = exports.minTime = exports.millisecondsInSecond = exports.millisecondsInHour = exports.millisecondsInMinute = exports.maxTime = exports.daysInWeek = void 0;
+    exports.secondsInMinute =
+      exports.secondsInHour =
+      exports.quartersInYear =
+      exports.monthsInYear =
+      exports.monthsInQuarter =
+      exports.minutesInHour =
+      exports.minTime =
+      exports.millisecondsInSecond =
+      exports.millisecondsInHour =
+      exports.millisecondsInMinute =
+      exports.maxTime =
+      exports.daysInWeek =
+        void 0;
     var daysInWeek = 7;
     exports.daysInWeek = daysInWeek;
     var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
@@ -3025,15 +3433,18 @@ var require_constants = __commonJS({
     exports.secondsInHour = secondsInHour;
     var secondsInMinute = 60;
     exports.secondsInMinute = secondsInMinute;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInMilliseconds/index.js
 var require_differenceInMilliseconds = __commonJS({
-  "../../node_modules/date-fns/differenceInMilliseconds/index.js"(exports, module) {
+  "../../node_modules/date-fns/differenceInMilliseconds/index.js"(
+    exports,
+    module
+  ) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInMilliseconds;
     var _index = _interopRequireDefault(require_toDate());
@@ -3043,10 +3454,13 @@ var require_differenceInMilliseconds = __commonJS({
     }
     function differenceInMilliseconds(dateLeft, dateRight) {
       (0, _index2.default)(2, arguments);
-      return (0, _index.default)(dateLeft).getTime() - (0, _index.default)(dateRight).getTime();
+      return (
+        (0, _index.default)(dateLeft).getTime() -
+        (0, _index.default)(dateRight).getTime()
+      );
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/_lib/roundingMethods/index.js
@@ -3054,22 +3468,22 @@ var require_roundingMethods = __commonJS({
   "../../node_modules/date-fns/_lib/roundingMethods/index.js"(exports) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.getRoundingMethod = getRoundingMethod;
     var roundingMap = {
       ceil: Math.ceil,
       round: Math.round,
       floor: Math.floor,
-      trunc: function(value) {
+      trunc: function (value) {
         return value < 0 ? Math.ceil(value) : Math.floor(value);
-      }
+      },
     };
     var defaultRoundingMethod = "trunc";
     function getRoundingMethod(method) {
       return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];
     }
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInHours/index.js
@@ -3077,7 +3491,7 @@ var require_differenceInHours = __commonJS({
   "../../node_modules/date-fns/differenceInHours/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInHours;
     var _index = require_constants();
@@ -3089,11 +3503,14 @@ var require_differenceInHours = __commonJS({
     }
     function differenceInHours(dateLeft, dateRight, options) {
       (0, _index3.default)(2, arguments);
-      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;
-      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
+      var diff =
+        (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;
+      return (0, _index4.getRoundingMethod)(
+        options === null || options === void 0 ? void 0 : options.roundingMethod
+      )(diff);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInMinutes/index.js
@@ -3101,7 +3518,7 @@ var require_differenceInMinutes = __commonJS({
   "../../node_modules/date-fns/differenceInMinutes/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInMinutes;
     var _index = require_constants();
@@ -3113,11 +3530,14 @@ var require_differenceInMinutes = __commonJS({
     }
     function differenceInMinutes(dateLeft, dateRight, options) {
       (0, _index3.default)(2, arguments);
-      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;
-      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
+      var diff =
+        (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;
+      return (0, _index4.getRoundingMethod)(
+        options === null || options === void 0 ? void 0 : options.roundingMethod
+      )(diff);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/differenceInSeconds/index.js
@@ -3125,7 +3545,7 @@ var require_differenceInSeconds = __commonJS({
   "../../node_modules/date-fns/differenceInSeconds/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = differenceInSeconds;
     var _index = _interopRequireDefault(require_differenceInMilliseconds());
@@ -3137,10 +3557,12 @@ var require_differenceInSeconds = __commonJS({
     function differenceInSeconds(dateLeft, dateRight, options) {
       (0, _index2.default)(2, arguments);
       var diff = (0, _index.default)(dateLeft, dateRight) / 1e3;
-      return (0, _index3.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);
+      return (0, _index3.getRoundingMethod)(
+        options === null || options === void 0 ? void 0 : options.roundingMethod
+      )(diff);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/subDays/index.js
@@ -3148,7 +3570,7 @@ var require_subDays = __commonJS({
   "../../node_modules/date-fns/subDays/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = subDays;
     var _index = _interopRequireDefault(require_toInteger());
@@ -3163,7 +3585,7 @@ var require_subDays = __commonJS({
       return (0, _index2.default)(dirtyDate, -amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/subMonths/index.js
@@ -3171,7 +3593,7 @@ var require_subMonths = __commonJS({
   "../../node_modules/date-fns/subMonths/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = subMonths;
     var _index = _interopRequireDefault(require_toInteger());
@@ -3186,7 +3608,7 @@ var require_subMonths = __commonJS({
       return (0, _index2.default)(dirtyDate, -amount);
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/sub/index.js
@@ -3194,7 +3616,7 @@ var require_sub = __commonJS({
   "../../node_modules/date-fns/sub/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = sub2;
     var _index = _interopRequireDefault(require_subDays());
@@ -3206,17 +3628,23 @@ var require_sub = __commonJS({
     }
     function sub2(date, duration) {
       (0, _index3.default)(2, arguments);
-      if (!duration || typeof duration !== "object")
-        return new Date(NaN);
+      if (!duration || typeof duration !== "object") return new Date(NaN);
       var years = duration.years ? (0, _index4.default)(duration.years) : 0;
       var months = duration.months ? (0, _index4.default)(duration.months) : 0;
       var weeks = duration.weeks ? (0, _index4.default)(duration.weeks) : 0;
       var days = duration.days ? (0, _index4.default)(duration.days) : 0;
       var hours = duration.hours ? (0, _index4.default)(duration.hours) : 0;
-      var minutes = duration.minutes ? (0, _index4.default)(duration.minutes) : 0;
-      var seconds = duration.seconds ? (0, _index4.default)(duration.seconds) : 0;
+      var minutes = duration.minutes
+        ? (0, _index4.default)(duration.minutes)
+        : 0;
+      var seconds = duration.seconds
+        ? (0, _index4.default)(duration.seconds)
+        : 0;
       var dateWithoutMonths = (0, _index2.default)(date, months + years * 12);
-      var dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7);
+      var dateWithoutDays = (0, _index.default)(
+        dateWithoutMonths,
+        days + weeks * 7
+      );
       var minutestoSub = minutes + hours * 60;
       var secondstoSub = seconds + minutestoSub * 60;
       var mstoSub = secondstoSub * 1e3;
@@ -3224,7 +3652,7 @@ var require_sub = __commonJS({
       return finalDate;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // ../../node_modules/date-fns/intervalToDuration/index.js
@@ -3232,7 +3660,7 @@ var require_intervalToDuration = __commonJS({
   "../../node_modules/date-fns/intervalToDuration/index.js"(exports, module) {
     "use strict";
     Object.defineProperty(exports, "__esModule", {
-      value: true
+      value: true,
     });
     exports.default = intervalToDuration2;
     var _index = _interopRequireDefault(require_compareAsc());
@@ -3250,7 +3678,8 @@ var require_intervalToDuration = __commonJS({
       return obj && obj.__esModule ? obj : { default: obj };
     }
     function intervalToDuration2(_ref) {
-      var start = _ref.start, end = _ref.end;
+      var start = _ref.start,
+        end = _ref.end;
       (0, _index9.default)(1, arguments);
       var dateLeft = (0, _index10.default)(start);
       var dateRight = (0, _index10.default)(end);
@@ -3266,34 +3695,42 @@ var require_intervalToDuration = __commonJS({
         days: 0,
         hours: 0,
         minutes: 0,
-        seconds: 0
+        seconds: 0,
       };
       var sign = (0, _index.default)(dateLeft, dateRight);
       duration.years = Math.abs((0, _index2.default)(dateLeft, dateRight));
       var remainingMonths = (0, _index11.default)(dateLeft, {
-        years: sign * duration.years
+        years: sign * duration.years,
       });
-      duration.months = Math.abs((0, _index3.default)(remainingMonths, dateRight));
+      duration.months = Math.abs(
+        (0, _index3.default)(remainingMonths, dateRight)
+      );
       var remainingDays = (0, _index11.default)(remainingMonths, {
-        months: sign * duration.months
+        months: sign * duration.months,
       });
       duration.days = Math.abs((0, _index4.default)(remainingDays, dateRight));
       var remainingHours = (0, _index11.default)(remainingDays, {
-        days: sign * duration.days
+        days: sign * duration.days,
       });
-      duration.hours = Math.abs((0, _index5.default)(remainingHours, dateRight));
+      duration.hours = Math.abs(
+        (0, _index5.default)(remainingHours, dateRight)
+      );
       var remainingMinutes = (0, _index11.default)(remainingHours, {
-        hours: sign * duration.hours
+        hours: sign * duration.hours,
       });
-      duration.minutes = Math.abs((0, _index6.default)(remainingMinutes, dateRight));
+      duration.minutes = Math.abs(
+        (0, _index6.default)(remainingMinutes, dateRight)
+      );
       var remainingSeconds = (0, _index11.default)(remainingMinutes, {
-        minutes: sign * duration.minutes
+        minutes: sign * duration.minutes,
       });
-      duration.seconds = Math.abs((0, _index7.default)(remainingSeconds, dateRight));
+      duration.seconds = Math.abs(
+        (0, _index7.default)(remainingSeconds, dateRight)
+      );
       return duration;
     }
     module.exports = exports.default;
-  }
+  },
 });
 
 // src/third-party/collection.tsx
@@ -3301,7 +3738,7 @@ import * as React53 from "react";
 import {
   getBlockCollectionId,
   getBlockParentPage as getBlockParentPage2,
-  getTextContent as getTextContent4
+  getTextContent as getTextContent4,
 } from "notion-utils";
 import { useLocalStorage, useWindowSize } from "react-use";
 
@@ -3332,17 +3769,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -3376,7 +3821,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -3384,13 +3829,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -3400,12 +3845,23 @@ import * as React2 from "react";
 // src/icons/type-github.tsx
 import * as React from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -3413,18 +3869,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React2.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React2.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -3439,24 +3910,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React2.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React2.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React2.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React2.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React2.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React2.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React2.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React2.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React2.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/text.tsx
@@ -3470,7 +3975,10 @@ var GracefulImage = (props) => {
   if (isBrowser) {
     return /* @__PURE__ */ React3.createElement(Img, __spreadValues({}, props));
   } else {
-    return /* @__PURE__ */ React3.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React3.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
@@ -3478,208 +3986,314 @@ var GracefulImage = (props) => {
 import * as React4 from "react";
 import { getBlockTitle } from "notion-utils";
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React4.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React4.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React4.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React4.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React4.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React4.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React4.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React4.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React4.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React4.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React4.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React4.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
-};
+  return /* @__PURE__ */ React4.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React4.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React4.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React4.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
+};
 var PageTitle = React4.memo(PageTitleImpl);
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React5.createElement(React5.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React5.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React5.createElement(React5.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React5.createElement(
+    React5.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React5.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React5.createElement(
+                React5.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React5.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React5.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React5.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React5.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React5.createElement(GracefulImage, {
+                      className: "notion-user",
+                      src: mapImageUrl(user.profile_photo, block),
+                      alt: name,
+                    });
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React5.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React5.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React5.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React5.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React5.createElement("b", null, element);
+              case "i":
+                return /* @__PURE__ */ React5.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React5.createElement("s", null, element);
+              case "_":
+                return /* @__PURE__ */ React5.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React5.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React5.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React5.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React5.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React5.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React5.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React5.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React5.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React5.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React5.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React5.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React5.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React5.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React5.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React5.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React5.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React5.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React5.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React5.createElement(React5.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React5.createElement(React5.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React5.createElement(React5.Fragment, null, text));
+          return /* @__PURE__ */ React5.createElement(
+            React5.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/components/lazy-image.tsx
@@ -3687,32 +4301,43 @@ import * as React6 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React6.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React6.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -3722,18 +4347,18 @@ var LazyImage = (_a) => {
   const attachZoom = React6.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React6.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React6.createElement(components.Image, {
         src,
@@ -3745,51 +4370,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React6.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React6.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React6.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React6.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React6.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React6.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React6.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React6.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React6.createElement(components.Image, {
@@ -3800,18 +4440,24 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React6.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React6.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
@@ -3823,84 +4469,144 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React7 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React7.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React7.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React7.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React7.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React10 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle2 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle2,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React8 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React8.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React8.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React8.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React8.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React9 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React9.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React9.createElement("defs", null, /* @__PURE__ */ React9.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React9.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React9.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React9.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React9.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React9.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React9.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React9.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React9.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React9.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React9.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React9.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React9.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React9.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React9.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React9.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React9.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React9.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React9.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/search-dialog.tsx
@@ -3911,7 +4617,7 @@ var SearchDialog = class extends React10.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -3922,7 +4628,11 @@ var SearchDialog = class extends React10.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -3931,67 +4641,81 @@ var SearchDialog = class extends React10.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle2(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle2(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React10.createRef();
   }
   componentDidMount() {
@@ -4002,87 +4726,189 @@ var SearchDialog = class extends React10.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React10.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React10.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React10.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React10.createElement(SearchIcon, null)), /* @__PURE__ */ React10.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React10.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React10.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React10.createElement(React10.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React10.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React10.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React10.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React10.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React10.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React10.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React10.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React10.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React10.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React10.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React10.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React10.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React10.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React10.createElement(
+                React10.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React10.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React10.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React10.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React10.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React10.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React10.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React10.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React10.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React10.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React10.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React10.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React10.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React10.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React10.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React10.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React10.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React10.createElement("div", null, /* @__PURE__ */ React10.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React10.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React10.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React10.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React10.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React11.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React11.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React11.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React11.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React11.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React11.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React11.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React11.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -4093,38 +4919,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React11.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React11.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React11.createElement(React11.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React11.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React11.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React11.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React11.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React11.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React11.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React11.createElement(
+        React11.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React11.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React11.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React11.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React11.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React11.useState(isShowingSearch);
   React11.useEffect(() => {
@@ -4150,20 +5009,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, hasSearch && /* @__PURE__ */ React11.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React11.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React11.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React11.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React11.createElement(
+    React11.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React11.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React11.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React11.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React11.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/components/asset.tsx
@@ -4173,9 +5050,11 @@ import { getTextContent } from "notion-utils";
 // src/components/lite-youtube-embed.tsx
 import * as React12 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -4187,7 +5066,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React12.useMemo(
@@ -4199,64 +5078,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React12.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React12.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React12.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React12.useState(false);
   const warmConnections = React12.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React12.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React12.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React12.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React12.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React12.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React12.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React12.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React12.createElement(
+    React12.Fragment,
+    null,
+    /* @__PURE__ */ React12.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React12.createElement(
+        React12.Fragment,
+        null,
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React12.createElement(
+        React12.Fragment,
+        null,
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React12.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React12.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React12.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React12.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React12.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -4273,7 +5179,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -4288,7 +5194,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -4298,7 +5204,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -4359,28 +5265,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React13.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React13.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React13.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -4390,29 +5305,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React13.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React13.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React13.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -4427,7 +5367,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React13.createElement("iframe", {
@@ -4438,29 +5378,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React13.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, /* @__PURE__ */ React13.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React13.createElement(
+    React13.Fragment,
+    null,
+    /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -4471,7 +5429,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId2(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -4480,32 +5447,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React14.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React14.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React14.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React14.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React14.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React14.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React14.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React14.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId2(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React14.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React14.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -4531,11 +5527,18 @@ import * as React16 from "react";
 // src/icons/check.tsx
 import * as React15 from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React15.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React15.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React15.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React15.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -4543,17 +5546,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React16.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React16.createElement(check_default, null));
+    content = /* @__PURE__ */ React16.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React16.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React16.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React16.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React16.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/next.tsx
@@ -4561,83 +5572,98 @@ import * as React17 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React17.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React17.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React17.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React17.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React17.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React17.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React17.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React18.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React18.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React18.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React18.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React18.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React18.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React18.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React18.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyLink = (_a) => {
-  var _b = _a, { href, rel, target, title } = _b, rest = __objRest(_b, ["href", "rel", "target", "title"]);
-  return /* @__PURE__ */ React18.createElement("span", __spreadValues({}, rest));
+  var _b = _a,
+    { href, rel, target, title } = _b,
+    rest = __objRest(_b, ["href", "rel", "target", "title"]);
+  return /* @__PURE__ */ React18.createElement(
+    "span",
+    __spreadValues({}, rest)
+  );
 };
 var dummyComponent = (name) => () => {
   console.warn(
@@ -4675,7 +5701,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -4684,7 +5710,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -4704,23 +5730,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React18.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -4742,17 +5770,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React18.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React18.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React18.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -4762,34 +5802,53 @@ var useNotionContext = () => {
 // src/icons/default-page-icon.tsx
 import * as React19 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React19.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React19.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React19.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React19.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle3(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -4797,96 +5856,143 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React20.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React20.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React20.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React20.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React20.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React20.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React20.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React20.memo(PageIconImpl);
 
 // src/icons/collection-view-board.tsx
 import * as React21 from "react";
 function SvgCollectionViewBoard(props) {
-  return /* @__PURE__ */ React21.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React21.createElement("path", {
-    d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z"
-  }));
+  return /* @__PURE__ */ React21.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React21.createElement("path", {
+      d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z",
+    })
+  );
 }
 var collection_view_board_default = SvgCollectionViewBoard;
 
 // src/icons/collection-view-calendar.tsx
 import * as React22 from "react";
 function SvgCollectionViewCalendar(props) {
-  return /* @__PURE__ */ React22.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React22.createElement("path", {
-    d: "M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z"
-  }));
+  return /* @__PURE__ */ React22.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React22.createElement("path", {
+      d: "M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z",
+    })
+  );
 }
 var collection_view_calendar_default = SvgCollectionViewCalendar;
 
 // src/icons/collection-view-gallery.tsx
 import * as React23 from "react";
 function SvgCollectionViewGallery(props) {
-  return /* @__PURE__ */ React23.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React23.createElement("path", {
-    d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z"
-  }));
+  return /* @__PURE__ */ React23.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React23.createElement("path", {
+      d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z",
+    })
+  );
 }
 var collection_view_gallery_default = SvgCollectionViewGallery;
 
 // src/icons/collection-view-list.tsx
 import * as React24 from "react";
 function SvgCollectionViewList(props) {
-  return /* @__PURE__ */ React24.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React24.createElement("path", {
-    d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z"
-  }));
+  return /* @__PURE__ */ React24.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React24.createElement("path", {
+      d: "M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z",
+    })
+  );
 }
 var collection_view_list_default = SvgCollectionViewList;
 
 // src/icons/collection-view-table.tsx
 import * as React25 from "react";
 function SvgCollectionViewTable(props) {
-  return /* @__PURE__ */ React25.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React25.createElement("path", {
-    d: "M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z"
-  }));
+  return /* @__PURE__ */ React25.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React25.createElement("path", {
+      d: "M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z",
+    })
+  );
 }
 var collection_view_table_default = SvgCollectionViewTable;
 
@@ -4896,14 +6002,12 @@ var iconMap = {
   board: collection_view_board_default,
   gallery: collection_view_gallery_default,
   list: collection_view_list_default,
-  calendar: collection_view_calendar_default
+  calendar: collection_view_calendar_default,
 };
 var CollectionViewIcon = (_a) => {
-  var _b = _a, {
-    type
-  } = _b, rest = __objRest(_b, [
-    "type"
-  ]);
+  var _b = _a,
+    { type } = _b,
+    rest = __objRest(_b, ["type"]);
   const icon = iconMap[type];
   if (!icon) {
     return null;
@@ -4920,176 +6024,288 @@ import * as React42 from "react";
 // src/icons/type-checkbox.tsx
 import * as React26 from "react";
 function SvgTypeCheckbox(props) {
-  return /* @__PURE__ */ React26.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React26.createElement("path", {
-    d: "M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z"
-  }));
+  return /* @__PURE__ */ React26.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React26.createElement("path", {
+      d: "M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z",
+    })
+  );
 }
 var type_checkbox_default = SvgTypeCheckbox;
 
 // src/icons/type-date.tsx
 import * as React27 from "react";
 function SvgTypeDate(props) {
-  return /* @__PURE__ */ React27.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React27.createElement("path", {
-    d: "M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z"
-  }));
+  return /* @__PURE__ */ React27.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React27.createElement("path", {
+      d: "M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z",
+    })
+  );
 }
 var type_date_default = SvgTypeDate;
 
 // src/icons/type-email.tsx
 import * as React28 from "react";
 function SvgTypeEmail(props) {
-  return /* @__PURE__ */ React28.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React28.createElement("path", {
-    d: "M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z"
-  }));
+  return /* @__PURE__ */ React28.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React28.createElement("path", {
+      d: "M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z",
+    })
+  );
 }
 var type_email_default = SvgTypeEmail;
 
 // src/icons/type-file.tsx
 import * as React29 from "react";
 function SvgTypeFile(props) {
-  return /* @__PURE__ */ React29.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React29.createElement("path", {
-    d: "M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z"
-  }));
+  return /* @__PURE__ */ React29.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React29.createElement("path", {
+      d: "M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z",
+    })
+  );
 }
 var type_file_default = SvgTypeFile;
 
 // src/icons/type-formula.tsx
 import * as React30 from "react";
 function SvgTypeFormula(props) {
-  return /* @__PURE__ */ React30.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React30.createElement("path", {
-    d: "M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z"
-  }));
+  return /* @__PURE__ */ React30.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React30.createElement("path", {
+      d: "M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z",
+    })
+  );
 }
 var type_formula_default = SvgTypeFormula;
 
 // src/icons/type-multi-select.tsx
 import * as React31 from "react";
 function SvgTypeMultiSelect(props) {
-  return /* @__PURE__ */ React31.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React31.createElement("path", {
-    d: "M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z"
-  }));
+  return /* @__PURE__ */ React31.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React31.createElement("path", {
+      d: "M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z",
+    })
+  );
 }
 var type_multi_select_default = SvgTypeMultiSelect;
 
 // src/icons/type-number.tsx
 import * as React32 from "react";
 function SvgTypeNumber(props) {
-  return /* @__PURE__ */ React32.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React32.createElement("path", {
-    d: "M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z"
-  }));
+  return /* @__PURE__ */ React32.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React32.createElement("path", {
+      d: "M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z",
+    })
+  );
 }
 var type_number_default = SvgTypeNumber;
 
 // src/icons/type-person.tsx
 import * as React33 from "react";
 function SvgTypePerson(props) {
-  return /* @__PURE__ */ React33.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React33.createElement("path", {
-    d: "M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z"
-  }));
+  return /* @__PURE__ */ React33.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React33.createElement("path", {
+      d: "M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z",
+    })
+  );
 }
 var type_person_default = SvgTypePerson;
 
 // src/icons/type-person-2.tsx
 import * as React34 from "react";
 function SvgTypePerson2(props) {
-  return /* @__PURE__ */ React34.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React34.createElement("path", {
-    d: "M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z"
-  }));
+  return /* @__PURE__ */ React34.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React34.createElement("path", {
+      d: "M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z",
+    })
+  );
 }
 var type_person_2_default = SvgTypePerson2;
 
 // src/icons/type-phone-number.tsx
 import * as React35 from "react";
 function SvgTypePhoneNumber(props) {
-  return /* @__PURE__ */ React35.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React35.createElement("path", {
-    d: "M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z"
-  }));
+  return /* @__PURE__ */ React35.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React35.createElement("path", {
+      d: "M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z",
+    })
+  );
 }
 var type_phone_number_default = SvgTypePhoneNumber;
 
 // src/icons/type-relation.tsx
 import * as React36 from "react";
 function SvgTypeRelation(props) {
-  return /* @__PURE__ */ React36.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React36.createElement("path", {
-    d: "M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z"
-  }));
+  return /* @__PURE__ */ React36.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React36.createElement("path", {
+      d: "M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z",
+    })
+  );
 }
 var type_relation_default = SvgTypeRelation;
 
 // src/icons/type-select.tsx
 import * as React37 from "react";
 function SvgTypeSelect(props) {
-  return /* @__PURE__ */ React37.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React37.createElement("path", {
-    d: "M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z"
-  }));
+  return /* @__PURE__ */ React37.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React37.createElement("path", {
+      d: "M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z",
+    })
+  );
 }
 var type_select_default = SvgTypeSelect;
 
 // src/icons/type-text.tsx
 import * as React38 from "react";
 function SvgTypeText(props) {
-  return /* @__PURE__ */ React38.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React38.createElement("path", {
-    d: "M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z"
-  }));
+  return /* @__PURE__ */ React38.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React38.createElement("path", {
+      d: "M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z",
+    })
+  );
 }
 var type_text_default = SvgTypeText;
 
 // src/icons/type-timestamp.tsx
 import * as React39 from "react";
 function SvgTypeTimestamp(props) {
-  return /* @__PURE__ */ React39.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React39.createElement("path", {
-    d: "M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z"
-  }));
+  return /* @__PURE__ */ React39.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React39.createElement("path", {
+      d: "M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z",
+    })
+  );
 }
 var type_timestamp_default = SvgTypeTimestamp;
 
 // src/icons/type-title.tsx
 import * as React40 from "react";
 function SvgTypeTitle(props) {
-  return /* @__PURE__ */ React40.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React40.createElement("path", {
-    d: "M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z"
-  }));
+  return /* @__PURE__ */ React40.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React40.createElement("path", {
+      d: "M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z",
+    })
+  );
 }
 var type_title_default = SvgTypeTitle;
 
 // src/icons/type-url.tsx
 import * as React41 from "react";
 function SvgTypeUrl(props) {
-  return /* @__PURE__ */ React41.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React41.createElement("path", {
-    d: "M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z"
-  }));
+  return /* @__PURE__ */ React41.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React41.createElement("path", {
+      d: "M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z",
+    })
+  );
 }
 var type_url_default = SvgTypeUrl;
 
@@ -5112,30 +6328,36 @@ var iconMap2 = {
   created_time: type_timestamp_default,
   last_edited_time: type_timestamp_default,
   created_by: type_person_2_default,
-  last_edited_by: type_person_2_default
+  last_edited_by: type_person_2_default,
 };
 var PropertyIcon = (_a) => {
-  var _b = _a, {
-    type
-  } = _b, rest = __objRest(_b, [
-    "type"
-  ]);
+  var _b = _a,
+    { type } = _b,
+    rest = __objRest(_b, ["type"]);
   const icon = iconMap2[type];
-  if (!icon)
-    return null;
+  if (!icon) return null;
   return icon(rest);
 };
 
 // src/third-party/collection-column-title.tsx
 var CollectionColumnTitle = ({ schema }) => {
-  return /* @__PURE__ */ React42.createElement("div", {
-    className: "notion-collection-column-title"
-  }, /* @__PURE__ */ React42.createElement(PropertyIcon, {
-    className: "notion-collection-column-title-icon",
-    type: schema.type
-  }), /* @__PURE__ */ React42.createElement("div", {
-    className: "notion-collection-column-title-body"
-  }, schema.name));
+  return /* @__PURE__ */ React42.createElement(
+    "div",
+    {
+      className: "notion-collection-column-title",
+    },
+    /* @__PURE__ */ React42.createElement(PropertyIcon, {
+      className: "notion-collection-column-title-icon",
+      type: schema.type,
+    }),
+    /* @__PURE__ */ React42.createElement(
+      "div",
+      {
+        className: "notion-collection-column-title-body",
+      },
+      schema.name
+    )
+  );
 };
 
 // src/third-party/property.tsx
@@ -5156,7 +6378,9 @@ var import_intervalToDuration = __toESM(require_intervalToDuration(), 1);
 var import_sub = __toESM(require_sub(), 1);
 import { getDateValue, getTextContent as getTextContent2 } from "notion-utils";
 function evalFormula(formula, context) {
-  const _a = context, { endDate } = _a, ctx2 = __objRest(_a, ["endDate"]);
+  const _a = context,
+    { endDate } = _a,
+    ctx2 = __objRest(_a, ["endDate"]);
   switch (formula == null ? void 0 : formula.type) {
     case "symbol":
       return formula.name === "true";
@@ -5216,7 +6440,9 @@ function evalFormula(formula, context) {
       return evalFunctionFormula(formula, ctx2);
     default:
       throw new Error(
-        `invalid or unsupported formula "${formula == null ? void 0 : formula.type}`
+        `invalid or unsupported formula "${
+          formula == null ? void 0 : formula.type
+        }`
       );
   }
 }
@@ -5230,7 +6456,9 @@ function evalFunctionFormula(formula, ctx2) {
     case "equal":
       return evalFormula(args[0], ctx2) == evalFormula(args[1], ctx2);
     case "if":
-      return evalFormula(args[0], ctx2) ? evalFormula(args[1], ctx2) : evalFormula(args[2], ctx2);
+      return evalFormula(args[0], ctx2)
+        ? evalFormula(args[1], ctx2)
+        : evalFormula(args[2], ctx2);
     case "larger":
       return evalFormula(args[0], ctx2) > evalFormula(args[1], ctx2);
     case "largerEq":
@@ -5293,10 +6521,7 @@ function evalFunctionFormula(formula, ctx2) {
     case "multiply":
       return evalFormula(args[0], ctx2) * evalFormula(args[1], ctx2);
     case "pow":
-      return Math.pow(
-        evalFormula(args[0], ctx2),
-        evalFormula(args[1], ctx2)
-      );
+      return Math.pow(evalFormula(args[0], ctx2), evalFormula(args[1], ctx2));
     case "round":
       return Math.round(evalFormula(args[0], ctx2));
     case "sign":
@@ -5316,9 +6541,7 @@ function evalFunctionFormula(formula, ctx2) {
       return values.join("");
     }
     case "contains":
-      return evalFormula(args[0], ctx2).includes(
-        evalFormula(args[1], ctx2)
-      );
+      return evalFormula(args[0], ctx2).includes(evalFormula(args[1], ctx2));
     case "format": {
       const value = evalFormula(args[0], ctx2);
       switch (typeof value) {
@@ -5380,7 +6603,7 @@ function evalFunctionFormula(formula, ctx2) {
       const unit = evalFormula(args[1], ctx2);
       return (0, import_intervalToDuration.default)({
         start: date2,
-        end: date1
+        end: date1,
       })[unit];
     }
     case "dateSubtract": {
@@ -5392,13 +6615,13 @@ function evalFunctionFormula(formula, ctx2) {
     case "day":
       return (0, import_getDay.default)(evalFormula(args[0], ctx2));
     case "end":
-      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: true }));
+      return evalFormula(
+        args[0],
+        __spreadProps(__spreadValues({}, ctx2), { endDate: true })
+      );
     case "formatDate": {
       const date = evalFormula(args[0], ctx2);
-      const formatValue = evalFormula(args[1], ctx2).replace(
-        "dddd",
-        "eeee"
-      );
+      const formatValue = evalFormula(args[1], ctx2).replace("dddd", "eeee");
       return (0, import_format.default)(date, formatValue);
     }
     case "fromTimestamp":
@@ -5412,14 +6635,19 @@ function evalFunctionFormula(formula, ctx2) {
     case "now":
       return new Date();
     case "start":
-      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: false }));
+      return evalFormula(
+        args[0],
+        __spreadProps(__spreadValues({}, ctx2), { endDate: false })
+      );
     case "timestamp":
       return evalFormula(args[0], ctx2).getTime();
     case "year":
       return (0, import_getYear.default)(evalFormula(args[0], ctx2));
     default:
       throw new Error(
-        `invalid or unsupported function formula "${formula == null ? void 0 : formula.type}`
+        `invalid or unsupported function formula "${
+          formula == null ? void 0 : formula.type
+        }`
       );
   }
 }
@@ -5428,9 +6656,15 @@ function evalFunctionFormula(formula, ctx2) {
 var Property = (props) => {
   const { components } = useNotionContext();
   if (components.Property) {
-    return /* @__PURE__ */ React43.createElement(components.Property, __spreadValues({}, props));
+    return /* @__PURE__ */ React43.createElement(
+      components.Property,
+      __spreadValues({}, props)
+    );
   } else {
-    return /* @__PURE__ */ React43.createElement(PropertyImplMemo, __spreadValues({}, props));
+    return /* @__PURE__ */ React43.createElement(
+      PropertyImplMemo,
+      __spreadValues({}, props)
+    );
   }
 };
 var PropertyImpl = (props) => {
@@ -5441,234 +6675,308 @@ var PropertyImpl = (props) => {
     block,
     collection,
     inline = false,
-    linkToTitlePage = true
+    linkToTitlePage = true,
   } = props;
   const renderTextValue = React43.useMemo(
-    () => function TextProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function TextProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderDateValue = React43.useMemo(
-    () => function DateProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function DateProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderRelationValue = React43.useMemo(
-    () => function RelationProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function RelationProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderFormulaValue = React43.useMemo(
-    () => function FormulaProperty() {
-      let content2;
-      try {
-        content2 = evalFormula(schema.formula, {
-          schema: collection == null ? void 0 : collection.schema,
-          properties: block == null ? void 0 : block.properties
-        });
-        if (isNaN(content2)) {
-        }
-        if (content2 instanceof Date) {
-          content2 = (0, import_format2.default)(content2, "MMM d, YYY hh:mm aa");
+    () =>
+      function FormulaProperty() {
+        let content2;
+        try {
+          content2 = evalFormula(schema.formula, {
+            schema: collection == null ? void 0 : collection.schema,
+            properties: block == null ? void 0 : block.properties,
+          });
+          if (isNaN(content2)) {
+          }
+          if (content2 instanceof Date) {
+            content2 = (0, import_format2.default)(
+              content2,
+              "MMM d, YYY hh:mm aa"
+            );
+          }
+        } catch (err) {
+          content2 = null;
         }
-      } catch (err) {
-        content2 = null;
-      }
-      return content2;
-    },
-    [block == null ? void 0 : block.properties, collection == null ? void 0 : collection.schema, schema]
+        return content2;
+      },
+    [
+      block == null ? void 0 : block.properties,
+      collection == null ? void 0 : collection.schema,
+      schema,
+    ]
   );
   const renderTitleValue = React43.useMemo(
-    () => function FormulaTitle() {
-      if (block && linkToTitlePage) {
-        return /* @__PURE__ */ React43.createElement(components.PageLink, {
-          className: cs("notion-page-link"),
-          href: mapPageUrl(block.id)
-        }, /* @__PURE__ */ React43.createElement(PageTitle, {
-          block
-        }));
-      } else {
-        return /* @__PURE__ */ React43.createElement(Text, {
-          value: data,
-          block
-        });
-      }
-    },
+    () =>
+      function FormulaTitle() {
+        if (block && linkToTitlePage) {
+          return /* @__PURE__ */ React43.createElement(
+            components.PageLink,
+            {
+              className: cs("notion-page-link"),
+              href: mapPageUrl(block.id),
+            },
+            /* @__PURE__ */ React43.createElement(PageTitle, {
+              block,
+            })
+          );
+        } else {
+          return /* @__PURE__ */ React43.createElement(Text, {
+            value: data,
+            block,
+          });
+        }
+      },
     [block, components, data, linkToTitlePage, mapPageUrl]
   );
   const renderPersonValue = React43.useMemo(
-    () => function PersonProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        block
-      });
-    },
+    () =>
+      function PersonProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          block,
+        });
+      },
     [block, data]
   );
   const renderFileValue = React43.useMemo(
-    () => function FileProperty() {
-      const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());
-      return files.map((file, i) => /* @__PURE__ */ React43.createElement(components.Link, {
-        key: i,
-        className: "notion-property-file",
-        href: mapImageUrl(file[2], block),
-        target: "_blank",
-        rel: "noreferrer noopener"
-      }, /* @__PURE__ */ React43.createElement(GracefulImage, {
-        alt: file[0],
-        src: mapImageUrl(file[2], block),
-        loading: "lazy"
-      })));
-    },
+    () =>
+      function FileProperty() {
+        const files = data
+          .filter((v) => v.length === 2)
+          .map((f) => f.flat().flat());
+        return files.map((file, i) =>
+          /* @__PURE__ */ React43.createElement(
+            components.Link,
+            {
+              key: i,
+              className: "notion-property-file",
+              href: mapImageUrl(file[2], block),
+              target: "_blank",
+              rel: "noreferrer noopener",
+            },
+            /* @__PURE__ */ React43.createElement(GracefulImage, {
+              alt: file[0],
+              src: mapImageUrl(file[2], block),
+              loading: "lazy",
+            })
+          )
+        );
+      },
     [block, components, data, mapImageUrl]
   );
   const renderCheckboxValue = React43.useMemo(
-    () => function CheckboxProperty() {
-      const isChecked = data && data[0][0] === "Yes";
-      return /* @__PURE__ */ React43.createElement("div", {
-        className: "notion-property-checkbox-container"
-      }, /* @__PURE__ */ React43.createElement(Checkbox, {
-        isChecked,
-        blockId: void 0
-      }), /* @__PURE__ */ React43.createElement("span", {
-        className: "notion-property-checkbox-text"
-      }, schema.name));
-    },
+    () =>
+      function CheckboxProperty() {
+        const isChecked = data && data[0][0] === "Yes";
+        return /* @__PURE__ */ React43.createElement(
+          "div",
+          {
+            className: "notion-property-checkbox-container",
+          },
+          /* @__PURE__ */ React43.createElement(Checkbox, {
+            isChecked,
+            blockId: void 0,
+          }),
+          /* @__PURE__ */ React43.createElement(
+            "span",
+            {
+              className: "notion-property-checkbox-text",
+            },
+            schema.name
+          )
+        );
+      },
     [data, schema]
   );
   const renderUrlValue = React43.useMemo(
-    () => function UrlProperty() {
-      const d = JSON.parse(JSON.stringify(data));
-      if (inline) {
-        try {
-          const url = new URL(d[0][0]);
-          d[0][0] = url.hostname.replace(/^www\./, "");
-        } catch (err) {
+    () =>
+      function UrlProperty() {
+        const d = JSON.parse(JSON.stringify(data));
+        if (inline) {
+          try {
+            const url = new URL(d[0][0]);
+            d[0][0] = url.hostname.replace(/^www\./, "");
+          } catch (err) {}
         }
-      }
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: d,
-        block,
-        inline,
-        linkProps: {
-          target: "_blank",
-          rel: "noreferrer noopener"
-        }
-      });
-    },
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: d,
+          block,
+          inline,
+          linkProps: {
+            target: "_blank",
+            rel: "noreferrer noopener",
+          },
+        });
+      },
     [block, data, inline]
   );
   const renderEmailValue = React43.useMemo(
-    () => function EmailProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        linkProtocol: "mailto",
-        block
-      });
-    },
+    () =>
+      function EmailProperty() {
+        return /* @__PURE__ */ React43.createElement(Text, {
+          value: data,
+          linkProtocol: "mailto",
+          block,
+        });
+      },
     [block, data]
   );
   const renderPhoneNumberValue = React43.useMemo(
-    () => function PhoneNumberProperty() {
-      return /* @__PURE__ */ React43.createElement(Text, {
-        value: data,
-        linkProtocol: "tel",
-        block
-      });
-    },
-    [block, data]
-  );
-  const renderNumberValue = React43.useMemo(
-    () => function NumberProperty() {
-      const value = parseFloat(data[0][0] || "0");
-      let output = "";
-      if (isNaN(value)) {
+    () =>
+      function PhoneNumberProperty() {
         return /* @__PURE__ */ React43.createElement(Text, {
           value: data,
-          block
+          linkProtocol: "tel",
+          block,
         });
-      } else {
-        switch (schema.number_format) {
-          case "number_with_commas":
-            output = (0, import_format_number.default)()(value);
-            break;
-          case "percent":
-            output = (0, import_format_number.default)({ suffix: "%" })(value * 100);
-            break;
-          case "dollar":
-            output = (0, import_format_number.default)({ prefix: "$", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "euro":
-            output = (0, import_format_number.default)({ prefix: "\u20AC", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "pound":
-            output = (0, import_format_number.default)({ prefix: "\xA3", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "yen":
-            output = (0, import_format_number.default)({ prefix: "\xA5", round: 0 })(value);
-            break;
-          case "rupee":
-            output = (0, import_format_number.default)({ prefix: "\u20B9", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          case "won":
-            output = (0, import_format_number.default)({ prefix: "\u20A9", round: 0 })(value);
-            break;
-          case "yuan":
-            output = (0, import_format_number.default)({ prefix: "CN\xA5", round: 2, padRight: 2 })(
-              value
-            );
-            break;
-          default:
-            return /* @__PURE__ */ React43.createElement(Text, {
-              value: data,
-              block
-            });
+      },
+    [block, data]
+  );
+  const renderNumberValue = React43.useMemo(
+    () =>
+      function NumberProperty() {
+        const value = parseFloat(data[0][0] || "0");
+        let output = "";
+        if (isNaN(value)) {
+          return /* @__PURE__ */ React43.createElement(Text, {
+            value: data,
+            block,
+          });
+        } else {
+          switch (schema.number_format) {
+            case "number_with_commas":
+              output = (0, import_format_number.default)()(value);
+              break;
+            case "percent":
+              output = (0, import_format_number.default)({ suffix: "%" })(
+                value * 100
+              );
+              break;
+            case "dollar":
+              output = (0, import_format_number.default)({
+                prefix: "$",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "euro":
+              output = (0, import_format_number.default)({
+                prefix: "\u20AC",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "pound":
+              output = (0, import_format_number.default)({
+                prefix: "\xA3",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "yen":
+              output = (0, import_format_number.default)({
+                prefix: "\xA5",
+                round: 0,
+              })(value);
+              break;
+            case "rupee":
+              output = (0, import_format_number.default)({
+                prefix: "\u20B9",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            case "won":
+              output = (0, import_format_number.default)({
+                prefix: "\u20A9",
+                round: 0,
+              })(value);
+              break;
+            case "yuan":
+              output = (0, import_format_number.default)({
+                prefix: "CN\xA5",
+                round: 2,
+                padRight: 2,
+              })(value);
+              break;
+            default:
+              return /* @__PURE__ */ React43.createElement(Text, {
+                value: data,
+                block,
+              });
+          }
+          return /* @__PURE__ */ React43.createElement(Text, {
+            value: [[output]],
+            block,
+          });
         }
-        return /* @__PURE__ */ React43.createElement(Text, {
-          value: [[output]],
-          block
-        });
-      }
-    },
+      },
     [block, data, schema]
   );
   const renderCreatedTimeValue = React43.useMemo(
-    () => function CreatedTimeProperty() {
-      return (0, import_format2.default)(new Date(block == null ? void 0 : block.created_time), "MMM d, YYY hh:mm aa");
-    },
+    () =>
+      function CreatedTimeProperty() {
+        return (0, import_format2.default)(
+          new Date(block == null ? void 0 : block.created_time),
+          "MMM d, YYY hh:mm aa"
+        );
+      },
     [block == null ? void 0 : block.created_time]
   );
   const renderLastEditedTimeValue = React43.useMemo(
-    () => function LastEditedTimeProperty() {
-      return (0, import_format2.default)(new Date(block == null ? void 0 : block.last_edited_time), "MMM d, YYY hh:mm aa");
-    },
+    () =>
+      function LastEditedTimeProperty() {
+        return (0, import_format2.default)(
+          new Date(block == null ? void 0 : block.last_edited_time),
+          "MMM d, YYY hh:mm aa"
+        );
+      },
     [block == null ? void 0 : block.last_edited_time]
   );
   if (!schema) {
     return null;
   }
   let content = null;
-  if (data || schema.type === "checkbox" || schema.type === "title" || schema.type === "formula" || schema.type === "created_by" || schema.type === "last_edited_by" || schema.type === "created_time" || schema.type === "last_edited_time") {
+  if (
+    data ||
+    schema.type === "checkbox" ||
+    schema.type === "title" ||
+    schema.type === "formula" ||
+    schema.type === "created_by" ||
+    schema.type === "last_edited_by" ||
+    schema.type === "created_time" ||
+    schema.type === "last_edited_time"
+  ) {
     switch (schema.type) {
       case "relation":
         content = components.propertyRelationValue(props, renderRelationValue);
@@ -5684,24 +6992,30 @@ var PropertyImpl = (props) => {
         const values = (data[0][0] || "").split(",");
         content = values.map((value, index) => {
           var _a;
-          const option = (_a = schema.options) == null ? void 0 : _a.find(
-            (option2) => value === option2.value
-          );
+          const option =
+            (_a = schema.options) == null
+              ? void 0
+              : _a.find((option2) => value === option2.value);
           const color = option == null ? void 0 : option.color;
           return components.propertySelectValue(
             __spreadProps(__spreadValues({}, props), {
               key: index,
               value,
               option,
-              color
+              color,
             }),
-            () => /* @__PURE__ */ React43.createElement("div", {
-              key: index,
-              className: cs(
-                `notion-property-${schema.type}-item`,
-                color && `notion-item-${color}`
+            () =>
+              /* @__PURE__ */ React43.createElement(
+                "div",
+                {
+                  key: index,
+                  className: cs(
+                    `notion-property-${schema.type}-item`,
+                    color && `notion-item-${color}`
+                  ),
+                },
+                value
               )
-            }, value)
           );
         });
         break;
@@ -5755,14 +7069,18 @@ var PropertyImpl = (props) => {
       default:
         content = /* @__PURE__ */ React43.createElement(Text, {
           value: data,
-          block
+          block,
         });
         break;
     }
   }
-  return /* @__PURE__ */ React43.createElement("span", {
-    className: `notion-property notion-property-${schema.type}`
-  }, content);
+  return /* @__PURE__ */ React43.createElement(
+    "span",
+    {
+      className: `notion-property notion-property-${schema.type}`,
+    },
+    content
+  );
 };
 var PropertyImplMemo = React43.memo(PropertyImpl);
 
@@ -5771,56 +7089,82 @@ var CollectionRow = ({ block, pageHeader = false, className }) => {
   var _a, _b, _c, _d;
   const { recordMap } = useNotionContext();
   const collectionId = block.parent_id;
-  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
+  const collection =
+    (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
   const schemas = collection == null ? void 0 : collection.schema;
   if (!collection || !schemas) {
     return null;
   }
   let propertyIds = Object.keys(schemas).filter((id) => id !== "title");
   if ((_b = collection.format) == null ? void 0 : _b.property_visibility) {
-    propertyIds = propertyIds.filter(
-      (id) => {
-        var _a2;
-        return ((_a2 = collection.format.property_visibility.find(
+    propertyIds = propertyIds.filter((id) => {
+      var _a2;
+      return (
+        ((_a2 = collection.format.property_visibility.find(
           ({ property }) => property === id
-        )) == null ? void 0 : _a2.visibility) !== "hide";
-      }
-    );
+        )) == null
+          ? void 0
+          : _a2.visibility) !== "hide"
+      );
+    });
   }
-  if ((_c = collection.format) == null ? void 0 : _c.collection_page_properties) {
-    const idToIndex = (_d = collection.format) == null ? void 0 : _d.collection_page_properties.reduce(
-      (acc, p, i) => __spreadProps(__spreadValues({}, acc), {
-        [p.property]: i
-      }),
-      {}
-    );
+  if (
+    (_c = collection.format) == null ? void 0 : _c.collection_page_properties
+  ) {
+    const idToIndex =
+      (_d = collection.format) == null
+        ? void 0
+        : _d.collection_page_properties.reduce(
+            (acc, p, i) =>
+              __spreadProps(__spreadValues({}, acc), {
+                [p.property]: i,
+              }),
+            {}
+          );
     propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b]);
   } else {
     propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name));
   }
-  return /* @__PURE__ */ React44.createElement("div", {
-    className: cs("notion-collection-row", className)
-  }, /* @__PURE__ */ React44.createElement("div", {
-    className: "notion-collection-row-body"
-  }, propertyIds.map((propertyId) => {
-    var _a2;
-    const schema = schemas[propertyId];
-    return /* @__PURE__ */ React44.createElement("div", {
-      className: "notion-collection-row-property",
-      key: propertyId
-    }, /* @__PURE__ */ React44.createElement(CollectionColumnTitle, {
-      schema
-    }), /* @__PURE__ */ React44.createElement("div", {
-      className: "notion-collection-row-value"
-    }, /* @__PURE__ */ React44.createElement(Property, {
-      schema,
-      data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],
-      propertyId,
-      block,
-      collection,
-      pageHeader
-    })));
-  })));
+  return /* @__PURE__ */ React44.createElement(
+    "div",
+    {
+      className: cs("notion-collection-row", className),
+    },
+    /* @__PURE__ */ React44.createElement(
+      "div",
+      {
+        className: "notion-collection-row-body",
+      },
+      propertyIds.map((propertyId) => {
+        var _a2;
+        const schema = schemas[propertyId];
+        return /* @__PURE__ */ React44.createElement(
+          "div",
+          {
+            className: "notion-collection-row-property",
+            key: propertyId,
+          },
+          /* @__PURE__ */ React44.createElement(CollectionColumnTitle, {
+            schema,
+          }),
+          /* @__PURE__ */ React44.createElement(
+            "div",
+            {
+              className: "notion-collection-row-value",
+            },
+            /* @__PURE__ */ React44.createElement(Property, {
+              schema,
+              data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],
+              propertyId,
+              block,
+              collection,
+              pageHeader,
+            })
+          )
+        );
+      })
+    )
+  );
 };
 
 // src/third-party/collection-view.tsx
@@ -5832,38 +7176,52 @@ import * as React48 from "react";
 // src/icons/empty-icon.tsx
 import * as React45 from "react";
 var EmptyIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React45.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 14 14",
-    width: "14"
-  }), /* @__PURE__ */ React45.createElement("path", {
-    d: "M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React45.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 14 14",
+        width: "14",
+      }
+    ),
+    /* @__PURE__ */ React45.createElement("path", {
+      d: "M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z",
+    })
+  );
 };
 
 // src/third-party/collection-card.tsx
 import * as React46 from "react";
 import { getTextContent as getTextContent3 } from "notion-utils";
 var CollectionCard = (_a) => {
-  var _b = _a, {
-    collection,
-    block,
-    cover,
-    coverSize,
-    coverAspect,
-    properties,
-    className
-  } = _b, rest = __objRest(_b, [
-    "collection",
-    "block",
-    "cover",
-    "coverSize",
-    "coverAspect",
-    "properties",
-    "className"
-  ]);
+  var _b = _a,
+    {
+      collection,
+      block,
+      cover,
+      coverSize,
+      coverAspect,
+      properties,
+      className,
+    } = _b,
+    rest = __objRest(_b, [
+      "collection",
+      "block",
+      "cover",
+      "coverSize",
+      "coverAspect",
+      "properties",
+      "className",
+    ]);
   var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
   const ctx2 = useNotionContext();
   const {
@@ -5871,37 +7229,63 @@ var CollectionCard = (_a) => {
     recordMap,
     mapPageUrl,
     mapImageUrl,
-    isLinkCollectionToUrlProperty
+    isLinkCollectionToUrlProperty,
   } = ctx2;
   let coverContent = null;
   const { page_cover_position = 0.5 } = block.format || {};
   const coverPosition = (1 - page_cover_position) * 100;
   if ((cover == null ? void 0 : cover.type) === "page_content") {
-    const contentBlockId = (_a2 = block.content) == null ? void 0 : _a2.find((blockId) => {
-      var _a3;
-      const block2 = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;
-      if ((block2 == null ? void 0 : block2.type) === "image") {
-        return true;
-      }
-    });
+    const contentBlockId =
+      (_a2 = block.content) == null
+        ? void 0
+        : _a2.find((blockId) => {
+            var _a3;
+            const block2 =
+              (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;
+            if ((block2 == null ? void 0 : block2.type) === "image") {
+              return true;
+            }
+          });
     if (contentBlockId) {
-      const contentBlock = (_b2 = recordMap.block[contentBlockId]) == null ? void 0 : _b2.value;
-      const source = (_g = (_e = (_d = (_c = contentBlock.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]) != null ? _g : (_f = contentBlock.format) == null ? void 0 : _f.display_source;
+      const contentBlock =
+        (_b2 = recordMap.block[contentBlockId]) == null ? void 0 : _b2.value;
+      const source =
+        (_g =
+          (_e =
+            (_d =
+              (_c = contentBlock.properties) == null ? void 0 : _c.source) ==
+            null
+              ? void 0
+              : _d[0]) == null
+            ? void 0
+            : _e[0]) != null
+          ? _g
+          : (_f = contentBlock.format) == null
+          ? void 0
+          : _f.display_source;
       if (source) {
         const src = mapImageUrl(source, contentBlock);
-        const caption = (_j = (_i = (_h = contentBlock.properties) == null ? void 0 : _h.caption) == null ? void 0 : _i[0]) == null ? void 0 : _j[0];
+        const caption =
+          (_j =
+            (_i =
+              (_h = contentBlock.properties) == null ? void 0 : _h.caption) ==
+            null
+              ? void 0
+              : _i[0]) == null
+            ? void 0
+            : _j[0];
         coverContent = /* @__PURE__ */ React46.createElement(LazyImage, {
           src,
           alt: caption || "notion image",
           style: {
-            objectFit: coverAspect
-          }
+            objectFit: coverAspect,
+          },
         });
       }
     }
     if (!coverContent) {
       coverContent = /* @__PURE__ */ React46.createElement("div", {
-        className: "notion-collection-card-cover-empty"
+        className: "notion-collection-card-cover-empty",
       });
     }
   } else if ((cover == null ? void 0 : cover.type) === "page_cover") {
@@ -5910,11 +7294,13 @@ var CollectionCard = (_a) => {
       const coverPosition2 = (1 - page_cover_position) * 100;
       coverContent = /* @__PURE__ */ React46.createElement(LazyImage, {
         src: mapImageUrl(page_cover, block),
-        alt: getTextContent3((_k = block.properties) == null ? void 0 : _k.title),
+        alt: getTextContent3(
+          (_k = block.properties) == null ? void 0 : _k.title
+        ),
         style: {
           objectFit: coverAspect,
-          objectPosition: `center ${coverPosition2}%`
-        }
+          objectPosition: `center ${coverPosition2}%`,
+        },
       });
     }
   } else if ((cover == null ? void 0 : cover.type) === "property") {
@@ -5923,182 +7309,324 @@ var CollectionCard = (_a) => {
     const data = (_l = block.properties) == null ? void 0 : _l[property];
     if (schema && data) {
       if (schema.type === "file") {
-        const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());
+        const files = data
+          .filter((v) => v.length === 2)
+          .map((f) => f.flat().flat());
         const file = files[0];
         if (file) {
-          coverContent = /* @__PURE__ */ React46.createElement("span", {
-            className: `notion-property-${schema.type}`
-          }, /* @__PURE__ */ React46.createElement(LazyImage, {
-            alt: file[0],
-            src: mapImageUrl(file[2], block),
-            style: {
-              objectFit: coverAspect,
-              objectPosition: `center ${coverPosition}%`
-            }
-          }));
+          coverContent = /* @__PURE__ */ React46.createElement(
+            "span",
+            {
+              className: `notion-property-${schema.type}`,
+            },
+            /* @__PURE__ */ React46.createElement(LazyImage, {
+              alt: file[0],
+              src: mapImageUrl(file[2], block),
+              style: {
+                objectFit: coverAspect,
+                objectPosition: `center ${coverPosition}%`,
+              },
+            })
+          );
         }
       } else {
         coverContent = /* @__PURE__ */ React46.createElement(Property, {
           propertyId: property,
           schema,
-          data
+          data,
         });
       }
     }
   }
   let linkProperties = [];
   if (isLinkCollectionToUrlProperty) {
-    linkProperties = (_m = properties == null ? void 0 : properties.filter(
-      (p) => p.visible && p.property !== "title" && collection.schema[p.property]
-    ).filter((p) => {
-      if (!block.properties)
-        return false;
-      const schema = collection.schema[p.property];
-      return schema.type == "url";
-    }).map((p) => {
-      return block.properties[p.property];
-    })) == null ? void 0 : _m.filter((p) => p && p.length > 0 && p[0] != void 0);
+    linkProperties =
+      (_m =
+        properties == null
+          ? void 0
+          : properties
+              .filter(
+                (p) =>
+                  p.visible &&
+                  p.property !== "title" &&
+                  collection.schema[p.property]
+              )
+              .filter((p) => {
+                if (!block.properties) return false;
+                const schema = collection.schema[p.property];
+                return schema.type == "url";
+              })
+              .map((p) => {
+                return block.properties[p.property];
+              })) == null
+        ? void 0
+        : _m.filter((p) => p && p.length > 0 && p[0] != void 0);
   }
   let url = null;
-  if (linkProperties && linkProperties.length > 0 && linkProperties[0].length > 0 && linkProperties[0][0].length > 0) {
+  if (
+    linkProperties &&
+    linkProperties.length > 0 &&
+    linkProperties[0].length > 0 &&
+    linkProperties[0][0].length > 0
+  ) {
     url = linkProperties[0][0][0];
   }
-  const innerCard = /* @__PURE__ */ React46.createElement(React46.Fragment, null, (coverContent || (cover == null ? void 0 : cover.type) !== "none") && /* @__PURE__ */ React46.createElement("div", {
-    className: "notion-collection-card-cover"
-  }, coverContent), /* @__PURE__ */ React46.createElement("div", {
-    className: "notion-collection-card-body"
-  }, /* @__PURE__ */ React46.createElement("div", {
-    className: "notion-collection-card-property"
-  }, /* @__PURE__ */ React46.createElement(Property, {
-    schema: collection.schema.title,
-    data: (_n = block == null ? void 0 : block.properties) == null ? void 0 : _n.title,
-    block,
-    collection
-  })), properties == null ? void 0 : properties.filter(
-    (p) => p.visible && p.property !== "title" && collection.schema[p.property]
-  ).map((p) => {
-    if (!block.properties)
-      return null;
-    const schema = collection.schema[p.property];
-    const data = block.properties[p.property];
-    return /* @__PURE__ */ React46.createElement("div", {
-      className: "notion-collection-card-property",
-      key: p.property
-    }, /* @__PURE__ */ React46.createElement(Property, {
-      schema,
-      data,
-      block,
-      collection,
-      inline: true
-    }));
-  })));
-  return /* @__PURE__ */ React46.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-    components: __spreadProps(__spreadValues({}, ctx2.components), {
-      Link: (props) => {
-        var _a3, _b3, _c2;
-        return /* @__PURE__ */ React46.createElement("form", {
-          action: props.href,
-          target: "_blank"
-        }, /* @__PURE__ */ React46.createElement("input", {
-          type: "submit",
-          value: (_c2 = (_b3 = (_a3 = props == null ? void 0 : props.children) == null ? void 0 : _a3.props) == null ? void 0 : _b3.children) != null ? _c2 : props.href,
-          className: "nested-form-link notion-link"
-        }));
-      },
-      PageLink: dummyLink
-    })
-  }), isLinkCollectionToUrlProperty && url ? /* @__PURE__ */ React46.createElement(components.Link, __spreadValues({
-    className: cs(
-      "notion-collection-card",
-      `notion-collection-card-size-${coverSize}`,
-      className
-    ),
-    href: url
-  }, rest), innerCard) : /* @__PURE__ */ React46.createElement(components.PageLink, __spreadValues({
-    className: cs(
-      "notion-collection-card",
-      `notion-collection-card-size-${coverSize}`,
-      className
-    ),
-    href: mapPageUrl(block.id)
-  }, rest), innerCard));
+  const innerCard = /* @__PURE__ */ React46.createElement(
+    React46.Fragment,
+    null,
+    (coverContent || (cover == null ? void 0 : cover.type) !== "none") &&
+      /* @__PURE__ */ React46.createElement(
+        "div",
+        {
+          className: "notion-collection-card-cover",
+        },
+        coverContent
+      ),
+    /* @__PURE__ */ React46.createElement(
+      "div",
+      {
+        className: "notion-collection-card-body",
+      },
+      /* @__PURE__ */ React46.createElement(
+        "div",
+        {
+          className: "notion-collection-card-property",
+        },
+        /* @__PURE__ */ React46.createElement(Property, {
+          schema: collection.schema.title,
+          data:
+            (_n = block == null ? void 0 : block.properties) == null
+              ? void 0
+              : _n.title,
+          block,
+          collection,
+        })
+      ),
+      properties == null
+        ? void 0
+        : properties
+            .filter(
+              (p) =>
+                p.visible &&
+                p.property !== "title" &&
+                collection.schema[p.property]
+            )
+            .map((p) => {
+              if (!block.properties) return null;
+              const schema = collection.schema[p.property];
+              const data = block.properties[p.property];
+              return /* @__PURE__ */ React46.createElement(
+                "div",
+                {
+                  className: "notion-collection-card-property",
+                  key: p.property,
+                },
+                /* @__PURE__ */ React46.createElement(Property, {
+                  schema,
+                  data,
+                  block,
+                  collection,
+                  inline: true,
+                })
+              );
+            })
+    )
+  );
+  return /* @__PURE__ */ React46.createElement(
+    NotionContextProvider,
+    __spreadProps(__spreadValues({}, ctx2), {
+      components: __spreadProps(__spreadValues({}, ctx2.components), {
+        Link: (props) => {
+          var _a3, _b3, _c2;
+          return /* @__PURE__ */ React46.createElement(
+            "form",
+            {
+              action: props.href,
+              target: "_blank",
+            },
+            /* @__PURE__ */ React46.createElement("input", {
+              type: "submit",
+              value:
+                (_c2 =
+                  (_b3 =
+                    (_a3 = props == null ? void 0 : props.children) == null
+                      ? void 0
+                      : _a3.props) == null
+                    ? void 0
+                    : _b3.children) != null
+                  ? _c2
+                  : props.href,
+              className: "nested-form-link notion-link",
+            })
+          );
+        },
+        PageLink: dummyLink,
+      }),
+    }),
+    isLinkCollectionToUrlProperty && url
+      ? /* @__PURE__ */ React46.createElement(
+          components.Link,
+          __spreadValues(
+            {
+              className: cs(
+                "notion-collection-card",
+                `notion-collection-card-size-${coverSize}`,
+                className
+              ),
+              href: url,
+            },
+            rest
+          ),
+          innerCard
+        )
+      : /* @__PURE__ */ React46.createElement(
+          components.PageLink,
+          __spreadValues(
+            {
+              className: cs(
+                "notion-collection-card",
+                `notion-collection-card-size-${coverSize}`,
+                className
+              ),
+              href: mapPageUrl(block.id),
+            },
+            rest
+          ),
+          innerCard
+        )
+  );
 };
 
 // src/third-party/collection-group.tsx
 import * as React47 from "react";
 var CollectionGroup = (_a) => {
-  var _b = _a, {
-    collectionViewComponent: CollectionViewComponent,
-    collection,
-    collectionGroup,
-    schema,
-    value,
-    hidden,
-    summaryProps,
-    detailsProps
-  } = _b, rest = __objRest(_b, [
-    "collectionViewComponent",
-    "collection",
-    "collectionGroup",
-    "schema",
-    "value",
-    "hidden",
-    "summaryProps",
-    "detailsProps"
-  ]);
-  if (hidden)
-    return null;
-  return /* @__PURE__ */ React47.createElement("details", __spreadValues({
-    open: true,
-    className: "notion-collection-group"
-  }, detailsProps), /* @__PURE__ */ React47.createElement("summary", __spreadValues({
-    className: "notion-collection-group-title"
-  }, summaryProps), /* @__PURE__ */ React47.createElement("div", null, /* @__PURE__ */ React47.createElement(Property, {
-    schema,
-    data: [[value]],
-    collection
-  }), /* @__PURE__ */ React47.createElement("span", {
-    className: "notion-board-th-count"
-  }, collectionGroup == null ? void 0 : collectionGroup.total))), /* @__PURE__ */ React47.createElement(CollectionViewComponent, __spreadValues({
-    collection,
-    collectionGroup
-  }, rest)));
+  var _b = _a,
+    {
+      collectionViewComponent: CollectionViewComponent,
+      collection,
+      collectionGroup,
+      schema,
+      value,
+      hidden,
+      summaryProps,
+      detailsProps,
+    } = _b,
+    rest = __objRest(_b, [
+      "collectionViewComponent",
+      "collection",
+      "collectionGroup",
+      "schema",
+      "value",
+      "hidden",
+      "summaryProps",
+      "detailsProps",
+    ]);
+  if (hidden) return null;
+  return /* @__PURE__ */ React47.createElement(
+    "details",
+    __spreadValues(
+      {
+        open: true,
+        className: "notion-collection-group",
+      },
+      detailsProps
+    ),
+    /* @__PURE__ */ React47.createElement(
+      "summary",
+      __spreadValues(
+        {
+          className: "notion-collection-group-title",
+        },
+        summaryProps
+      ),
+      /* @__PURE__ */ React47.createElement(
+        "div",
+        null,
+        /* @__PURE__ */ React47.createElement(Property, {
+          schema,
+          data: [[value]],
+          collection,
+        }),
+        /* @__PURE__ */ React47.createElement(
+          "span",
+          {
+            className: "notion-board-th-count",
+          },
+          collectionGroup == null ? void 0 : collectionGroup.total
+        )
+      )
+    ),
+    /* @__PURE__ */ React47.createElement(
+      CollectionViewComponent,
+      __spreadValues(
+        {
+          collection,
+          collectionGroup,
+        },
+        rest
+      )
+    )
+  );
 };
 
 // src/third-party/collection-utils.ts
 var import_format3 = __toESM(require_format(), 1);
-function getCollectionGroups(collection, collectionView, collectionData, ...rest) {
+function getCollectionGroups(
+  collection,
+  collectionView,
+  collectionData,
+  ...rest
+) {
   var _a;
-  const elems = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_groups) || [];
-  return elems == null ? void 0 : elems.map(({ property, hidden, value: { value, type } }) => {
-    var _a2, _b;
-    const isUncategorizedValue = typeof value === "undefined";
-    const isDateValue = value == null ? void 0 : value.range;
-    const queryLabel = isUncategorizedValue ? "uncategorized" : isDateValue ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) || ((_b = value.range) == null ? void 0 : _b.end_date) : (value == null ? void 0 : value.value) || value;
-    const collectionGroup = collectionData[`results:${type}:${queryLabel}`];
-    let queryValue = !isUncategorizedValue && (isDateValue || (value == null ? void 0 : value.value) || value);
-    let schema = collection.schema[property];
-    if (type === "checkbox" && value) {
-      queryValue = "Yes";
-    }
-    if (isDateValue) {
-      schema = {
-        type: "text",
-        name: "text"
-      };
-      queryValue = (0, import_format3.default)(new Date(queryLabel), "MMM d, YYY hh:mm aa");
-    }
-    return __spreadValues({
-      collectionGroup,
-      schema,
-      value: queryValue || "No description",
-      hidden,
-      collection,
-      collectionView,
-      collectionData,
-      blockIds: collectionGroup == null ? void 0 : collectionGroup.blockIds
-    }, rest);
-  });
+  const elems =
+    ((_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_groups) || [];
+  return elems == null
+    ? void 0
+    : elems.map(({ property, hidden, value: { value, type } }) => {
+        var _a2, _b;
+        const isUncategorizedValue = typeof value === "undefined";
+        const isDateValue = value == null ? void 0 : value.range;
+        const queryLabel = isUncategorizedValue
+          ? "uncategorized"
+          : isDateValue
+          ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) ||
+            ((_b = value.range) == null ? void 0 : _b.end_date)
+          : (value == null ? void 0 : value.value) || value;
+        const collectionGroup = collectionData[`results:${type}:${queryLabel}`];
+        let queryValue =
+          !isUncategorizedValue &&
+          (isDateValue || (value == null ? void 0 : value.value) || value);
+        let schema = collection.schema[property];
+        if (type === "checkbox" && value) {
+          queryValue = "Yes";
+        }
+        if (isDateValue) {
+          schema = {
+            type: "text",
+            name: "text",
+          };
+          queryValue = (0, import_format3.default)(
+            new Date(queryLabel),
+            "MMM d, YYY hh:mm aa"
+          );
+        }
+        return __spreadValues(
+          {
+            collectionGroup,
+            schema,
+            value: queryValue || "No description",
+            hidden,
+            collection,
+            collectionView,
+            collectionData,
+            blockIds:
+              collectionGroup == null ? void 0 : collectionGroup.blockIds,
+          },
+          rest
+        );
+      });
 }
 
 // src/third-party/collection-view-board.tsx
@@ -6106,10 +7634,13 @@ var CollectionViewBoard = ({
   collection,
   collectionView,
   collectionData,
-  padding
+  padding,
 }) => {
   var _a;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
@@ -6117,24 +7648,42 @@ var CollectionViewBoard = ({
       collectionData,
       padding
     );
-    return collectionGroups.map((group, index) => /* @__PURE__ */ React48.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key: index
-    }, group), {
-      summaryProps: {
-        style: {
-          paddingLeft: padding
-        }
-      },
-      collectionViewComponent: (props) => /* @__PURE__ */ React48.createElement(Board, __spreadValues({
-        padding
-      }, props))
-    })));
+    return collectionGroups.map((group, index) =>
+      /* @__PURE__ */ React48.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key: index,
+            },
+            group
+          ),
+          {
+            summaryProps: {
+              style: {
+                paddingLeft: padding,
+              },
+            },
+            collectionViewComponent: (props) =>
+              /* @__PURE__ */ React48.createElement(
+                Board,
+                __spreadValues(
+                  {
+                    padding,
+                  },
+                  props
+                )
+              ),
+          }
+        )
+      )
+    );
   }
   return /* @__PURE__ */ React48.createElement(Board, {
     padding,
     collectionView,
     collection,
-    collectionData
+    collectionData,
   });
 };
 function Board({ collectionView, collectionData, collection, padding }) {
@@ -6143,87 +7692,162 @@ function Board({ collectionView, collectionData, collection, padding }) {
   const {
     board_cover = { type: "none" },
     board_cover_size = "medium",
-    board_cover_aspect = "cover"
+    board_cover_aspect = "cover",
   } = (collectionView == null ? void 0 : collectionView.format) || {};
-  const boardGroups = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.board_columns) || ((_b = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _b.board_groups2) || [];
+  const boardGroups =
+    ((_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.board_columns) ||
+    ((_b = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _b.board_groups2) ||
+    [];
   const boardStyle = React48.useMemo(
     () => ({
-      paddingLeft: padding
+      paddingLeft: padding,
     }),
     [padding]
   );
-  return /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board"
-  }, /* @__PURE__ */ React48.createElement("div", {
-    className: cs(
-      "notion-board-view",
-      `notion-board-view-size-${board_cover_size}`
-    ),
-    style: boardStyle
-  }, /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-header"
-  }, /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-header-inner"
-  }, boardGroups.map((p, index) => {
-    var _a2, _b2, _c;
-    if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {
-      return null;
-    }
-    const group = collectionData.board_columns.results[index];
-    const schema = collection.schema[p.property];
-    if (!group || !schema || p.hidden) {
-      return null;
-    }
-    return /* @__PURE__ */ React48.createElement("div", {
-      className: "notion-board-th",
-      key: index
-    }, /* @__PURE__ */ React48.createElement("div", {
-      className: "notion-board-th-body"
-    }, ((_b2 = group.value) == null ? void 0 : _b2.value) ? /* @__PURE__ */ React48.createElement(Property, {
-      schema,
-      data: [[(_c = group.value) == null ? void 0 : _c.value]],
-      collection
-    }) : /* @__PURE__ */ React48.createElement("span", null, /* @__PURE__ */ React48.createElement(EmptyIcon, {
-      className: "notion-board-th-empty"
-    }), " No Select"), /* @__PURE__ */ React48.createElement("span", {
-      className: "notion-board-th-count"
-    }, group.total)));
-  }))), /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-header-placeholder"
-  }), /* @__PURE__ */ React48.createElement("div", {
-    className: "notion-board-body"
-  }, boardGroups.map((p, index) => {
-    var _a2, _b2, _c, _d, _e;
-    const boardResults = (_a2 = collectionData.board_columns) == null ? void 0 : _a2.results;
-    if (!boardResults)
-      return null;
-    if (!((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.type))
-      return null;
-    const schema = collection.schema[p.property];
-    const group = collectionData[`results:${(_c = p == null ? void 0 : p.value) == null ? void 0 : _c.type}:${((_d = p == null ? void 0 : p.value) == null ? void 0 : _d.value) || "uncategorized"}`];
-    if (!group || !schema || p.hidden) {
-      return null;
-    }
-    return /* @__PURE__ */ React48.createElement("div", {
-      className: "notion-board-group",
-      key: index
-    }, (_e = group.blockIds) == null ? void 0 : _e.map((blockId) => {
-      var _a3, _b3;
-      const block = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;
-      if (!block)
-        return null;
-      return /* @__PURE__ */ React48.createElement(CollectionCard, {
-        className: "notion-board-group-card",
-        collection,
-        block,
-        cover: board_cover,
-        coverSize: board_cover_size,
-        coverAspect: board_cover_aspect,
-        properties: (_b3 = collectionView.format) == null ? void 0 : _b3.board_properties,
-        key: blockId
-      });
-    }));
-  }))));
+  return /* @__PURE__ */ React48.createElement(
+    "div",
+    {
+      className: "notion-board",
+    },
+    /* @__PURE__ */ React48.createElement(
+      "div",
+      {
+        className: cs(
+          "notion-board-view",
+          `notion-board-view-size-${board_cover_size}`
+        ),
+        style: boardStyle,
+      },
+      /* @__PURE__ */ React48.createElement(
+        "div",
+        {
+          className: "notion-board-header",
+        },
+        /* @__PURE__ */ React48.createElement(
+          "div",
+          {
+            className: "notion-board-header-inner",
+          },
+          boardGroups.map((p, index) => {
+            var _a2, _b2, _c;
+            if (
+              !((_a2 = collectionData.board_columns) == null
+                ? void 0
+                : _a2.results)
+            ) {
+              return null;
+            }
+            const group = collectionData.board_columns.results[index];
+            const schema = collection.schema[p.property];
+            if (!group || !schema || p.hidden) {
+              return null;
+            }
+            return /* @__PURE__ */ React48.createElement(
+              "div",
+              {
+                className: "notion-board-th",
+                key: index,
+              },
+              /* @__PURE__ */ React48.createElement(
+                "div",
+                {
+                  className: "notion-board-th-body",
+                },
+                ((_b2 = group.value) == null ? void 0 : _b2.value)
+                  ? /* @__PURE__ */ React48.createElement(Property, {
+                      schema,
+                      data: [[(_c = group.value) == null ? void 0 : _c.value]],
+                      collection,
+                    })
+                  : /* @__PURE__ */ React48.createElement(
+                      "span",
+                      null,
+                      /* @__PURE__ */ React48.createElement(EmptyIcon, {
+                        className: "notion-board-th-empty",
+                      }),
+                      " No Select"
+                    ),
+                /* @__PURE__ */ React48.createElement(
+                  "span",
+                  {
+                    className: "notion-board-th-count",
+                  },
+                  group.total
+                )
+              )
+            );
+          })
+        )
+      ),
+      /* @__PURE__ */ React48.createElement("div", {
+        className: "notion-board-header-placeholder",
+      }),
+      /* @__PURE__ */ React48.createElement(
+        "div",
+        {
+          className: "notion-board-body",
+        },
+        boardGroups.map((p, index) => {
+          var _a2, _b2, _c, _d, _e;
+          const boardResults =
+            (_a2 = collectionData.board_columns) == null ? void 0 : _a2.results;
+          if (!boardResults) return null;
+          if (
+            !((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.type)
+          )
+            return null;
+          const schema = collection.schema[p.property];
+          const group =
+            collectionData[
+              `results:${
+                (_c = p == null ? void 0 : p.value) == null ? void 0 : _c.type
+              }:${
+                ((_d = p == null ? void 0 : p.value) == null
+                  ? void 0
+                  : _d.value) || "uncategorized"
+              }`
+            ];
+          if (!group || !schema || p.hidden) {
+            return null;
+          }
+          return /* @__PURE__ */ React48.createElement(
+            "div",
+            {
+              className: "notion-board-group",
+              key: index,
+            },
+            (_e = group.blockIds) == null
+              ? void 0
+              : _e.map((blockId) => {
+                  var _a3, _b3;
+                  const block =
+                    (_a3 = recordMap.block[blockId]) == null
+                      ? void 0
+                      : _a3.value;
+                  if (!block) return null;
+                  return /* @__PURE__ */ React48.createElement(CollectionCard, {
+                    className: "notion-board-group-card",
+                    collection,
+                    block,
+                    cover: board_cover,
+                    coverSize: board_cover_size,
+                    coverAspect: board_cover_aspect,
+                    properties:
+                      (_b3 = collectionView.format) == null
+                        ? void 0
+                        : _b3.board_properties,
+                    key: blockId,
+                  });
+                })
+          );
+        })
+      )
+    )
+  );
 }
 
 // src/third-party/collection-view-gallery.tsx
@@ -6232,27 +7856,52 @@ var defaultBlockIds = [];
 var CollectionViewGallery = ({
   collection,
   collectionView,
-  collectionData
+  collectionData,
 }) => {
   var _a, _b, _c, _d, _e;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
       collectionView,
       collectionData
     );
-    return collectionGroups.map((group, index) => /* @__PURE__ */ React49.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key: index
-    }, group), {
-      collectionViewComponent: Gallery
-    })));
+    return collectionGroups.map((group, index) =>
+      /* @__PURE__ */ React49.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key: index,
+            },
+            group
+          ),
+          {
+            collectionViewComponent: Gallery,
+          }
+        )
+      )
+    );
   }
-  const blockIds = ((_e = (_d = (_b = collectionData["collection_group_results"]) == null ? void 0 : _b.blockIds) != null ? _d : (_c = collectionData["results:relation:uncategorized"]) == null ? void 0 : _c.blockIds) != null ? _e : collectionData.blockIds) || defaultBlockIds;
+  const blockIds =
+    ((_e =
+      (_d =
+        (_b = collectionData["collection_group_results"]) == null
+          ? void 0
+          : _b.blockIds) != null
+        ? _d
+        : (_c = collectionData["results:relation:uncategorized"]) == null
+        ? void 0
+        : _c.blockIds) != null
+      ? _e
+      : collectionData.blockIds) || defaultBlockIds;
   return /* @__PURE__ */ React49.createElement(Gallery, {
     collectionView,
     collection,
-    blockIds
+    blockIds,
   });
 };
 function Gallery({ blockIds, collectionView, collection }) {
@@ -6260,109 +7909,187 @@ function Gallery({ blockIds, collectionView, collection }) {
   const {
     gallery_cover = { type: "none" },
     gallery_cover_size = "medium",
-    gallery_cover_aspect = "cover"
+    gallery_cover_aspect = "cover",
   } = collectionView.format || {};
-  return /* @__PURE__ */ React49.createElement("div", {
-    className: "notion-gallery"
-  }, /* @__PURE__ */ React49.createElement("div", {
-    className: "notion-gallery-view"
-  }, /* @__PURE__ */ React49.createElement("div", {
-    className: cs(
-      "notion-gallery-grid",
-      `notion-gallery-grid-size-${gallery_cover_size}`
+  return /* @__PURE__ */ React49.createElement(
+    "div",
+    {
+      className: "notion-gallery",
+    },
+    /* @__PURE__ */ React49.createElement(
+      "div",
+      {
+        className: "notion-gallery-view",
+      },
+      /* @__PURE__ */ React49.createElement(
+        "div",
+        {
+          className: cs(
+            "notion-gallery-grid",
+            `notion-gallery-grid-size-${gallery_cover_size}`
+          ),
+        },
+        blockIds == null
+          ? void 0
+          : blockIds.map((blockId) => {
+              var _a, _b;
+              const block =
+                (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+              if (!block) return null;
+              return /* @__PURE__ */ React49.createElement(CollectionCard, {
+                collection,
+                block,
+                cover: gallery_cover,
+                coverSize: gallery_cover_size,
+                coverAspect: gallery_cover_aspect,
+                properties:
+                  (_b = collectionView.format) == null
+                    ? void 0
+                    : _b.gallery_properties,
+                key: blockId,
+              });
+            })
+      )
     )
-  }, blockIds == null ? void 0 : blockIds.map((blockId) => {
-    var _a, _b;
-    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-    if (!block)
-      return null;
-    return /* @__PURE__ */ React49.createElement(CollectionCard, {
-      collection,
-      block,
-      cover: gallery_cover,
-      coverSize: gallery_cover_size,
-      coverAspect: gallery_cover_aspect,
-      properties: (_b = collectionView.format) == null ? void 0 : _b.gallery_properties,
-      key: blockId
-    });
-  }))));
+  );
 }
 
 // src/third-party/collection-view-list.tsx
 import * as React50 from "react";
 var defaultBlockIds2 = [];
-var CollectionViewList = ({
-  collection,
-  collectionView,
-  collectionData
-}) => {
+var CollectionViewList = ({ collection, collectionView, collectionData }) => {
   var _a, _b, _c;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
       collectionView,
       collectionData
     );
-    return collectionGroups.map((group, key) => /* @__PURE__ */ React50.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key
-    }, group), {
-      collectionViewComponent: List
-    })));
+    return collectionGroups.map((group, key) =>
+      /* @__PURE__ */ React50.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key,
+            },
+            group
+          ),
+          {
+            collectionViewComponent: List,
+          }
+        )
+      )
+    );
   }
-  const blockIds = ((_c = (_b = collectionData["collection_group_results"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds2;
+  const blockIds =
+    ((_c =
+      (_b = collectionData["collection_group_results"]) == null
+        ? void 0
+        : _b.blockIds) != null
+      ? _c
+      : collectionData.blockIds) || defaultBlockIds2;
   return /* @__PURE__ */ React50.createElement(List, {
     blockIds,
     collection,
-    collectionView
+    collectionView,
   });
 };
 function List({ blockIds, collection, collectionView }) {
   const { components, recordMap, mapPageUrl } = useNotionContext();
-  return /* @__PURE__ */ React50.createElement("div", {
-    className: "notion-list-collection"
-  }, /* @__PURE__ */ React50.createElement("div", {
-    className: "notion-list-view"
-  }, /* @__PURE__ */ React50.createElement("div", {
-    className: "notion-list-body"
-  }, blockIds == null ? void 0 : blockIds.map((blockId) => {
-    var _a, _b, _c, _d;
-    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-    if (!block)
-      return null;
-    const titleSchema = collection.schema.title;
-    const titleData = (_b = block == null ? void 0 : block.properties) == null ? void 0 : _b.title;
-    return /* @__PURE__ */ React50.createElement(components.PageLink, {
-      className: "notion-list-item notion-page-link",
-      href: mapPageUrl(block.id),
-      key: blockId
-    }, /* @__PURE__ */ React50.createElement("div", {
-      className: "notion-list-item-title"
-    }, /* @__PURE__ */ React50.createElement(Property, {
-      schema: titleSchema,
-      data: titleData,
-      block,
-      collection
-    })), /* @__PURE__ */ React50.createElement("div", {
-      className: "notion-list-item-body"
-    }, (_d = (_c = collectionView.format) == null ? void 0 : _c.list_properties) == null ? void 0 : _d.filter((p) => p.visible).map((p) => {
-      var _a2;
-      const schema = collection.schema[p.property];
-      const data = block && ((_a2 = block.properties) == null ? void 0 : _a2[p.property]);
-      if (!schema) {
-        return null;
-      }
-      return /* @__PURE__ */ React50.createElement("div", {
-        className: "notion-list-item-property",
-        key: p.property
-      }, /* @__PURE__ */ React50.createElement(Property, {
-        schema,
-        data,
-        block,
-        collection
-      }));
-    })));
-  }))));
+  return /* @__PURE__ */ React50.createElement(
+    "div",
+    {
+      className: "notion-list-collection",
+    },
+    /* @__PURE__ */ React50.createElement(
+      "div",
+      {
+        className: "notion-list-view",
+      },
+      /* @__PURE__ */ React50.createElement(
+        "div",
+        {
+          className: "notion-list-body",
+        },
+        blockIds == null
+          ? void 0
+          : blockIds.map((blockId) => {
+              var _a, _b, _c, _d;
+              const block =
+                (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+              if (!block) return null;
+              const titleSchema = collection.schema.title;
+              const titleData =
+                (_b = block == null ? void 0 : block.properties) == null
+                  ? void 0
+                  : _b.title;
+              return /* @__PURE__ */ React50.createElement(
+                components.PageLink,
+                {
+                  className: "notion-list-item notion-page-link",
+                  href: mapPageUrl(block.id),
+                  key: blockId,
+                },
+                /* @__PURE__ */ React50.createElement(
+                  "div",
+                  {
+                    className: "notion-list-item-title",
+                  },
+                  /* @__PURE__ */ React50.createElement(Property, {
+                    schema: titleSchema,
+                    data: titleData,
+                    block,
+                    collection,
+                  })
+                ),
+                /* @__PURE__ */ React50.createElement(
+                  "div",
+                  {
+                    className: "notion-list-item-body",
+                  },
+                  (_d =
+                    (_c = collectionView.format) == null
+                      ? void 0
+                      : _c.list_properties) == null
+                    ? void 0
+                    : _d
+                        .filter((p) => p.visible)
+                        .map((p) => {
+                          var _a2;
+                          const schema = collection.schema[p.property];
+                          const data =
+                            block &&
+                            ((_a2 = block.properties) == null
+                              ? void 0
+                              : _a2[p.property]);
+                          if (!schema) {
+                            return null;
+                          }
+                          return /* @__PURE__ */ React50.createElement(
+                            "div",
+                            {
+                              className: "notion-list-item-property",
+                              key: p.property,
+                            },
+                            /* @__PURE__ */ React50.createElement(Property, {
+                              schema,
+                              data,
+                              block,
+                              collection,
+                            })
+                          );
+                        })
+                )
+              );
+            })
+      )
+    )
+  );
 }
 
 // src/third-party/collection-view-table.tsx
@@ -6373,10 +8100,13 @@ var CollectionViewTable = ({
   collectionView,
   collectionData,
   padding,
-  width
+  width,
 }) => {
   var _a, _b, _c;
-  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;
+  const isGroupedCollection =
+    (_a = collectionView == null ? void 0 : collectionView.format) == null
+      ? void 0
+      : _a.collection_group_by;
   if (isGroupedCollection) {
     const collectionGroups = getCollectionGroups(
       collection,
@@ -6385,28 +8115,49 @@ var CollectionViewTable = ({
       padding,
       width
     );
-    return collectionGroups.map((group, index) => /* @__PURE__ */ React51.createElement(CollectionGroup, __spreadProps(__spreadValues({
-      key: index
-    }, group), {
-      collectionViewComponent: (props) => /* @__PURE__ */ React51.createElement(Table, __spreadProps(__spreadValues({}, props), {
-        padding,
-        width
-      })),
-      summaryProps: {
-        style: {
-          paddingLeft: padding,
-          paddingRight: padding
-        }
-      }
-    })));
+    return collectionGroups.map((group, index) =>
+      /* @__PURE__ */ React51.createElement(
+        CollectionGroup,
+        __spreadProps(
+          __spreadValues(
+            {
+              key: index,
+            },
+            group
+          ),
+          {
+            collectionViewComponent: (props) =>
+              /* @__PURE__ */ React51.createElement(
+                Table,
+                __spreadProps(__spreadValues({}, props), {
+                  padding,
+                  width,
+                })
+              ),
+            summaryProps: {
+              style: {
+                paddingLeft: padding,
+                paddingRight: padding,
+              },
+            },
+          }
+        )
+      )
+    );
   }
-  const blockIds = ((_c = (_b = collectionData["collection_group_results"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds3;
+  const blockIds =
+    ((_c =
+      (_b = collectionData["collection_group_results"]) == null
+        ? void 0
+        : _b.blockIds) != null
+      ? _c
+      : collectionData.blockIds) || defaultBlockIds3;
   return /* @__PURE__ */ React51.createElement(Table, {
     blockIds,
     collection,
     collectionView,
     padding,
-    width
+    width,
   });
 };
 function Table({ blockIds = [], collection, collectionView, width, padding }) {
@@ -6415,14 +8166,14 @@ function Table({ blockIds = [], collection, collectionView, width, padding }) {
   const tableStyle = React51.useMemo(
     () => ({
       width,
-      maxWidth: width
+      maxWidth: width,
     }),
     [width]
   );
   const tableViewStyle = React51.useMemo(
     () => ({
       paddingLeft: padding,
-      paddingRight: padding
+      paddingRight: padding,
     }),
     [padding]
   );
@@ -6433,78 +8184,144 @@ function Table({ blockIds = [], collection, collectionView, width, padding }) {
     );
   } else {
     properties = [{ property: "title" }].concat(
-      Object.keys(collection.schema).filter((p) => p !== "title").map((property) => ({ property }))
+      Object.keys(collection.schema)
+        .filter((p) => p !== "title")
+        .map((property) => ({ property }))
     );
   }
-  return /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table",
-    style: tableStyle
-  }, /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-view",
-    style: tableViewStyle
-  }, !!properties.length && /* @__PURE__ */ React51.createElement(React51.Fragment, null, /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-header"
-  }, /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-header-inner"
-  }, properties.map((p) => {
-    var _a2;
-    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];
-    const isTitle = p.property === "title";
-    const style = {};
-    if (p.width) {
-      style.width = p.width;
-    } else if (isTitle) {
-      style.width = 280;
-    } else {
-      style.width = 200;
-    }
-    return /* @__PURE__ */ React51.createElement("div", {
-      className: "notion-table-th",
-      key: p.property
-    }, /* @__PURE__ */ React51.createElement("div", {
-      className: "notion-table-view-header-cell",
-      style
-    }, /* @__PURE__ */ React51.createElement("div", {
-      className: "notion-table-view-header-cell-inner"
-    }, /* @__PURE__ */ React51.createElement(CollectionColumnTitle, {
-      schema
-    }))));
-  }))), /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-header-placeholder"
-  }), /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-body"
-  }, blockIds == null ? void 0 : blockIds.map((blockId) => /* @__PURE__ */ React51.createElement("div", {
-    className: "notion-table-row",
-    key: blockId
-  }, properties.map((p) => {
-    var _a2, _b, _c;
-    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];
-    const block = (_b = recordMap.block[blockId]) == null ? void 0 : _b.value;
-    const data = (_c = block == null ? void 0 : block.properties) == null ? void 0 : _c[p.property];
-    const isTitle = p.property === "title";
-    const style = {};
-    if (p.width) {
-      style.width = p.width;
-    } else if (isTitle) {
-      style.width = 280;
-    } else {
-      style.width = 200;
-    }
-    return /* @__PURE__ */ React51.createElement("div", {
-      key: p.property,
-      className: cs(
-        "notion-table-cell",
-        `notion-table-cell-${schema.type}`
-      ),
-      style
-    }, /* @__PURE__ */ React51.createElement(Property, {
-      schema,
-      data,
-      block,
-      collection,
-      linkToTitlePage: linkTableTitleProperties
-    }));
-  })))))));
+  return /* @__PURE__ */ React51.createElement(
+    "div",
+    {
+      className: "notion-table",
+      style: tableStyle,
+    },
+    /* @__PURE__ */ React51.createElement(
+      "div",
+      {
+        className: "notion-table-view",
+        style: tableViewStyle,
+      },
+      !!properties.length &&
+        /* @__PURE__ */ React51.createElement(
+          React51.Fragment,
+          null,
+          /* @__PURE__ */ React51.createElement(
+            "div",
+            {
+              className: "notion-table-header",
+            },
+            /* @__PURE__ */ React51.createElement(
+              "div",
+              {
+                className: "notion-table-header-inner",
+              },
+              properties.map((p) => {
+                var _a2;
+                const schema =
+                  (_a2 = collection.schema) == null ? void 0 : _a2[p.property];
+                const isTitle = p.property === "title";
+                const style = {};
+                if (p.width) {
+                  style.width = p.width;
+                } else if (isTitle) {
+                  style.width = 280;
+                } else {
+                  style.width = 200;
+                }
+                return /* @__PURE__ */ React51.createElement(
+                  "div",
+                  {
+                    className: "notion-table-th",
+                    key: p.property,
+                  },
+                  /* @__PURE__ */ React51.createElement(
+                    "div",
+                    {
+                      className: "notion-table-view-header-cell",
+                      style,
+                    },
+                    /* @__PURE__ */ React51.createElement(
+                      "div",
+                      {
+                        className: "notion-table-view-header-cell-inner",
+                      },
+                      /* @__PURE__ */ React51.createElement(
+                        CollectionColumnTitle,
+                        {
+                          schema,
+                        }
+                      )
+                    )
+                  )
+                );
+              })
+            )
+          ),
+          /* @__PURE__ */ React51.createElement("div", {
+            className: "notion-table-header-placeholder",
+          }),
+          /* @__PURE__ */ React51.createElement(
+            "div",
+            {
+              className: "notion-table-body",
+            },
+            blockIds == null
+              ? void 0
+              : blockIds.map((blockId) =>
+                  /* @__PURE__ */ React51.createElement(
+                    "div",
+                    {
+                      className: "notion-table-row",
+                      key: blockId,
+                    },
+                    properties.map((p) => {
+                      var _a2, _b, _c;
+                      const schema =
+                        (_a2 = collection.schema) == null
+                          ? void 0
+                          : _a2[p.property];
+                      const block =
+                        (_b = recordMap.block[blockId]) == null
+                          ? void 0
+                          : _b.value;
+                      const data =
+                        (_c = block == null ? void 0 : block.properties) == null
+                          ? void 0
+                          : _c[p.property];
+                      const isTitle = p.property === "title";
+                      const style = {};
+                      if (p.width) {
+                        style.width = p.width;
+                      } else if (isTitle) {
+                        style.width = 280;
+                      } else {
+                        style.width = 200;
+                      }
+                      return /* @__PURE__ */ React51.createElement(
+                        "div",
+                        {
+                          key: p.property,
+                          className: cs(
+                            "notion-table-cell",
+                            `notion-table-cell-${schema.type}`
+                          ),
+                          style,
+                        },
+                        /* @__PURE__ */ React51.createElement(Property, {
+                          schema,
+                          data,
+                          block,
+                          collection,
+                          linkToTitlePage: linkTableTitleProperties,
+                        })
+                      );
+                    })
+                  )
+                )
+          )
+        )
+    )
+  );
 }
 
 // src/third-party/collection-view.tsx
@@ -6512,13 +8329,25 @@ var CollectionViewImpl = (props) => {
   const { collectionView } = props;
   switch (collectionView.type) {
     case "table":
-      return /* @__PURE__ */ React52.createElement(CollectionViewTable, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewTable,
+        __spreadValues({}, props)
+      );
     case "gallery":
-      return /* @__PURE__ */ React52.createElement(CollectionViewGallery, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewGallery,
+        __spreadValues({}, props)
+      );
     case "list":
-      return /* @__PURE__ */ React52.createElement(CollectionViewList, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewList,
+        __spreadValues({}, props)
+      );
     case "board":
-      return /* @__PURE__ */ React52.createElement(CollectionViewBoard, __spreadValues({}, props));
+      return /* @__PURE__ */ React52.createElement(
+        CollectionViewBoard,
+        __spreadValues({}, props)
+      );
     default:
       console.warn("unsupported collection view", collectionView);
       return null;
@@ -6529,26 +8358,35 @@ var CollectionView = React52.memo(CollectionViewImpl);
 // src/third-party/collection.tsx
 var isServer2 = typeof window === "undefined";
 var Collection = ({ block, className, ctx: ctx2 }) => {
-  const context = React53.useMemo(
-    () => __spreadValues({}, ctx2),
-    [ctx2]
-  );
+  const context = React53.useMemo(() => __spreadValues({}, ctx2), [ctx2]);
   if (block.type === "page") {
     if (block.parent_table !== "collection") {
       return null;
     }
-    return /* @__PURE__ */ React53.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ React53.createElement("div", {
-      className: "notion-collection-page-properties"
-    }, /* @__PURE__ */ React53.createElement(CollectionRow, {
-      block,
-      pageHeader: true,
-      className
-    })));
+    return /* @__PURE__ */ React53.createElement(
+      NotionContextProvider,
+      __spreadValues({}, context),
+      /* @__PURE__ */ React53.createElement(
+        "div",
+        {
+          className: "notion-collection-page-properties",
+        },
+        /* @__PURE__ */ React53.createElement(CollectionRow, {
+          block,
+          pageHeader: true,
+          className,
+        })
+      )
+    );
   } else {
-    return /* @__PURE__ */ React53.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ React53.createElement(CollectionViewBlock, {
-      block,
-      className
-    }));
+    return /* @__PURE__ */ React53.createElement(
+      NotionContextProvider,
+      __spreadValues({}, context),
+      /* @__PURE__ */ React53.createElement(CollectionViewBlock, {
+        block,
+        className,
+      })
+    );
   }
 };
 var CollectionViewBlock = ({ block, className }) => {
@@ -6562,15 +8400,20 @@ var CollectionViewBlock = ({ block, className }) => {
   }, []);
   const defaultCollectionViewId = viewIds[0];
   const [collectionState, setCollectionState] = useLocalStorage(block.id, {
-    collectionViewId: defaultCollectionViewId
+    collectionViewId: defaultCollectionViewId,
   });
-  const collectionViewId = isMounted && viewIds.find((id) => id === collectionState.collectionViewId) || defaultCollectionViewId;
+  const collectionViewId =
+    (isMounted &&
+      viewIds.find((id) => id === collectionState.collectionViewId)) ||
+    defaultCollectionViewId;
   const onChangeView = React53.useCallback(
     (collectionViewId2) => {
       console.log("change collection view", collectionViewId2);
-      setCollectionState(__spreadProps(__spreadValues({}, collectionState), {
-        collectionViewId: collectionViewId2
-      }));
+      setCollectionState(
+        __spreadProps(__spreadValues({}, collectionState), {
+          collectionViewId: collectionViewId2,
+        })
+      );
     },
     [collectionState, setCollectionState]
   );
@@ -6578,108 +8421,189 @@ var CollectionViewBlock = ({ block, className }) => {
   if (isServer2) {
     windowWidth = 1024;
   }
-  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
-  const collectionView = (_b = recordMap.collection_view[collectionViewId]) == null ? void 0 : _b.value;
-  const collectionData = (_c = recordMap.collection_query[collectionId]) == null ? void 0 : _c[collectionViewId];
+  const collection =
+    (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;
+  const collectionView =
+    (_b = recordMap.collection_view[collectionViewId]) == null
+      ? void 0
+      : _b.value;
+  const collectionData =
+    (_c = recordMap.collection_query[collectionId]) == null
+      ? void 0
+      : _c[collectionViewId];
   const parentPage = getBlockParentPage2(block, recordMap);
   const { width, padding } = React53.useMemo(() => {
     var _a2;
     const style = {};
-    if ((collectionView == null ? void 0 : collectionView.type) !== "table" && (collectionView == null ? void 0 : collectionView.type) !== "board") {
+    if (
+      (collectionView == null ? void 0 : collectionView.type) !== "table" &&
+      (collectionView == null ? void 0 : collectionView.type) !== "board"
+    ) {
       return {
         style,
         width: 0,
-        padding: 0
+        padding: 0,
       };
     }
     const width2 = windowWidth;
     const maxNotionBodyWidth = 708;
     let notionBodyWidth = maxNotionBodyWidth;
-    if ((_a2 = parentPage == null ? void 0 : parentPage.format) == null ? void 0 : _a2.page_full_width) {
-      notionBodyWidth = width2 - 2 * Math.min(96, width2 * 0.08) | 0;
+    if (
+      (_a2 = parentPage == null ? void 0 : parentPage.format) == null
+        ? void 0
+        : _a2.page_full_width
+    ) {
+      notionBodyWidth = (width2 - 2 * Math.min(96, width2 * 0.08)) | 0;
     } else {
-      notionBodyWidth = width2 < maxNotionBodyWidth ? width2 - width2 * 0.02 | 0 : maxNotionBodyWidth;
+      notionBodyWidth =
+        width2 < maxNotionBodyWidth
+          ? (width2 - width2 * 0.02) | 0
+          : maxNotionBodyWidth;
     }
-    const padding2 = isServer2 && !isMounted ? 96 : (width2 - notionBodyWidth) / 2 | 0;
+    const padding2 =
+      isServer2 && !isMounted ? 96 : ((width2 - notionBodyWidth) / 2) | 0;
     style.paddingLeft = padding2;
     style.paddingRight = padding2;
     return {
       style,
       width: width2,
-      padding: padding2
+      padding: padding2,
     };
-  }, [windowWidth, parentPage, collectionView == null ? void 0 : collectionView.type, isMounted]);
+  }, [
+    windowWidth,
+    parentPage,
+    collectionView == null ? void 0 : collectionView.type,
+    isMounted,
+  ]);
   if (!(collection && collectionView && collectionData)) {
     console.warn("skipping missing collection view for block", block.id, {
       collectionId,
       collectionViewId,
       collectionView,
       collectionData,
-      recordMap
+      recordMap,
     });
     return null;
   }
   const title = getTextContent4(collection.name).trim();
-  const showTitle = ((_d = collectionView.format) == null ? void 0 : _d.hide_linked_collection_name) !== true && title;
+  const showTitle =
+    ((_d = collectionView.format) == null
+      ? void 0
+      : _d.hide_linked_collection_name) !== true && title;
   if (collection.icon) {
     block.format = __spreadProps(__spreadValues({}, block.format), {
-      page_icon: collection.icon
+      page_icon: collection.icon,
     });
   }
-  return /* @__PURE__ */ React53.createElement(React53.Fragment, null, /* @__PURE__ */ React53.createElement("div", null, /* @__PURE__ */ React53.createElement("div", null, viewIds.length > 1 && showCollectionViewDropdown && /* @__PURE__ */ React53.createElement(CollectionViewTabs, {
-    collectionViewId,
-    viewIds,
-    onChangeView
-  })), showTitle && /* @__PURE__ */ React53.createElement("div", {
-    className: "notion-collection-header"
-  }, /* @__PURE__ */ React53.createElement("div", {
-    className: "notion-collection-header-title"
-  }, /* @__PURE__ */ React53.createElement(PageIcon, {
-    block,
-    className: "notion-page-title-icon",
-    hideDefaultIcon: true
-  }), title))), /* @__PURE__ */ React53.createElement("div", {
-    className: cs("notion-collection", className)
-  }, /* @__PURE__ */ React53.createElement(CollectionView, {
-    collection,
-    collectionView,
-    collectionData,
-    padding,
-    width
-  })));
+  return /* @__PURE__ */ React53.createElement(
+    React53.Fragment,
+    null,
+    /* @__PURE__ */ React53.createElement(
+      "div",
+      null,
+      /* @__PURE__ */ React53.createElement(
+        "div",
+        null,
+        viewIds.length > 1 &&
+          showCollectionViewDropdown &&
+          /* @__PURE__ */ React53.createElement(CollectionViewTabs, {
+            collectionViewId,
+            viewIds,
+            onChangeView,
+          })
+      ),
+      showTitle &&
+        /* @__PURE__ */ React53.createElement(
+          "div",
+          {
+            className: "notion-collection-header",
+          },
+          /* @__PURE__ */ React53.createElement(
+            "div",
+            {
+              className: "notion-collection-header-title",
+            },
+            /* @__PURE__ */ React53.createElement(PageIcon, {
+              block,
+              className: "notion-page-title-icon",
+              hideDefaultIcon: true,
+            }),
+            title
+          )
+        )
+    ),
+    /* @__PURE__ */ React53.createElement(
+      "div",
+      {
+        className: cs("notion-collection", className),
+      },
+      /* @__PURE__ */ React53.createElement(CollectionView, {
+        collection,
+        collectionView,
+        collectionData,
+        padding,
+        width,
+      })
+    )
+  );
 };
 var CollectionViewTabs = ({ collectionViewId, viewIds, onChangeView }) => {
   const { recordMap } = useNotionContext();
-  return /* @__PURE__ */ React53.createElement("div", {
-    className: "notion-collection-view-tabs-row"
-  }, viewIds.map((viewId) => {
-    var _a;
-    return /* @__PURE__ */ React53.createElement("button", {
-      onClick: () => onChangeView(viewId),
-      key: viewId,
-      className: cs(
-        "notion-collection-view-tabs-content-item",
-        collectionViewId === viewId && "notion-collection-view-tabs-content-item-active"
-      )
-    }, /* @__PURE__ */ React53.createElement(CollectionViewColumnDesc, {
-      collectionView: (_a = recordMap.collection_view[viewId]) == null ? void 0 : _a.value
-    }));
-  }));
+  return /* @__PURE__ */ React53.createElement(
+    "div",
+    {
+      className: "notion-collection-view-tabs-row",
+    },
+    viewIds.map((viewId) => {
+      var _a;
+      return /* @__PURE__ */ React53.createElement(
+        "button",
+        {
+          onClick: () => onChangeView(viewId),
+          key: viewId,
+          className: cs(
+            "notion-collection-view-tabs-content-item",
+            collectionViewId === viewId &&
+              "notion-collection-view-tabs-content-item-active"
+          ),
+        },
+        /* @__PURE__ */ React53.createElement(CollectionViewColumnDesc, {
+          collectionView:
+            (_a = recordMap.collection_view[viewId]) == null
+              ? void 0
+              : _a.value,
+        })
+      );
+    })
+  );
 };
 var CollectionViewColumnDesc = (_a) => {
-  var _b = _a, { collectionView, className, children } = _b, rest = __objRest(_b, ["collectionView", "className", "children"]);
+  var _b = _a,
+    { collectionView, className, children } = _b,
+    rest = __objRest(_b, ["collectionView", "className", "children"]);
   const { type } = collectionView;
-  const name = collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;
-  return /* @__PURE__ */ React53.createElement("div", __spreadValues({
-    className: cs("notion-collection-view-type", className)
-  }, rest), /* @__PURE__ */ React53.createElement(CollectionViewIcon, {
-    className: "notion-collection-view-type-icon",
-    type
-  }), /* @__PURE__ */ React53.createElement("span", {
-    className: "notion-collection-view-type-title"
-  }, name), children);
-};
-export {
-  Collection,
-  PropertyImplMemo as Property
+  const name =
+    collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;
+  return /* @__PURE__ */ React53.createElement(
+    "div",
+    __spreadValues(
+      {
+        className: cs("notion-collection-view-type", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React53.createElement(CollectionViewIcon, {
+      className: "notion-collection-view-type-icon",
+      type,
+    }),
+    /* @__PURE__ */ React53.createElement(
+      "span",
+      {
+        className: "notion-collection-view-type-title",
+      },
+      name
+    ),
+    children
+  );
 };
+export { Collection, PropertyImplMemo as Property };
diff --git a/node_modules/react-notion-x/build/third-party/equation.js b/node_modules/react-notion-x/build/third-party/equation.js
index 3a41f23..39a267f 100644
--- a/node_modules/react-notion-x/build/third-party/equation.js
+++ b/node_modules/react-notion-x/build/third-party/equation.js
@@ -8,15 +8,21 @@ var __getOwnPropSymbols = Object.getOwnPropertySymbols;
 var __getProtoOf = Object.getPrototypeOf;
 var __hasOwnProp = Object.prototype.hasOwnProperty;
 var __propIsEnum = Object.prototype.propertyIsEnumerable;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
+var __defNormalProp = (obj, key, value) =>
+  key in obj
+    ? __defProp(obj, key, {
+        enumerable: true,
+        configurable: true,
+        writable: true,
+        value,
+      })
+    : (obj[key] = value);
 var __spreadValues = (a, b) => {
   for (var prop in b || (b = {}))
-    if (__hasOwnProp.call(b, prop))
-      __defNormalProp(a, prop, b[prop]);
+    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
   if (__getOwnPropSymbols)
     for (var prop of __getOwnPropSymbols(b)) {
-      if (__propIsEnum.call(b, prop))
-        __defNormalProp(a, prop, b[prop]);
+      if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
     }
   return a;
 };
@@ -33,21 +39,34 @@ var __objRest = (source, exclude) => {
     }
   return target;
 };
-var __commonJS = (cb, mod) => function __require() {
-  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
-};
+var __commonJS = (cb, mod) =>
+  function __require() {
+    return (
+      mod ||
+        (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod),
+      mod.exports
+    );
+  };
 var __copyProps = (to, from, except, desc) => {
-  if (from && typeof from === "object" || typeof from === "function") {
+  if ((from && typeof from === "object") || typeof from === "function") {
     for (let key of __getOwnPropNames(from))
       if (!__hasOwnProp.call(to, key) && key !== except)
-        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
+        __defProp(to, key, {
+          get: () => from[key],
+          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
+        });
   }
   return to;
 };
-var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
-  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
-  mod
-));
+var __toESM = (mod, isNodeMode, target) => (
+  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
+  __copyProps(
+    isNodeMode || !mod || !mod.__esModule
+      ? __defProp(target, "default", { value: mod, enumerable: true })
+      : target,
+    mod
+  )
+);
 var __async = (__this, __arguments, generator) => {
   return new Promise((resolve, reject) => {
     var fulfilled = (value) => {
@@ -64,7 +83,10 @@ var __async = (__this, __arguments, generator) => {
         reject(e);
       }
     };
-    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
+    var step = (x) =>
+      x.done
+        ? resolve(x.value)
+        : Promise.resolve(x.value).then(fulfilled, rejected);
     step((generator = generator.apply(__this, __arguments)).next());
   });
 };
@@ -80,18 +102,29 @@ var require_lodash = __commonJS({
     var reIsBinary = /^0b[01]+$/i;
     var reIsOctal = /^0o[0-7]+$/i;
     var freeParseInt = parseInt;
-    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
-    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
+    var freeGlobal =
+      typeof global == "object" && global && global.Object === Object && global;
+    var freeSelf =
+      typeof self == "object" && self && self.Object === Object && self;
     var root = freeGlobal || freeSelf || Function("return this")();
     var objectProto = Object.prototype;
     var objectToString = objectProto.toString;
     var nativeMax = Math.max;
     var nativeMin = Math.min;
-    var now = function() {
+    var now = function () {
       return root.Date.now();
     };
     function debounce(func, wait, options) {
-      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
+      var lastArgs,
+        lastThis,
+        maxWait,
+        result,
+        timerId,
+        lastCallTime,
+        lastInvokeTime = 0,
+        leading = false,
+        maxing = false,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -99,11 +132,14 @@ var require_lodash = __commonJS({
       if (isObject(options)) {
         leading = !!options.leading;
         maxing = "maxWait" in options;
-        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
+        maxWait = maxing
+          ? nativeMax(toNumber(options.maxWait) || 0, wait)
+          : maxWait;
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       function invokeFunc(time) {
-        var args = lastArgs, thisArg = lastThis;
+        var args = lastArgs,
+          thisArg = lastThis;
         lastArgs = lastThis = void 0;
         lastInvokeTime = time;
         result = func.apply(thisArg, args);
@@ -115,12 +151,22 @@ var require_lodash = __commonJS({
         return leading ? invokeFunc(time) : result;
       }
       function remainingWait(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
-        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime,
+          result2 = wait - timeSinceLastCall;
+        return maxing
+          ? nativeMin(result2, maxWait - timeSinceLastInvoke)
+          : result2;
       }
       function shouldInvoke(time) {
-        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
-        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
+        var timeSinceLastCall = time - lastCallTime,
+          timeSinceLastInvoke = time - lastInvokeTime;
+        return (
+          lastCallTime === void 0 ||
+          timeSinceLastCall >= wait ||
+          timeSinceLastCall < 0 ||
+          (maxing && timeSinceLastInvoke >= maxWait)
+        );
       }
       function timerExpired() {
         var time = now();
@@ -148,7 +194,8 @@ var require_lodash = __commonJS({
         return timerId === void 0 ? result : trailingEdge(now());
       }
       function debounced() {
-        var time = now(), isInvoking = shouldInvoke(time);
+        var time = now(),
+          isInvoking = shouldInvoke(time);
         lastArgs = arguments;
         lastThis = this;
         lastCallTime = time;
@@ -171,7 +218,8 @@ var require_lodash = __commonJS({
       return debounced;
     }
     function throttle2(func, wait, options) {
-      var leading = true, trailing = true;
+      var leading = true,
+        trailing = true;
       if (typeof func != "function") {
         throw new TypeError(FUNC_ERROR_TEXT);
       }
@@ -180,9 +228,9 @@ var require_lodash = __commonJS({
         trailing = "trailing" in options ? !!options.trailing : trailing;
       }
       return debounce(func, wait, {
-        "leading": leading,
-        "maxWait": wait,
-        "trailing": trailing
+        leading: leading,
+        maxWait: wait,
+        trailing: trailing,
       });
     }
     function isObject(value) {
@@ -193,7 +241,10 @@ var require_lodash = __commonJS({
       return !!value && typeof value == "object";
     }
     function isSymbol(value) {
-      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
+      return (
+        typeof value == "symbol" ||
+        (isObjectLike(value) && objectToString.call(value) == symbolTag)
+      );
     }
     function toNumber(value) {
       if (typeof value == "number") {
@@ -203,7 +254,8 @@ var require_lodash = __commonJS({
         return NAN;
       }
       if (isObject(value)) {
-        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
+        var other =
+          typeof value.valueOf == "function" ? value.valueOf() : value;
         value = isObject(other) ? other + "" : other;
       }
       if (typeof value != "string") {
@@ -211,10 +263,14 @@ var require_lodash = __commonJS({
       }
       value = value.replace(reTrim, "");
       var isBinary = reIsBinary.test(value);
-      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
+      return isBinary || reIsOctal.test(value)
+        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
+        : reIsBadHex.test(value)
+        ? NAN
+        : +value;
     }
     module.exports = throttle2;
-  }
+  },
 });
 
 // src/third-party/equation.tsx
@@ -245,17 +301,25 @@ var defaultMapImageUrl = (url, block) => {
   }
   try {
     const u = new URL(url);
-    if (u.pathname.startsWith("/secure.notion-static.com") && u.hostname.endsWith(".amazonaws.com")) {
-      if (u.searchParams.has("X-Amz-Credential") && u.searchParams.has("X-Amz-Signature") && u.searchParams.has("X-Amz-Algorithm")) {
+    if (
+      u.pathname.startsWith("/secure.notion-static.com") &&
+      u.hostname.endsWith(".amazonaws.com")
+    ) {
+      if (
+        u.searchParams.has("X-Amz-Credential") &&
+        u.searchParams.has("X-Amz-Signature") &&
+        u.searchParams.has("X-Amz-Algorithm")
+      ) {
         return url;
       }
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   if (url.startsWith("/images")) {
     url = `https://www.notion.so${url}`;
   }
-  url = `https://www.notion.so${url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`}`;
+  url = `https://www.notion.so${
+    url.startsWith("/image") ? url : `/image/${encodeURIComponent(url)}`
+  }`;
   const notionImageUrlV2 = new URL(url);
   let table = block.parent_table === "space" ? "block" : block.parent_table;
   if (table === "collection" || table === "team") {
@@ -289,7 +353,7 @@ var youtubeDomains = /* @__PURE__ */ new Set([
   "youtube.com",
   "www.youtube.com",
   "youtube-nocookie.com",
-  "www.youtube-nocookie.com"
+  "www.youtube-nocookie.com",
 ]);
 var getYoutubeId = (url) => {
   try {
@@ -297,13 +361,13 @@ var getYoutubeId = (url) => {
     if (!youtubeDomains.has(hostname)) {
       return null;
     }
-    const regExp = /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
+    const regExp =
+      /^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/i;
     const match = url.match(regExp);
     if (match && match[2].length == 11) {
       return match[2];
     }
-  } catch (e) {
-  }
+  } catch (e) {}
   return null;
 };
 
@@ -313,12 +377,23 @@ import * as React2 from "react";
 // src/icons/type-github.tsx
 import * as React from "react";
 function SvgTypeGitHub(props) {
-  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
-    viewBox: "0 0 260 260"
-  }, props), /* @__PURE__ */ React.createElement("g", null, /* @__PURE__ */ React.createElement("path", {
-    d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
-    fill: "#161614"
-  })));
+  return /* @__PURE__ */ React.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 260 260",
+      },
+      props
+    ),
+    /* @__PURE__ */ React.createElement(
+      "g",
+      null,
+      /* @__PURE__ */ React.createElement("path", {
+        d: "M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z",
+        fill: "#161614",
+      })
+    )
+  );
 }
 var type_github_default = SvgTypeGitHub;
 
@@ -326,18 +401,33 @@ var type_github_default = SvgTypeGitHub;
 var EOI = ({ block, inline, className }) => {
   var _a, _b, _c;
   const { components } = useNotionContext();
-  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};
+  const { original_url, attributes, domain } =
+    (block == null ? void 0 : block.format) || {};
   if (!original_url || !attributes) {
     return null;
   }
-  const title = (_a = attributes.find((attr) => attr.id === "title")) == null ? void 0 : _a.values[0];
-  let owner = (_b = attributes.find((attr) => attr.id === "owner")) == null ? void 0 : _b.values[0];
-  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === "updated_at")) == null ? void 0 : _c.values[0];
-  const lastUpdated = lastUpdatedAt ? formatNotionDateTime(lastUpdatedAt) : null;
+  const title =
+    (_a = attributes.find((attr) => attr.id === "title")) == null
+      ? void 0
+      : _a.values[0];
+  let owner =
+    (_b = attributes.find((attr) => attr.id === "owner")) == null
+      ? void 0
+      : _b.values[0];
+  const lastUpdatedAt =
+    (_c = attributes.find((attr) => attr.id === "updated_at")) == null
+      ? void 0
+      : _c.values[0];
+  const lastUpdated = lastUpdatedAt
+    ? formatNotionDateTime(lastUpdatedAt)
+    : null;
   let externalImage;
   switch (domain) {
     case "github.com":
-      externalImage = /* @__PURE__ */ React2.createElement(type_github_default, null);
+      externalImage = /* @__PURE__ */ React2.createElement(
+        type_github_default,
+        null
+      );
       if (owner) {
         const parts = owner.split("/");
         owner = parts[parts.length - 1];
@@ -352,24 +442,58 @@ var EOI = ({ block, inline, className }) => {
       }
       return null;
   }
-  return /* @__PURE__ */ React2.createElement(components.Link, {
-    target: "_blank",
-    rel: "noopener noreferrer",
-    href: original_url,
-    className: cs(
-      "notion-external",
-      inline ? "notion-external-mention" : "notion-external-block notion-row",
-      className
+  return /* @__PURE__ */ React2.createElement(
+    components.Link,
+    {
+      target: "_blank",
+      rel: "noopener noreferrer",
+      href: original_url,
+      className: cs(
+        "notion-external",
+        inline ? "notion-external-mention" : "notion-external-block notion-row",
+        className
+      ),
+    },
+    externalImage &&
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-image",
+        },
+        externalImage
+      ),
+    /* @__PURE__ */ React2.createElement(
+      "div",
+      {
+        className: "notion-external-description",
+      },
+      /* @__PURE__ */ React2.createElement(
+        "div",
+        {
+          className: "notion-external-title",
+        },
+        title
+      ),
+      (owner || lastUpdated) &&
+        /* @__PURE__ */ React2.createElement(
+          "div",
+          {
+            className: "notion-external-subtitle",
+          },
+          owner && /* @__PURE__ */ React2.createElement("span", null, owner),
+          owner &&
+            lastUpdated &&
+            /* @__PURE__ */ React2.createElement("span", null, " \u2022 "),
+          lastUpdated &&
+            /* @__PURE__ */ React2.createElement(
+              "span",
+              null,
+              "Updated ",
+              lastUpdated
+            )
+        )
     )
-  }, externalImage && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-image"
-  }, externalImage), /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-description"
-  }, /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-title"
-  }, title), (owner || lastUpdated) && /* @__PURE__ */ React2.createElement("div", {
-    className: "notion-external-subtitle"
-  }, owner && /* @__PURE__ */ React2.createElement("span", null, owner), owner && lastUpdated && /* @__PURE__ */ React2.createElement("span", null, " \u2022 "), lastUpdated && /* @__PURE__ */ React2.createElement("span", null, "Updated ", lastUpdated))));
+  );
 };
 
 // src/components/text.tsx
@@ -383,7 +507,10 @@ var GracefulImage = (props) => {
   if (isBrowser) {
     return /* @__PURE__ */ React3.createElement(Img, __spreadValues({}, props));
   } else {
-    return /* @__PURE__ */ React3.createElement("img", __spreadValues({}, props));
+    return /* @__PURE__ */ React3.createElement(
+      "img",
+      __spreadValues({}, props)
+    );
   }
 };
 
@@ -398,15 +525,27 @@ import { getBlockIcon, getBlockTitle } from "notion-utils";
 // src/icons/default-page-icon.tsx
 import * as React4 from "react";
 var DefaultPageIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React4.createElement("svg", __spreadProps(__spreadValues({
-    className
-  }, rest), {
-    viewBox: "0 0 30 30",
-    width: "16"
-  }), /* @__PURE__ */ React4.createElement("path", {
-    d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React4.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className,
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+        width: "16",
+      }
+    ),
+    /* @__PURE__ */ React4.createElement("path", {
+      d: "M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z",
+    })
+  );
 };
 
 // src/components/lazy-image.tsx
@@ -414,32 +553,43 @@ import * as React5 from "react";
 import { normalizeUrl } from "notion-utils";
 import { ImageState, LazyImageFull } from "react-lazy-images";
 var LazyImage = (_a) => {
-  var _b = _a, {
-    src,
-    alt,
-    className,
-    style,
-    zoomable = false,
-    priority = false,
-    height
-  } = _b, rest = __objRest(_b, [
-    "src",
-    "alt",
-    "className",
-    "style",
-    "zoomable",
-    "priority",
-    "height"
-  ]);
+  var _b = _a,
+    {
+      src,
+      alt,
+      className,
+      style,
+      zoomable = false,
+      priority = false,
+      height,
+    } = _b,
+    rest = __objRest(_b, [
+      "src",
+      "alt",
+      "className",
+      "style",
+      "zoomable",
+      "priority",
+      "height",
+    ]);
   var _a2, _b2, _c;
-  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();
+  const { recordMap, zoom, previewImages, forceCustomImages, components } =
+    useNotionContext();
   const zoomRef = React5.useRef(zoom ? zoom.clone() : null);
-  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[normalizeUrl(src)] : null;
+  const previewImage = previewImages
+    ? (_c =
+        (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+          ? void 0
+          : _a2[src]) != null
+      ? _c
+      : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null
+      ? void 0
+      : _b2[normalizeUrl(src)]
+    : null;
   const onLoad = React5.useCallback(
     (e) => {
       if (zoomable && (e.target.src || e.target.srcset)) {
         if (zoomRef.current) {
-          ;
           zoomRef.current.attach(e.target);
         }
       }
@@ -449,18 +599,18 @@ var LazyImage = (_a) => {
   const attachZoom = React5.useCallback(
     (image) => {
       if (zoomRef.current && image) {
-        ;
         zoomRef.current.attach(image);
       }
     },
     [zoomRef]
   );
   const attachZoomRef = React5.useMemo(
-    () => zoomable ? attachZoom : void 0,
+    () => (zoomable ? attachZoom : void 0),
     [zoomable, attachZoom]
   );
   if (previewImage) {
-    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;
+    const aspectRatio =
+      previewImage.originalHeight / previewImage.originalWidth;
     if (components.Image) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
         src,
@@ -472,51 +622,66 @@ var LazyImage = (_a) => {
         blurDataURL: previewImage.dataURIBase64,
         placeholder: "blur",
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement(LazyImageFull, __spreadProps(__spreadValues({
-      src
-    }, rest), {
-      experimentalDecode: true
-    }), ({ imageState, ref }) => {
-      const isLoaded = imageState === ImageState.LoadSuccess;
-      const wrapperStyle = {
-        width: "100%"
-      };
-      const imgStyle = {};
-      if (height) {
-        wrapperStyle.height = height;
-      } else {
-        imgStyle.position = "absolute";
-        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
-      }
-      return /* @__PURE__ */ React5.createElement("div", {
-        className: cs(
-          "lazy-image-wrapper",
-          isLoaded && "lazy-image-loaded",
-          className
+    return /* @__PURE__ */ React5.createElement(
+      LazyImageFull,
+      __spreadProps(
+        __spreadValues(
+          {
+            src,
+          },
+          rest
         ),
-        style: wrapperStyle
-      }, /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-preview",
-        src: previewImage.dataURIBase64,
-        alt,
-        ref,
-        style,
-        decoding: "async"
-      }), /* @__PURE__ */ React5.createElement("img", {
-        className: "lazy-image-real",
-        src,
-        alt,
-        ref: attachZoomRef,
-        style: __spreadValues(__spreadValues({}, style), imgStyle),
-        width: previewImage.originalWidth,
-        height: previewImage.originalHeight,
-        decoding: "async",
-        loading: "lazy"
-      }));
-    });
+        {
+          experimentalDecode: true,
+        }
+      ),
+      ({ imageState, ref }) => {
+        const isLoaded = imageState === ImageState.LoadSuccess;
+        const wrapperStyle = {
+          width: "100%",
+        };
+        const imgStyle = {};
+        if (height) {
+          wrapperStyle.height = height;
+        } else {
+          imgStyle.position = "absolute";
+          wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;
+        }
+        return /* @__PURE__ */ React5.createElement(
+          "div",
+          {
+            className: cs(
+              "lazy-image-wrapper",
+              isLoaded && "lazy-image-loaded",
+              className
+            ),
+            style: wrapperStyle,
+          },
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-preview",
+            src: previewImage.dataURIBase64,
+            alt,
+            ref,
+            style,
+            decoding: "async",
+          }),
+          /* @__PURE__ */ React5.createElement("img", {
+            className: "lazy-image-real",
+            src,
+            alt,
+            ref: attachZoomRef,
+            style: __spreadValues(__spreadValues({}, style), imgStyle),
+            width: previewImage.originalWidth,
+            height: previewImage.originalHeight,
+            decoding: "async",
+            loading: "lazy",
+          })
+        );
+      }
+    );
   } else {
     if (components.Image && forceCustomImages) {
       return /* @__PURE__ */ React5.createElement(components.Image, {
@@ -527,38 +692,51 @@ var LazyImage = (_a) => {
         width: null,
         height: height || null,
         priority,
-        onLoad
+        onLoad,
       });
     }
-    return /* @__PURE__ */ React5.createElement("img", __spreadValues({
-      className,
-      style,
-      src,
-      alt,
-      ref: attachZoomRef,
-      loading: "lazy",
-      decoding: "async"
-    }, rest));
+    return /* @__PURE__ */ React5.createElement(
+      "img",
+      __spreadValues(
+        {
+          className,
+          style,
+          src,
+          alt,
+          ref: attachZoomRef,
+          loading: "lazy",
+          decoding: "async",
+        },
+        rest
+      )
+    );
   }
 };
 
 // src/components/page-icon.tsx
 var isIconBlock = (value) => {
-  return value.type === "page" || value.type === "callout" || value.type === "collection_view" || value.type === "collection_view_page";
+  return (
+    value.type === "page" ||
+    value.type === "callout" ||
+    value.type === "collection_view" ||
+    value.type === "collection_view_page"
+  );
 };
 var PageIconImpl = ({
   block,
   className,
   inline = true,
   hideDefaultIcon = false,
-  defaultIcon
+  defaultIcon,
 }) => {
   var _a;
   const { mapImageUrl, recordMap, darkMode } = useNotionContext();
   let isImage = false;
   let content = null;
   if (isIconBlock(block)) {
-    const icon = ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;
+    const icon =
+      ((_a = getBlockIcon(block, recordMap)) == null ? void 0 : _a.trim()) ||
+      defaultIcon;
     const title = getBlockTitle(block, recordMap);
     if (icon && isUrl(icon)) {
       const url = mapImageUrl(icon, block);
@@ -566,248 +744,366 @@ var PageIconImpl = ({
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (icon && icon.startsWith("/icons/")) {
-      const url = "https://www.notion.so" + icon + "?mode=" + (darkMode ? "dark" : "light");
+      const url =
+        "https://www.notion.so" +
+        icon +
+        "?mode=" +
+        (darkMode ? "dark" : "light");
       content = /* @__PURE__ */ React6.createElement(LazyImage, {
         src: url,
         alt: title || "page icon",
-        className: cs(className, "notion-page-icon")
+        className: cs(className, "notion-page-icon"),
       });
     } else if (!icon) {
       if (!hideDefaultIcon) {
         isImage = true;
         content = /* @__PURE__ */ React6.createElement(DefaultPageIcon, {
           className: cs(className, "notion-page-icon"),
-          alt: title ? title : "page icon"
+          alt: title ? title : "page icon",
         });
       }
     } else {
       isImage = false;
-      content = /* @__PURE__ */ React6.createElement("span", {
-        className: cs(className, "notion-page-icon"),
-        role: "img",
-        "aria-label": icon
-      }, icon);
+      content = /* @__PURE__ */ React6.createElement(
+        "span",
+        {
+          className: cs(className, "notion-page-icon"),
+          role: "img",
+          "aria-label": icon,
+        },
+        icon
+      );
     }
   }
   if (!content) {
     return null;
   }
-  return /* @__PURE__ */ React6.createElement("div", {
-    className: cs(
-      inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
-      isImage ? "notion-page-icon-image" : "notion-page-icon-span"
-    )
-  }, content);
+  return /* @__PURE__ */ React6.createElement(
+    "div",
+    {
+      className: cs(
+        inline ? "notion-page-icon-inline" : "notion-page-icon-hero",
+        isImage ? "notion-page-icon-image" : "notion-page-icon-span"
+      ),
+    },
+    content
+  );
 };
 var PageIcon = React6.memo(PageIconImpl);
 
 // src/components/page-title.tsx
 var PageTitleImpl = (_a) => {
-  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, ["block", "className", "defaultIcon"]);
+  var _b = _a,
+    { block, className, defaultIcon } = _b,
+    rest = __objRest(_b, ["block", "className", "defaultIcon"]);
   var _a2, _b2;
   const { recordMap } = useNotionContext();
-  if (!block)
-    return null;
-  if (block.type === "collection_view_page" || block.type === "collection_view") {
+  if (!block) return null;
+  if (
+    block.type === "collection_view_page" ||
+    block.type === "collection_view"
+  ) {
     const title = getBlockTitle2(block, recordMap);
     if (!title) {
       return null;
     }
     const titleDecoration = [[title]];
-    return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-      className: cs("notion-page-title", className)
-    }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-      block,
-      defaultIcon,
-      className: "notion-page-title-icon"
-    }), /* @__PURE__ */ React7.createElement("span", {
-      className: "notion-page-title-text"
-    }, /* @__PURE__ */ React7.createElement(Text, {
-      value: titleDecoration,
-      block
-    })));
+    return /* @__PURE__ */ React7.createElement(
+      "span",
+      __spreadValues(
+        {
+          className: cs("notion-page-title", className),
+        },
+        rest
+      ),
+      /* @__PURE__ */ React7.createElement(PageIcon, {
+        block,
+        defaultIcon,
+        className: "notion-page-title-icon",
+      }),
+      /* @__PURE__ */ React7.createElement(
+        "span",
+        {
+          className: "notion-page-title-text",
+        },
+        /* @__PURE__ */ React7.createElement(Text, {
+          value: titleDecoration,
+          block,
+        })
+      )
+    );
   }
   if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {
     return null;
   }
-  return /* @__PURE__ */ React7.createElement("span", __spreadValues({
-    className: cs("notion-page-title", className)
-  }, rest), /* @__PURE__ */ React7.createElement(PageIcon, {
-    block,
-    defaultIcon,
-    className: "notion-page-title-icon"
-  }), /* @__PURE__ */ React7.createElement("span", {
-    className: "notion-page-title-text"
-  }, /* @__PURE__ */ React7.createElement(Text, {
-    value: (_b2 = block.properties) == null ? void 0 : _b2.title,
-    block
-  })));
+  return /* @__PURE__ */ React7.createElement(
+    "span",
+    __spreadValues(
+      {
+        className: cs("notion-page-title", className),
+      },
+      rest
+    ),
+    /* @__PURE__ */ React7.createElement(PageIcon, {
+      block,
+      defaultIcon,
+      className: "notion-page-title-icon",
+    }),
+    /* @__PURE__ */ React7.createElement(
+      "span",
+      {
+        className: "notion-page-title-text",
+      },
+      /* @__PURE__ */ React7.createElement(Text, {
+        value: (_b2 = block.properties) == null ? void 0 : _b2.title,
+        block,
+      })
+    )
+  );
 };
 var PageTitle = React7.memo(PageTitleImpl);
 
 // src/components/text.tsx
 var Text = ({ value, block, linkProps, linkProtocol }) => {
-  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();
-  return /* @__PURE__ */ React8.createElement(React8.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {
-    if (!decorations) {
-      if (text === ",") {
-        return /* @__PURE__ */ React8.createElement("span", {
-          key: index,
-          style: { padding: "0.5em" }
-        });
-      } else {
-        return /* @__PURE__ */ React8.createElement(React8.Fragment, {
-          key: index
-        }, text);
-      }
-    }
-    const formatted = decorations.reduce(
-      (element, decorator) => {
-        var _a, _b, _c, _d, _e;
-        switch (decorator[0]) {
-          case "p": {
-            const blockId = decorator[1];
-            const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
-            if (!linkedBlock) {
-              console.log('"p" missing block', blockId);
-              return null;
+  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =
+    useNotionContext();
+  return /* @__PURE__ */ React8.createElement(
+    React8.Fragment,
+    null,
+    value == null
+      ? void 0
+      : value.map(([text, decorations], index) => {
+          if (!decorations) {
+            if (text === ",") {
+              return /* @__PURE__ */ React8.createElement("span", {
+                key: index,
+                style: { padding: "0.5em" },
+              });
+            } else {
+              return /* @__PURE__ */ React8.createElement(
+                React8.Fragment,
+                {
+                  key: index,
+                },
+                text
+              );
             }
-            return /* @__PURE__ */ React8.createElement(components.PageLink, {
-              className: "notion-link",
-              href: mapPageUrl(blockId)
-            }, /* @__PURE__ */ React8.createElement(PageTitle, {
-              block: linkedBlock
-            }));
           }
-          case "\u2023": {
-            const linkType = decorator[1][0];
-            const id = decorator[1][1];
-            switch (linkType) {
+          const formatted = decorations.reduce((element, decorator) => {
+            var _a, _b, _c, _d, _e;
+            switch (decorator[0]) {
+              case "p": {
+                const blockId = decorator[1];
+                const linkedBlock =
+                  (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;
+                if (!linkedBlock) {
+                  console.log('"p" missing block', blockId);
+                  return null;
+                }
+                return /* @__PURE__ */ React8.createElement(
+                  components.PageLink,
+                  {
+                    className: "notion-link",
+                    href: mapPageUrl(blockId),
+                  },
+                  /* @__PURE__ */ React8.createElement(PageTitle, {
+                    block: linkedBlock,
+                  })
+                );
+              }
+              case "\u2023": {
+                const linkType = decorator[1][0];
+                const id = decorator[1][1];
+                switch (linkType) {
+                  case "u": {
+                    const user =
+                      (_b = recordMap.notion_user[id]) == null
+                        ? void 0
+                        : _b.value;
+                    if (!user) {
+                      console.log('"\u2023" missing user', id);
+                      return null;
+                    }
+                    const name = [user.given_name, user.family_name]
+                      .filter(Boolean)
+                      .join(" ");
+                    return /* @__PURE__ */ React8.createElement(GracefulImage, {
+                      className: "notion-user",
+                      src: mapImageUrl(user.profile_photo, block),
+                      alt: name,
+                    });
+                  }
+                  default: {
+                    const linkedBlock =
+                      (_c = recordMap.block[id]) == null ? void 0 : _c.value;
+                    if (!linkedBlock) {
+                      console.log('"\u2023" missing block', linkType, id);
+                      return null;
+                    }
+                    return /* @__PURE__ */ React8.createElement(
+                      components.PageLink,
+                      __spreadProps(
+                        __spreadValues(
+                          {
+                            className: "notion-link",
+                            href: mapPageUrl(id),
+                          },
+                          linkProps
+                        ),
+                        {
+                          target: "_blank",
+                          rel: "noopener noreferrer",
+                        }
+                      ),
+                      /* @__PURE__ */ React8.createElement(PageTitle, {
+                        block: linkedBlock,
+                      })
+                    );
+                  }
+                }
+              }
+              case "h":
+                return /* @__PURE__ */ React8.createElement(
+                  "span",
+                  {
+                    className: `notion-${decorator[1]}`,
+                  },
+                  element
+                );
+              case "c":
+                return /* @__PURE__ */ React8.createElement(
+                  "code",
+                  {
+                    className: "notion-inline-code",
+                  },
+                  element
+                );
+              case "b":
+                return /* @__PURE__ */ React8.createElement("b", null, element);
+              case "i":
+                return /* @__PURE__ */ React8.createElement(
+                  "em",
+                  null,
+                  element
+                );
+              case "s":
+                return /* @__PURE__ */ React8.createElement("s", null, element);
+              case "_":
+                return /* @__PURE__ */ React8.createElement(
+                  "span",
+                  {
+                    className: "notion-inline-underscore",
+                  },
+                  element
+                );
+              case "e":
+                return /* @__PURE__ */ React8.createElement(
+                  components.Equation,
+                  {
+                    math: decorator[1],
+                    inline: true,
+                  }
+                );
+              case "m":
+                return element;
+              case "a": {
+                const v = decorator[1];
+                const pathname = v.substr(1);
+                const id = parsePageId(pathname, { uuid: true });
+                if ((v[0] === "/" || v.includes(rootDomain)) && id) {
+                  const href = v.includes(rootDomain)
+                    ? v
+                    : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
+                  return /* @__PURE__ */ React8.createElement(
+                    components.PageLink,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href,
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                } else {
+                  return /* @__PURE__ */ React8.createElement(
+                    components.Link,
+                    __spreadValues(
+                      {
+                        className: "notion-link",
+                        href: linkProtocol
+                          ? `${linkProtocol}:${decorator[1]}`
+                          : decorator[1],
+                      },
+                      linkProps
+                    ),
+                    element
+                  );
+                }
+              }
+              case "d": {
+                const v = decorator[1];
+                const type = v == null ? void 0 : v.type;
+                if (type === "date") {
+                  const startDate = v.start_date;
+                  return formatDate(startDate);
+                } else if (type === "daterange") {
+                  const startDate = v.start_date;
+                  const endDate = v.end_date;
+                  return `${formatDate(startDate)} \u2192 ${formatDate(
+                    endDate
+                  )}`;
+                } else {
+                  return element;
+                }
+              }
               case "u": {
-                const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;
+                const userId = decorator[1];
+                const user =
+                  (_d = recordMap.notion_user[userId]) == null
+                    ? void 0
+                    : _d.value;
                 if (!user) {
-                  console.log('"\u2023" missing user', id);
+                  console.log("missing user", userId);
                   return null;
                 }
-                const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
+                const name = [user.given_name, user.family_name]
+                  .filter(Boolean)
+                  .join(" ");
                 return /* @__PURE__ */ React8.createElement(GracefulImage, {
                   className: "notion-user",
                   src: mapImageUrl(user.profile_photo, block),
-                  alt: name
+                  alt: name,
                 });
               }
-              default: {
-                const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;
-                if (!linkedBlock) {
-                  console.log('"\u2023" missing block', linkType, id);
-                  return null;
-                }
-                return /* @__PURE__ */ React8.createElement(components.PageLink, __spreadProps(__spreadValues({
-                  className: "notion-link",
-                  href: mapPageUrl(id)
-                }, linkProps), {
-                  target: "_blank",
-                  rel: "noopener noreferrer"
-                }), /* @__PURE__ */ React8.createElement(PageTitle, {
-                  block: linkedBlock
-                }));
+              case "eoi": {
+                const blockId = decorator[1];
+                const externalObjectInstance =
+                  (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
+                return /* @__PURE__ */ React8.createElement(EOI, {
+                  block: externalObjectInstance,
+                  inline: true,
+                });
               }
+              default:
+                if (true) {
+                  console.log("unsupported text format", decorator);
+                }
+                return element;
             }
-          }
-          case "h":
-            return /* @__PURE__ */ React8.createElement("span", {
-              className: `notion-${decorator[1]}`
-            }, element);
-          case "c":
-            return /* @__PURE__ */ React8.createElement("code", {
-              className: "notion-inline-code"
-            }, element);
-          case "b":
-            return /* @__PURE__ */ React8.createElement("b", null, element);
-          case "i":
-            return /* @__PURE__ */ React8.createElement("em", null, element);
-          case "s":
-            return /* @__PURE__ */ React8.createElement("s", null, element);
-          case "_":
-            return /* @__PURE__ */ React8.createElement("span", {
-              className: "notion-inline-underscore"
-            }, element);
-          case "e":
-            return /* @__PURE__ */ React8.createElement(components.Equation, {
-              math: decorator[1],
-              inline: true
-            });
-          case "m":
-            return element;
-          case "a": {
-            const v = decorator[1];
-            const pathname = v.substr(1);
-            const id = parsePageId(pathname, { uuid: true });
-            if ((v[0] === "/" || v.includes(rootDomain)) && id) {
-              const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;
-              return /* @__PURE__ */ React8.createElement(components.PageLink, __spreadValues({
-                className: "notion-link",
-                href
-              }, linkProps), element);
-            } else {
-              return /* @__PURE__ */ React8.createElement(components.Link, __spreadValues({
-                className: "notion-link",
-                href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]
-              }, linkProps), element);
-            }
-          }
-          case "d": {
-            const v = decorator[1];
-            const type = v == null ? void 0 : v.type;
-            if (type === "date") {
-              const startDate = v.start_date;
-              return formatDate(startDate);
-            } else if (type === "daterange") {
-              const startDate = v.start_date;
-              const endDate = v.end_date;
-              return `${formatDate(startDate)} \u2192 ${formatDate(endDate)}`;
-            } else {
-              return element;
-            }
-          }
-          case "u": {
-            const userId = decorator[1];
-            const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;
-            if (!user) {
-              console.log("missing user", userId);
-              return null;
-            }
-            const name = [user.given_name, user.family_name].filter(Boolean).join(" ");
-            return /* @__PURE__ */ React8.createElement(GracefulImage, {
-              className: "notion-user",
-              src: mapImageUrl(user.profile_photo, block),
-              alt: name
-            });
-          }
-          case "eoi": {
-            const blockId = decorator[1];
-            const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;
-            return /* @__PURE__ */ React8.createElement(EOI, {
-              block: externalObjectInstance,
-              inline: true
-            });
-          }
-          default:
-            if (true) {
-              console.log("unsupported text format", decorator);
-            }
-            return element;
-        }
-      },
-      /* @__PURE__ */ React8.createElement(React8.Fragment, null, text)
-    );
-    return /* @__PURE__ */ React8.createElement(React8.Fragment, {
-      key: index
-    }, formatted);
-  }));
+          }, /* @__PURE__ */ React8.createElement(React8.Fragment, null, text));
+          return /* @__PURE__ */ React8.createElement(
+            React8.Fragment,
+            {
+              key: index,
+            },
+            formatted
+          );
+        })
+  );
 };
 
 // src/components/header.tsx
@@ -818,84 +1114,144 @@ import { useHotkeys } from "react-hotkeys-hook";
 // src/icons/search-icon.tsx
 import * as React9 from "react";
 var SearchIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React9.createElement("svg", __spreadValues({
-    className: cs("notion-icon", className),
-    viewBox: "0 0 17 17"
-  }, rest), /* @__PURE__ */ React9.createElement("path", {
-    d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React9.createElement(
+    "svg",
+    __spreadValues(
+      {
+        className: cs("notion-icon", className),
+        viewBox: "0 0 17 17",
+      },
+      rest
+    ),
+    /* @__PURE__ */ React9.createElement("path", {
+      d: "M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z",
+    })
+  );
 };
 
 // src/components/search-dialog.tsx
 var import_lodash = __toESM(require_lodash(), 1);
 import * as React12 from "react";
-import { getBlockParentPage, getBlockTitle as getBlockTitle3 } from "notion-utils";
+import {
+  getBlockParentPage,
+  getBlockTitle as getBlockTitle3,
+} from "notion-utils";
 
 // src/icons/clear-icon.tsx
 import * as React10 from "react";
 var ClearIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React10.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 30 30"
-  }), /* @__PURE__ */ React10.createElement("path", {
-    d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z"
-  }));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React10.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 30 30",
+      }
+    ),
+    /* @__PURE__ */ React10.createElement("path", {
+      d: "M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z",
+    })
+  );
 };
 
 // src/icons/loading-icon.tsx
 import * as React11 from "react";
 var LoadingIcon = (props) => {
-  const _a = props, { className } = _a, rest = __objRest(_a, ["className"]);
-  return /* @__PURE__ */ React11.createElement("svg", __spreadProps(__spreadValues({
-    className: cs("notion-icon", className)
-  }, rest), {
-    viewBox: "0 0 24 24"
-  }), /* @__PURE__ */ React11.createElement("defs", null, /* @__PURE__ */ React11.createElement("linearGradient", {
-    x1: "28.1542969%",
-    y1: "63.7402344%",
-    x2: "74.6289062%",
-    y2: "17.7832031%",
-    id: "linearGradient-1"
-  }, /* @__PURE__ */ React11.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 1)",
-    offset: "0%"
-  }), /* @__PURE__ */ React11.createElement("stop", {
-    stopColor: "rgba(164, 164, 164, 0)",
-    stopOpacity: "0",
-    offset: "100%"
-  }))), /* @__PURE__ */ React11.createElement("g", {
-    id: "Page-1",
-    stroke: "none",
-    strokeWidth: "1",
-    fill: "none"
-  }, /* @__PURE__ */ React11.createElement("g", {
-    transform: "translate(-236.000000, -286.000000)"
-  }, /* @__PURE__ */ React11.createElement("g", {
-    transform: "translate(238.000000, 286.000000)"
-  }, /* @__PURE__ */ React11.createElement("circle", {
-    id: "Oval-2",
-    stroke: "url(#linearGradient-1)",
-    strokeWidth: "4",
-    cx: "10",
-    cy: "12",
-    r: "10"
-  }), /* @__PURE__ */ React11.createElement("path", {
-    d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
-    id: "Oval-2",
-    stroke: "rgba(164, 164, 164, 1)",
-    strokeWidth: "4"
-  }), /* @__PURE__ */ React11.createElement("rect", {
-    id: "Rectangle-1",
-    fill: "rgba(164, 164, 164, 1)",
-    x: "8",
-    y: "0",
-    width: "4",
-    height: "4",
-    rx: "8"
-  })))));
+  const _a = props,
+    { className } = _a,
+    rest = __objRest(_a, ["className"]);
+  return /* @__PURE__ */ React11.createElement(
+    "svg",
+    __spreadProps(
+      __spreadValues(
+        {
+          className: cs("notion-icon", className),
+        },
+        rest
+      ),
+      {
+        viewBox: "0 0 24 24",
+      }
+    ),
+    /* @__PURE__ */ React11.createElement(
+      "defs",
+      null,
+      /* @__PURE__ */ React11.createElement(
+        "linearGradient",
+        {
+          x1: "28.1542969%",
+          y1: "63.7402344%",
+          x2: "74.6289062%",
+          y2: "17.7832031%",
+          id: "linearGradient-1",
+        },
+        /* @__PURE__ */ React11.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 1)",
+          offset: "0%",
+        }),
+        /* @__PURE__ */ React11.createElement("stop", {
+          stopColor: "rgba(164, 164, 164, 0)",
+          stopOpacity: "0",
+          offset: "100%",
+        })
+      )
+    ),
+    /* @__PURE__ */ React11.createElement(
+      "g",
+      {
+        id: "Page-1",
+        stroke: "none",
+        strokeWidth: "1",
+        fill: "none",
+      },
+      /* @__PURE__ */ React11.createElement(
+        "g",
+        {
+          transform: "translate(-236.000000, -286.000000)",
+        },
+        /* @__PURE__ */ React11.createElement(
+          "g",
+          {
+            transform: "translate(238.000000, 286.000000)",
+          },
+          /* @__PURE__ */ React11.createElement("circle", {
+            id: "Oval-2",
+            stroke: "url(#linearGradient-1)",
+            strokeWidth: "4",
+            cx: "10",
+            cy: "12",
+            r: "10",
+          }),
+          /* @__PURE__ */ React11.createElement("path", {
+            d: "M10,2 C4.4771525,2 0,6.4771525 0,12",
+            id: "Oval-2",
+            stroke: "rgba(164, 164, 164, 1)",
+            strokeWidth: "4",
+          }),
+          /* @__PURE__ */ React11.createElement("rect", {
+            id: "Rectangle-1",
+            fill: "rgba(164, 164, 164, 1)",
+            x: "8",
+            y: "0",
+            width: "4",
+            height: "4",
+            rx: "8",
+          })
+        )
+      )
+    )
+  );
 };
 
 // src/components/search-dialog.tsx
@@ -906,7 +1262,7 @@ var SearchDialog = class extends React12.Component {
       isLoading: false,
       query: "",
       searchResult: null,
-      searchError: null
+      searchError: null,
     };
     this._onAfterOpen = () => {
       if (this._inputRef.current) {
@@ -917,7 +1273,11 @@ var SearchDialog = class extends React12.Component {
       const query = e.target.value;
       this.setState({ query });
       if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
+        this.setState({
+          isLoading: false,
+          searchResult: null,
+          searchError: null,
+        });
         return;
       } else {
         this._search();
@@ -926,67 +1286,81 @@ var SearchDialog = class extends React12.Component {
     this._onClearQuery = () => {
       this._onChangeQuery({ target: { value: "" } });
     };
-    this._warmupSearch = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      yield searchNotion({
-        query: "",
-        ancestorId: rootBlockId
+    this._warmupSearch = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        yield searchNotion({
+          query: "",
+          ancestorId: rootBlockId,
+        });
       });
-    });
-    this._searchImpl = () => __async(this, null, function* () {
-      const { searchNotion, rootBlockId } = this.props;
-      const { query } = this.state;
-      if (!query.trim()) {
-        this.setState({ isLoading: false, searchResult: null, searchError: null });
-        return;
-      }
-      this.setState({ isLoading: true });
-      const result = yield searchNotion({
-        query,
-        ancestorId: rootBlockId
+    this._searchImpl = () =>
+      __async(this, null, function* () {
+        const { searchNotion, rootBlockId } = this.props;
+        const { query } = this.state;
+        if (!query.trim()) {
+          this.setState({
+            isLoading: false,
+            searchResult: null,
+            searchError: null,
+          });
+          return;
+        }
+        this.setState({ isLoading: true });
+        const result = yield searchNotion({
+          query,
+          ancestorId: rootBlockId,
+        });
+        console.log("search", query, result);
+        let searchResult = null;
+        let searchError = null;
+        if (result.error || result.errorId) {
+          searchError = result;
+        } else {
+          searchResult = __spreadValues({}, result);
+          const results = searchResult.results
+            .map((result2) => {
+              var _a, _b;
+              const block =
+                (_a = searchResult.recordMap.block[result2.id]) == null
+                  ? void 0
+                  : _a.value;
+              if (!block) return;
+              const title = getBlockTitle3(block, searchResult.recordMap);
+              if (!title) {
+                return;
+              }
+              result2.title = title;
+              result2.block = block;
+              result2.recordMap = searchResult.recordMap;
+              result2.page =
+                getBlockParentPage(block, searchResult.recordMap, {
+                  inclusive: true,
+                }) || block;
+              if (!result2.page.id) {
+                return;
+              }
+              if ((_b = result2.highlight) == null ? void 0 : _b.text) {
+                result2.highlight.html = result2.highlight.text
+                  .replace(/<gzkNfoUU>/gi, "<b>")
+                  .replace(/<\/gzkNfoUU>/gi, "</b>");
+              }
+              return result2;
+            })
+            .filter(Boolean);
+          const searchResultsMap = results.reduce(
+            (map, result2) =>
+              __spreadProps(__spreadValues({}, map), {
+                [result2.page.id]: result2,
+              }),
+            {}
+          );
+          searchResult.results = Object.values(searchResultsMap);
+        }
+        if (this.state.query === query) {
+          this.setState({ isLoading: false, searchResult, searchError });
+        }
       });
-      console.log("search", query, result);
-      let searchResult = null;
-      let searchError = null;
-      if (result.error || result.errorId) {
-        searchError = result;
-      } else {
-        searchResult = __spreadValues({}, result);
-        const results = searchResult.results.map((result2) => {
-          var _a, _b;
-          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;
-          if (!block)
-            return;
-          const title = getBlockTitle3(block, searchResult.recordMap);
-          if (!title) {
-            return;
-          }
-          result2.title = title;
-          result2.block = block;
-          result2.recordMap = searchResult.recordMap;
-          result2.page = getBlockParentPage(block, searchResult.recordMap, {
-            inclusive: true
-          }) || block;
-          if (!result2.page.id) {
-            return;
-          }
-          if ((_b = result2.highlight) == null ? void 0 : _b.text) {
-            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, "<b>").replace(/<\/gzkNfoUU>/gi, "</b>");
-          }
-          return result2;
-        }).filter(Boolean);
-        const searchResultsMap = results.reduce(
-          (map, result2) => __spreadProps(__spreadValues({}, map), {
-            [result2.page.id]: result2
-          }),
-          {}
-        );
-        searchResult.results = Object.values(searchResultsMap);
-      }
-      if (this.state.query === query) {
-        this.setState({ isLoading: false, searchResult, searchError });
-      }
-    });
     this._inputRef = React12.createRef();
   }
   componentDidMount() {
@@ -997,87 +1371,189 @@ var SearchDialog = class extends React12.Component {
     const { isOpen, onClose } = this.props;
     const { isLoading, query, searchResult, searchError } = this.state;
     const hasQuery = !!query.trim();
-    return /* @__PURE__ */ React12.createElement(NotionContextConsumer, null, (ctx2) => {
-      const { components, defaultPageIcon, mapPageUrl } = ctx2;
-      return /* @__PURE__ */ React12.createElement(components.Modal, {
-        isOpen,
-        contentLabel: "Search",
-        className: "notion-search",
-        overlayClassName: "notion-search-overlay",
-        onRequestClose: onClose,
-        onAfterOpen: this._onAfterOpen
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "quickFindMenu"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "searchBar"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "inlineIcon"
-      }, isLoading ? /* @__PURE__ */ React12.createElement(LoadingIcon, {
-        className: "loadingIcon"
-      }) : /* @__PURE__ */ React12.createElement(SearchIcon, null)), /* @__PURE__ */ React12.createElement("input", {
-        className: "searchInput",
-        placeholder: "Search",
-        value: query,
-        ref: this._inputRef,
-        onChange: this._onChangeQuery
-      }), query && /* @__PURE__ */ React12.createElement("div", {
-        role: "button",
-        className: "clearButton",
-        onClick: this._onClearQuery
-      }, /* @__PURE__ */ React12.createElement(ClearIcon, {
-        className: "clearIcon"
-      }))), hasQuery && searchResult && /* @__PURE__ */ React12.createElement(React12.Fragment, null, searchResult.results.length ? /* @__PURE__ */ React12.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {
-        recordMap: searchResult.recordMap
-      }), /* @__PURE__ */ React12.createElement("div", {
-        className: "resultsPane"
-      }, searchResult.results.map((result) => {
-        var _a;
-        return /* @__PURE__ */ React12.createElement(components.PageLink, {
-          key: result.id,
-          className: cs("result", "notion-page-link"),
-          href: mapPageUrl(
-            result.page.id,
-            searchResult.recordMap
+    return /* @__PURE__ */ React12.createElement(
+      NotionContextConsumer,
+      null,
+      (ctx2) => {
+        const { components, defaultPageIcon, mapPageUrl } = ctx2;
+        return /* @__PURE__ */ React12.createElement(
+          components.Modal,
+          {
+            isOpen,
+            contentLabel: "Search",
+            className: "notion-search",
+            overlayClassName: "notion-search-overlay",
+            onRequestClose: onClose,
+            onAfterOpen: this._onAfterOpen,
+          },
+          /* @__PURE__ */ React12.createElement(
+            "div",
+            {
+              className: "quickFindMenu",
+            },
+            /* @__PURE__ */ React12.createElement(
+              "div",
+              {
+                className: "searchBar",
+              },
+              /* @__PURE__ */ React12.createElement(
+                "div",
+                {
+                  className: "inlineIcon",
+                },
+                isLoading
+                  ? /* @__PURE__ */ React12.createElement(LoadingIcon, {
+                      className: "loadingIcon",
+                    })
+                  : /* @__PURE__ */ React12.createElement(SearchIcon, null)
+              ),
+              /* @__PURE__ */ React12.createElement("input", {
+                className: "searchInput",
+                placeholder: "Search",
+                value: query,
+                ref: this._inputRef,
+                onChange: this._onChangeQuery,
+              }),
+              query &&
+                /* @__PURE__ */ React12.createElement(
+                  "div",
+                  {
+                    role: "button",
+                    className: "clearButton",
+                    onClick: this._onClearQuery,
+                  },
+                  /* @__PURE__ */ React12.createElement(ClearIcon, {
+                    className: "clearIcon",
+                  })
+                )
+            ),
+            hasQuery &&
+              searchResult &&
+              /* @__PURE__ */ React12.createElement(
+                React12.Fragment,
+                null,
+                searchResult.results.length
+                  ? /* @__PURE__ */ React12.createElement(
+                      NotionContextProvider,
+                      __spreadProps(__spreadValues({}, ctx2), {
+                        recordMap: searchResult.recordMap,
+                      }),
+                      /* @__PURE__ */ React12.createElement(
+                        "div",
+                        {
+                          className: "resultsPane",
+                        },
+                        searchResult.results.map((result) => {
+                          var _a;
+                          return /* @__PURE__ */ React12.createElement(
+                            components.PageLink,
+                            {
+                              key: result.id,
+                              className: cs("result", "notion-page-link"),
+                              href: mapPageUrl(
+                                result.page.id,
+                                searchResult.recordMap
+                              ),
+                            },
+                            /* @__PURE__ */ React12.createElement(PageTitle, {
+                              block: result.page,
+                              defaultIcon: defaultPageIcon,
+                            }),
+                            ((_a = result.highlight) == null
+                              ? void 0
+                              : _a.html) &&
+                              /* @__PURE__ */ React12.createElement("div", {
+                                className: "notion-search-result-highlight",
+                                dangerouslySetInnerHTML: {
+                                  __html: result.highlight.html,
+                                },
+                              })
+                          );
+                        })
+                      ),
+                      /* @__PURE__ */ React12.createElement(
+                        "footer",
+                        {
+                          className: "resultsFooter",
+                        },
+                        /* @__PURE__ */ React12.createElement(
+                          "div",
+                          null,
+                          /* @__PURE__ */ React12.createElement(
+                            "span",
+                            {
+                              className: "resultsCount",
+                            },
+                            searchResult.total
+                          ),
+                          searchResult.total === 1 ? " result" : " results"
+                        )
+                      )
+                    )
+                  : /* @__PURE__ */ React12.createElement(
+                      "div",
+                      {
+                        className: "noResultsPane",
+                      },
+                      /* @__PURE__ */ React12.createElement(
+                        "div",
+                        {
+                          className: "noResults",
+                        },
+                        "No results"
+                      ),
+                      /* @__PURE__ */ React12.createElement(
+                        "div",
+                        {
+                          className: "noResultsDetail",
+                        },
+                        "Try different search terms"
+                      )
+                    )
+              ),
+            hasQuery &&
+              !searchResult &&
+              searchError &&
+              /* @__PURE__ */ React12.createElement(
+                "div",
+                {
+                  className: "noResultsPane",
+                },
+                /* @__PURE__ */ React12.createElement(
+                  "div",
+                  {
+                    className: "noResults",
+                  },
+                  "Search error"
+                )
+              )
           )
-        }, /* @__PURE__ */ React12.createElement(PageTitle, {
-          block: result.page,
-          defaultIcon: defaultPageIcon
-        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ React12.createElement("div", {
-          className: "notion-search-result-highlight",
-          dangerouslySetInnerHTML: {
-            __html: result.highlight.html
-          }
-        }));
-      })), /* @__PURE__ */ React12.createElement("footer", {
-        className: "resultsFooter"
-      }, /* @__PURE__ */ React12.createElement("div", null, /* @__PURE__ */ React12.createElement("span", {
-        className: "resultsCount"
-      }, searchResult.total), searchResult.total === 1 ? " result" : " results"))) : /* @__PURE__ */ React12.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "noResults"
-      }, "No results"), /* @__PURE__ */ React12.createElement("div", {
-        className: "noResultsDetail"
-      }, "Try different search terms"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ React12.createElement("div", {
-        className: "noResultsPane"
-      }, /* @__PURE__ */ React12.createElement("div", {
-        className: "noResults"
-      }, "Search error"))));
-    });
+        );
+      }
+    );
   }
 };
 
 // src/components/header.tsx
 var Header = ({ block }) => {
-  return /* @__PURE__ */ React13.createElement("header", {
-    className: "notion-header"
-  }, /* @__PURE__ */ React13.createElement("div", {
-    className: "notion-nav-header"
-  }, /* @__PURE__ */ React13.createElement(Breadcrumbs, {
-    block
-  }), /* @__PURE__ */ React13.createElement(Search, {
-    block
-  })));
+  return /* @__PURE__ */ React13.createElement(
+    "header",
+    {
+      className: "notion-header",
+    },
+    /* @__PURE__ */ React13.createElement(
+      "div",
+      {
+        className: "notion-nav-header",
+      },
+      /* @__PURE__ */ React13.createElement(Breadcrumbs, {
+        block,
+      }),
+      /* @__PURE__ */ React13.createElement(Search, {
+        block,
+      })
+    )
+  );
 };
 var Breadcrumbs = ({ block, rootOnly = false }) => {
   const { recordMap, mapPageUrl, components } = useNotionContext();
@@ -1088,38 +1564,71 @@ var Breadcrumbs = ({ block, rootOnly = false }) => {
     }
     return breadcrumbs2;
   }, [recordMap, block.id, rootOnly]);
-  return /* @__PURE__ */ React13.createElement("div", {
-    className: "breadcrumbs",
-    key: "breadcrumbs"
-  }, breadcrumbs.map((breadcrumb, index) => {
-    if (!breadcrumb) {
-      return null;
-    }
-    const pageLinkProps = {};
-    const componentMap = {
-      pageLink: components.PageLink
-    };
-    if (breadcrumb.active) {
-      componentMap.pageLink = (props) => /* @__PURE__ */ React13.createElement("div", __spreadValues({}, props));
-    } else {
-      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
-    }
-    return /* @__PURE__ */ React13.createElement(React13.Fragment, {
-      key: breadcrumb.pageId
-    }, /* @__PURE__ */ React13.createElement(componentMap.pageLink, __spreadValues({
-      className: cs("breadcrumb", breadcrumb.active && "active")
-    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ React13.createElement(PageIcon, {
-      className: "icon",
-      block: breadcrumb.block
-    }), breadcrumb.title && /* @__PURE__ */ React13.createElement("span", {
-      className: "title"
-    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ React13.createElement("span", {
-      className: "spacer"
-    }, "/"));
-  }));
+  return /* @__PURE__ */ React13.createElement(
+    "div",
+    {
+      className: "breadcrumbs",
+      key: "breadcrumbs",
+    },
+    breadcrumbs.map((breadcrumb, index) => {
+      if (!breadcrumb) {
+        return null;
+      }
+      const pageLinkProps = {};
+      const componentMap = {
+        pageLink: components.PageLink,
+      };
+      if (breadcrumb.active) {
+        componentMap.pageLink = (props) =>
+          /* @__PURE__ */ React13.createElement(
+            "div",
+            __spreadValues({}, props)
+          );
+      } else {
+        pageLinkProps.href = mapPageUrl(breadcrumb.pageId);
+      }
+      return /* @__PURE__ */ React13.createElement(
+        React13.Fragment,
+        {
+          key: breadcrumb.pageId,
+        },
+        /* @__PURE__ */ React13.createElement(
+          componentMap.pageLink,
+          __spreadValues(
+            {
+              className: cs("breadcrumb", breadcrumb.active && "active"),
+            },
+            pageLinkProps
+          ),
+          breadcrumb.icon &&
+            /* @__PURE__ */ React13.createElement(PageIcon, {
+              className: "icon",
+              block: breadcrumb.block,
+            }),
+          breadcrumb.title &&
+            /* @__PURE__ */ React13.createElement(
+              "span",
+              {
+                className: "title",
+              },
+              breadcrumb.title
+            )
+        ),
+        index < breadcrumbs.length - 1 &&
+          /* @__PURE__ */ React13.createElement(
+            "span",
+            {
+              className: "spacer",
+            },
+            "/"
+          )
+      );
+    })
+  );
 };
 var Search = ({ block, search, title = "Search" }) => {
-  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } = useNotionContext();
+  const { searchNotion, rootPageId, isShowingSearch, onHideSearch } =
+    useNotionContext();
   const onSearchNotion = search || searchNotion;
   const [isSearchOpen, setIsSearchOpen] = React13.useState(isShowingSearch);
   React13.useEffect(() => {
@@ -1145,20 +1654,38 @@ var Search = ({ block, search, title = "Search" }) => {
     event.stopPropagation();
   });
   const hasSearch = !!onSearchNotion;
-  return /* @__PURE__ */ React13.createElement(React13.Fragment, null, hasSearch && /* @__PURE__ */ React13.createElement("div", {
-    role: "button",
-    className: cs("breadcrumb", "button", "notion-search-button"),
-    onClick: onOpenSearch
-  }, /* @__PURE__ */ React13.createElement(SearchIcon, {
-    className: "searchIcon"
-  }), title && /* @__PURE__ */ React13.createElement("span", {
-    className: "title"
-  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ React13.createElement(SearchDialog, {
-    isOpen: isSearchOpen,
-    rootBlockId: rootPageId || (block == null ? void 0 : block.id),
-    onClose: onCloseSearch,
-    searchNotion: onSearchNotion
-  }));
+  return /* @__PURE__ */ React13.createElement(
+    React13.Fragment,
+    null,
+    hasSearch &&
+      /* @__PURE__ */ React13.createElement(
+        "div",
+        {
+          role: "button",
+          className: cs("breadcrumb", "button", "notion-search-button"),
+          onClick: onOpenSearch,
+        },
+        /* @__PURE__ */ React13.createElement(SearchIcon, {
+          className: "searchIcon",
+        }),
+        title &&
+          /* @__PURE__ */ React13.createElement(
+            "span",
+            {
+              className: "title",
+            },
+            title
+          )
+      ),
+    isSearchOpen &&
+      hasSearch &&
+      /* @__PURE__ */ React13.createElement(SearchDialog, {
+        isOpen: isSearchOpen,
+        rootBlockId: rootPageId || (block == null ? void 0 : block.id),
+        onClose: onCloseSearch,
+        searchNotion: onSearchNotion,
+      })
+  );
 };
 
 // src/components/asset.tsx
@@ -1168,9 +1695,11 @@ import { getTextContent } from "notion-utils";
 // src/components/lite-youtube-embed.tsx
 import * as React14 from "react";
 var qs = (params) => {
-  return Object.keys(params).map(
-    (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
-  ).join("&");
+  return Object.keys(params)
+    .map(
+      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`
+    )
+    .join("&");
 };
 var LiteYouTubeEmbed = ({
   id,
@@ -1182,7 +1711,7 @@ var LiteYouTubeEmbed = ({
   params = {},
   adLinksPreconnect = true,
   style,
-  className
+  className,
 }) => {
   const muteParam = mute || defaultPlay ? "1" : "0";
   const queryString = React14.useMemo(
@@ -1194,64 +1723,91 @@ var LiteYouTubeEmbed = ({
   const ytUrl = "https://www.youtube-nocookie.com";
   const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;
   const [isPreconnected, setIsPreconnected] = React14.useState(false);
-  const [iframeInitialized, setIframeInitialized] = React14.useState(defaultPlay);
+  const [iframeInitialized, setIframeInitialized] =
+    React14.useState(defaultPlay);
   const [isIframeLoaded, setIsIframeLoaded] = React14.useState(false);
   const warmConnections = React14.useCallback(() => {
-    if (isPreconnected)
-      return;
+    if (isPreconnected) return;
     setIsPreconnected(true);
   }, [isPreconnected]);
   const onLoadIframe = React14.useCallback(() => {
-    if (iframeInitialized)
-      return;
+    if (iframeInitialized) return;
     setIframeInitialized(true);
   }, [iframeInitialized]);
   const onIframeLoaded = React14.useCallback(() => {
     setIsIframeLoaded(true);
   }, []);
-  return /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("link", {
-    rel: "preload",
-    href: posterUrl,
-    as: "image"
-  }), isPreconnected && /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: ytUrl
-  }), /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: "https://www.google.com"
-  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ React14.createElement(React14.Fragment, null, /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: "https://static.doubleclick.net"
-  }), /* @__PURE__ */ React14.createElement("link", {
-    rel: "preconnect",
-    href: "https://googleads.g.doubleclick.net"
-  })), /* @__PURE__ */ React14.createElement("div", {
-    onClick: onLoadIframe,
-    onPointerOver: warmConnections,
-    className: cs(
-      "notion-yt-lite",
-      isIframeLoaded && "notion-yt-loaded",
-      iframeInitialized && "notion-yt-initialized",
-      className
-    ),
-    style
-  }, /* @__PURE__ */ React14.createElement("img", {
-    src: posterUrl,
-    className: "notion-yt-thumbnail",
-    loading: lazyImage ? "lazy" : void 0,
-    alt
-  }), /* @__PURE__ */ React14.createElement("div", {
-    className: "notion-yt-playbtn"
-  }), iframeInitialized && /* @__PURE__ */ React14.createElement("iframe", {
-    width: "560",
-    height: "315",
-    frameBorder: "0",
-    allow: "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
-    allowFullScreen: true,
-    title: iframeTitle,
-    src: iframeSrc,
-    onLoad: onIframeLoaded
-  })));
+  return /* @__PURE__ */ React14.createElement(
+    React14.Fragment,
+    null,
+    /* @__PURE__ */ React14.createElement("link", {
+      rel: "preload",
+      href: posterUrl,
+      as: "image",
+    }),
+    isPreconnected &&
+      /* @__PURE__ */ React14.createElement(
+        React14.Fragment,
+        null,
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: ytUrl,
+        }),
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: "https://www.google.com",
+        })
+      ),
+    isPreconnected &&
+      adLinksPreconnect &&
+      /* @__PURE__ */ React14.createElement(
+        React14.Fragment,
+        null,
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: "https://static.doubleclick.net",
+        }),
+        /* @__PURE__ */ React14.createElement("link", {
+          rel: "preconnect",
+          href: "https://googleads.g.doubleclick.net",
+        })
+      ),
+    /* @__PURE__ */ React14.createElement(
+      "div",
+      {
+        onClick: onLoadIframe,
+        onPointerOver: warmConnections,
+        className: cs(
+          "notion-yt-lite",
+          isIframeLoaded && "notion-yt-loaded",
+          iframeInitialized && "notion-yt-initialized",
+          className
+        ),
+        style,
+      },
+      /* @__PURE__ */ React14.createElement("img", {
+        src: posterUrl,
+        className: "notion-yt-thumbnail",
+        loading: lazyImage ? "lazy" : void 0,
+        alt,
+      }),
+      /* @__PURE__ */ React14.createElement("div", {
+        className: "notion-yt-playbtn",
+      }),
+      iframeInitialized &&
+        /* @__PURE__ */ React14.createElement("iframe", {
+          width: "560",
+          height: "315",
+          frameBorder: "0",
+          allow:
+            "accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",
+          allowFullScreen: true,
+          title: iframeTitle,
+          src: iframeSrc,
+          onLoad: onIframeLoaded,
+        })
+    )
+  );
 };
 
 // src/components/asset.tsx
@@ -1268,7 +1824,7 @@ var supportedAssetTypes = [
   "pdf",
   "gist",
   "codepen",
-  "drive"
+  "drive",
 ];
 var Asset = ({ block, zoomable = true, children }) => {
   var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
@@ -1283,7 +1839,7 @@ var Asset = ({ block, zoomable = true, children }) => {
     alignSelf: "center",
     width: "100%",
     maxWidth: "100%",
-    flexDirection: "column"
+    flexDirection: "column",
   };
   const assetStyle = {};
   if (block.format) {
@@ -1293,7 +1849,7 @@ var Asset = ({ block, zoomable = true, children }) => {
       block_width,
       block_full_width,
       block_page_width,
-      block_preserve_scale
+      block_preserve_scale,
     } = block.format;
     if (block_full_width || block_page_width) {
       if (block_full_width) {
@@ -1354,28 +1910,37 @@ var Asset = ({ block, zoomable = true, children }) => {
       assetStyle.objectFit = "contain";
     }
   }
-  let source = ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) || ((_e = (_d = (_c = block.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]);
+  let source =
+    ((_b = recordMap.signed_urls) == null ? void 0 : _b[block.id]) ||
+    ((_e =
+      (_d = (_c = block.properties) == null ? void 0 : _c.source) == null
+        ? void 0
+        : _d[0]) == null
+      ? void 0
+      : _e[0]);
   let content = null;
   if (!source) {
     return null;
   }
   if (block.type === "tweet") {
     const src = source;
-    if (!src)
-      return null;
+    if (!src) return null;
     const id = src.split("?")[0].split("/").pop();
-    if (!id)
-      return null;
-    content = /* @__PURE__ */ React15.createElement("div", {
-      style: __spreadProps(__spreadValues({}, assetStyle), {
-        maxWidth: 420,
-        width: "100%",
-        marginLeft: "auto",
-        marginRight: "auto"
+    if (!id) return null;
+    content = /* @__PURE__ */ React15.createElement(
+      "div",
+      {
+        style: __spreadProps(__spreadValues({}, assetStyle), {
+          maxWidth: 420,
+          width: "100%",
+          marginLeft: "auto",
+          marginRight: "auto",
+        }),
+      },
+      /* @__PURE__ */ React15.createElement(components.Tweet, {
+        id,
       })
-    }, /* @__PURE__ */ React15.createElement(components.Tweet, {
-      id
-    }));
+    );
   } else if (block.type === "pdf") {
     style.overflow = "auto";
     style.background = "rgb(226, 226, 226)";
@@ -1385,29 +1950,54 @@ var Asset = ({ block, zoomable = true, children }) => {
     }
     if (!isServer) {
       content = /* @__PURE__ */ React15.createElement(components.Pdf, {
-        file: source
+        file: source,
       });
     }
-  } else if (block.type === "embed" || block.type === "video" || block.type === "figma" || block.type === "typeform" || block.type === "gist" || block.type === "maps" || block.type === "excalidraw" || block.type === "codepen" || block.type === "drive") {
-    if (block.type === "video" && source && source.indexOf("youtube") < 0 && source.indexOf("youtu.be") < 0 && source.indexOf("vimeo") < 0 && source.indexOf("wistia") < 0 && source.indexOf("loom") < 0 && source.indexOf("videoask") < 0 && source.indexOf("getcloudapp") < 0) {
+  } else if (
+    block.type === "embed" ||
+    block.type === "video" ||
+    block.type === "figma" ||
+    block.type === "typeform" ||
+    block.type === "gist" ||
+    block.type === "maps" ||
+    block.type === "excalidraw" ||
+    block.type === "codepen" ||
+    block.type === "drive"
+  ) {
+    if (
+      block.type === "video" &&
+      source &&
+      source.indexOf("youtube") < 0 &&
+      source.indexOf("youtu.be") < 0 &&
+      source.indexOf("vimeo") < 0 &&
+      source.indexOf("wistia") < 0 &&
+      source.indexOf("loom") < 0 &&
+      source.indexOf("videoask") < 0 &&
+      source.indexOf("getcloudapp") < 0
+    ) {
       style.paddingBottom = void 0;
       content = /* @__PURE__ */ React15.createElement("video", {
+        autoPlay: true,
         playsInline: true,
-        controls: true,
+        loop: true,
+        muted: true,
+        controls: false,
         preload: "metadata",
         style: assetStyle,
         src: source,
-        title: block.type
+        title: block.type,
       });
     } else {
-      let src = ((_f = block.format) == null ? void 0 : _f.display_source) || source;
+      let src =
+        ((_f = block.format) == null ? void 0 : _f.display_source) || source;
       if (src) {
-        const youtubeVideoId = block.type === "video" ? getYoutubeId(src) : null;
+        const youtubeVideoId =
+          block.type === "video" ? getYoutubeId(src) : null;
         if (youtubeVideoId) {
           content = /* @__PURE__ */ React15.createElement(LiteYouTubeEmbed, {
             id: youtubeVideoId,
             style: assetStyle,
-            className: "notion-asset-object-fit"
+            className: "notion-asset-object-fit",
           });
         } else if (block.type === "gist") {
           if (!src.endsWith(".pibb")) {
@@ -1422,7 +2012,7 @@ var Asset = ({ block, zoomable = true, children }) => {
             title: "GitHub Gist",
             frameBorder: "0",
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         } else {
           content = /* @__PURE__ */ React15.createElement("iframe", {
@@ -1433,29 +2023,47 @@ var Asset = ({ block, zoomable = true, children }) => {
             frameBorder: "0",
             allowFullScreen: true,
             loading: "lazy",
-            scrolling: "auto"
+            scrolling: "auto",
           });
         }
       }
     }
   } else if (block.type === "image") {
     if (source.includes("file.notion.so")) {
-      source = (_i = (_h = (_g = block.properties) == null ? void 0 : _g.source) == null ? void 0 : _h[0]) == null ? void 0 : _i[0];
+      source =
+        (_i =
+          (_h = (_g = block.properties) == null ? void 0 : _g.source) == null
+            ? void 0
+            : _h[0]) == null
+          ? void 0
+          : _i[0];
     }
     const src = mapImageUrl(source, block);
-    const caption = getTextContent((_j = block.properties) == null ? void 0 : _j.caption);
+    const caption = getTextContent(
+      (_j = block.properties) == null ? void 0 : _j.caption
+    );
     const alt = caption || "notion image";
     content = /* @__PURE__ */ React15.createElement(LazyImage, {
       src,
       alt,
       zoomable,
       height: style.height,
-      style: assetStyle
+      style: assetStyle,
     });
   }
-  return /* @__PURE__ */ React15.createElement(React15.Fragment, null, /* @__PURE__ */ React15.createElement("div", {
-    style
-  }, content, block.type === "image" && children), block.type !== "image" && children);
+  return /* @__PURE__ */ React15.createElement(
+    React15.Fragment,
+    null,
+    /* @__PURE__ */ React15.createElement(
+      "div",
+      {
+        style,
+      },
+      content,
+      block.type === "image" && children
+    ),
+    block.type !== "image" && children
+  );
 };
 
 // src/components/asset-wrapper.tsx
@@ -1466,7 +2074,16 @@ var AssetWrapper = ({ blockId, block }) => {
   const { components, mapPageUrl, rootDomain, zoom } = useNotionContext();
   let isURL = false;
   if (block.type === "image") {
-    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];
+    const caption =
+      (_c =
+        (_b =
+          (_a = value == null ? void 0 : value.properties) == null
+            ? void 0
+            : _a.caption) == null
+          ? void 0
+          : _b[0]) == null
+        ? void 0
+        : _c[0];
     if (caption) {
       const id = parsePageId2(caption, { uuid: true });
       const isPage = caption.charAt(0) === "/" && id;
@@ -1475,32 +2092,61 @@ var AssetWrapper = ({ blockId, block }) => {
       }
     }
   }
-  const figure = /* @__PURE__ */ React16.createElement("figure", {
-    className: cs(
-      "notion-asset-wrapper",
-      `notion-asset-wrapper-${block.type}`,
-      ((_d = value.format) == null ? void 0 : _d.block_full_width) && "notion-asset-wrapper-full",
-      blockId
+  const figure = /* @__PURE__ */ React16.createElement(
+    "figure",
+    {
+      className: cs(
+        "notion-asset-wrapper",
+        `notion-asset-wrapper-${block.type}`,
+        ((_d = value.format) == null ? void 0 : _d.block_full_width) &&
+          "notion-asset-wrapper-full",
+        blockId
+      ),
+    },
+    /* @__PURE__ */ React16.createElement(
+      Asset,
+      {
+        block: value,
+        zoomable: zoom && !isURL,
+      },
+      ((_e = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _e.caption) &&
+        !isURL &&
+        /* @__PURE__ */ React16.createElement(
+          "figcaption",
+          {
+            className: "notion-asset-caption",
+          },
+          /* @__PURE__ */ React16.createElement(Text, {
+            value: value.properties.caption,
+            block,
+          })
+        )
     )
-  }, /* @__PURE__ */ React16.createElement(Asset, {
-    block: value,
-    zoomable: zoom && !isURL
-  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ React16.createElement("figcaption", {
-    className: "notion-asset-caption"
-  }, /* @__PURE__ */ React16.createElement(Text, {
-    value: value.properties.caption,
-    block
-  }))));
+  );
   if (isURL) {
-    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];
+    const caption =
+      (_f = value == null ? void 0 : value.properties) == null
+        ? void 0
+        : _f.caption[0][0];
     const id = parsePageId2(caption, { uuid: true });
     const isPage = caption.charAt(0) === "/" && id;
     const captionHostname = extractHostname(caption);
-    return /* @__PURE__ */ React16.createElement(components.PageLink, {
-      style: urlStyle,
-      href: isPage ? mapPageUrl(id) : caption,
-      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith("/") ? "blank_" : null
-    }, figure);
+    return /* @__PURE__ */ React16.createElement(
+      components.PageLink,
+      {
+        style: urlStyle,
+        href: isPage ? mapPageUrl(id) : caption,
+        target:
+          captionHostname &&
+          captionHostname !== rootDomain &&
+          !caption.startsWith("/")
+            ? "blank_"
+            : null,
+      },
+      figure
+    );
   }
   return figure;
 };
@@ -1526,11 +2172,18 @@ import * as React18 from "react";
 // src/icons/check.tsx
 import * as React17 from "react";
 function SvgCheck(props) {
-  return /* @__PURE__ */ React17.createElement("svg", __spreadValues({
-    viewBox: "0 0 14 14"
-  }, props), /* @__PURE__ */ React17.createElement("path", {
-    d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z"
-  }));
+  return /* @__PURE__ */ React17.createElement(
+    "svg",
+    __spreadValues(
+      {
+        viewBox: "0 0 14 14",
+      },
+      props
+    ),
+    /* @__PURE__ */ React17.createElement("path", {
+      d: "M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z",
+    })
+  );
 }
 var check_default = SvgCheck;
 
@@ -1538,17 +2191,25 @@ var check_default = SvgCheck;
 var Checkbox = ({ isChecked }) => {
   let content = null;
   if (isChecked) {
-    content = /* @__PURE__ */ React18.createElement("div", {
-      className: "notion-property-checkbox-checked"
-    }, /* @__PURE__ */ React18.createElement(check_default, null));
+    content = /* @__PURE__ */ React18.createElement(
+      "div",
+      {
+        className: "notion-property-checkbox-checked",
+      },
+      /* @__PURE__ */ React18.createElement(check_default, null)
+    );
   } else {
     content = /* @__PURE__ */ React18.createElement("div", {
-      className: "notion-property-checkbox-unchecked"
+      className: "notion-property-checkbox-unchecked",
     });
   }
-  return /* @__PURE__ */ React18.createElement("span", {
-    className: "notion-property notion-property-checkbox"
-  }, content);
+  return /* @__PURE__ */ React18.createElement(
+    "span",
+    {
+      className: "notion-property notion-property-checkbox",
+    },
+    content
+  );
 };
 
 // src/next.tsx
@@ -1556,79 +2217,89 @@ import * as React19 from "react";
 import isEqual from "react-fast-compare";
 var wrapNextImage = (NextImage) => {
   return React19.memo(function ReactNotionXNextImage(_a) {
-    var _b = _a, {
-      src,
-      alt,
-      width,
-      height,
-      className,
-      style,
-      layout
-    } = _b, rest = __objRest(_b, [
-      "src",
-      "alt",
-      "width",
-      "height",
-      "className",
-      "style",
-      "layout"
-    ]);
+    var _b = _a,
+      { src, alt, width, height, className, style, layout } = _b,
+      rest = __objRest(_b, [
+        "src",
+        "alt",
+        "width",
+        "height",
+        "className",
+        "style",
+        "layout",
+      ]);
     if (!layout) {
       layout = width && height ? "intrinsic" : "fill";
     }
-    return /* @__PURE__ */ React19.createElement(NextImage, __spreadValues({
-      className,
-      src,
-      alt,
-      width: layout === "intrinsic" && width,
-      height: layout === "intrinsic" && height,
-      objectFit: style == null ? void 0 : style.objectFit,
-      objectPosition: style == null ? void 0 : style.objectPosition,
-      layout
-    }, rest));
+    return /* @__PURE__ */ React19.createElement(
+      NextImage,
+      __spreadValues(
+        {
+          className,
+          src,
+          alt,
+          width: layout === "intrinsic" && width,
+          height: layout === "intrinsic" && height,
+          objectFit: style == null ? void 0 : style.objectFit,
+          objectPosition: style == null ? void 0 : style.objectPosition,
+          layout,
+        },
+        rest
+      )
+    );
   }, isEqual);
 };
-var wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {
-  var _b = _a, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  } = _b, linkProps = __objRest(_b, [
-    "href",
-    "as",
-    "passHref",
-    "prefetch",
-    "replace",
-    "scroll",
-    "shallow",
-    "locale"
-  ]);
-  return /* @__PURE__ */ React19.createElement(NextLink, {
-    href,
-    as,
-    passHref,
-    prefetch,
-    replace,
-    scroll,
-    shallow,
-    locale
-  }, /* @__PURE__ */ React19.createElement("a", __spreadValues({}, linkProps)));
-};
+var wrapNextLink = (NextLink) =>
+  function ReactNotionXNextLink(_a) {
+    var _b = _a,
+      { href, as, passHref, prefetch, replace, scroll, shallow, locale } = _b,
+      linkProps = __objRest(_b, [
+        "href",
+        "as",
+        "passHref",
+        "prefetch",
+        "replace",
+        "scroll",
+        "shallow",
+        "locale",
+      ]);
+    return /* @__PURE__ */ React19.createElement(
+      NextLink,
+      {
+        href,
+        as,
+        passHref,
+        prefetch,
+        replace,
+        scroll,
+        shallow,
+        locale,
+      },
+      /* @__PURE__ */ React19.createElement("a", __spreadValues({}, linkProps))
+    );
+  };
 
 // src/context.tsx
-var DefaultLink = (props) => /* @__PURE__ */ React20.createElement("a", __spreadValues({
-  target: "_blank",
-  rel: "noopener noreferrer"
-}, props));
+var DefaultLink = (props) =>
+  /* @__PURE__ */ React20.createElement(
+    "a",
+    __spreadValues(
+      {
+        target: "_blank",
+        rel: "noopener noreferrer",
+      },
+      props
+    )
+  );
 var DefaultLinkMemo = React20.memo(DefaultLink);
-var DefaultPageLink = (props) => /* @__PURE__ */ React20.createElement("a", __spreadValues({}, props));
+var DefaultPageLink = (props) =>
+  /* @__PURE__ */ React20.createElement("a", __spreadValues({}, props));
 var DefaultPageLinkMemo = React20.memo(DefaultPageLink);
-var DefaultEmbed = (props) => /* @__PURE__ */ React20.createElement(AssetWrapper, __spreadValues({}, props));
+var DefaultEmbed = (props) =>
+  /* @__PURE__ */ React20.createElement(
+    AssetWrapper,
+    __spreadValues({}, props)
+  );
 var DefaultHeader = Header;
 var dummyComponent = (name) => () => {
   console.warn(
@@ -1666,7 +2337,7 @@ var defaultComponents = {
   Tweet: dummyComponent("Tweet"),
   Modal: dummyComponent("Modal"),
   Header: DefaultHeader,
-  Embed: DefaultEmbed
+  Embed: DefaultEmbed,
 };
 var defaultNotionContext = {
   recordMap: {
@@ -1675,7 +2346,7 @@ var defaultNotionContext = {
     collection_view: {},
     collection_query: {},
     notion_user: {},
-    signed_urls: {}
+    signed_urls: {},
   },
   components: defaultComponents,
   mapPageUrl: defaultMapPageUrl(),
@@ -1695,23 +2366,25 @@ var defaultNotionContext = {
   defaultPageIcon: null,
   defaultPageCover: null,
   defaultPageCoverPosition: 0.5,
-  zoom: null
+  zoom: null,
 };
 var ctx = React20.createContext(defaultNotionContext);
 var NotionContextProvider = (_a) => {
-  var _b = _a, {
-    components: themeComponents = {},
-    children,
-    mapPageUrl,
-    mapImageUrl,
-    rootPageId
-  } = _b, rest = __objRest(_b, [
-    "components",
-    "children",
-    "mapPageUrl",
-    "mapImageUrl",
-    "rootPageId"
-  ]);
+  var _b = _a,
+    {
+      components: themeComponents = {},
+      children,
+      mapPageUrl,
+      mapImageUrl,
+      rootPageId,
+    } = _b,
+    rest = __objRest(_b, [
+      "components",
+      "children",
+      "mapPageUrl",
+      "mapImageUrl",
+      "rootPageId",
+    ]);
   for (const key of Object.keys(rest)) {
     if (rest[key] === void 0) {
       delete rest[key];
@@ -1733,17 +2406,29 @@ var NotionContextProvider = (_a) => {
     }
   }
   const value = React20.useMemo(
-    () => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {
-      rootPageId,
-      mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
-      mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
-      components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)
-    }),
+    () =>
+      __spreadProps(
+        __spreadValues(__spreadValues({}, defaultNotionContext), rest),
+        {
+          rootPageId,
+          mapPageUrl:
+            mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),
+          mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,
+          components: __spreadValues(
+            __spreadValues({}, defaultComponents),
+            wrappedThemeComponents
+          ),
+        }
+      ),
     [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]
   );
-  return /* @__PURE__ */ React20.createElement(ctx.Provider, {
-    value
-  }, children);
+  return /* @__PURE__ */ React20.createElement(
+    ctx.Provider,
+    {
+      value,
+    },
+    children
+  );
 };
 var NotionContextConsumer = ctx.Consumer;
 var useNotionContext = () => {
@@ -1753,27 +2438,36 @@ var useNotionContext = () => {
 // src/third-party/equation.tsx
 var katexSettings = {
   throwOnError: false,
-  strict: false
+  strict: false,
 };
 var Equation = (_a) => {
-  var _b = _a, { block, math, inline = false, className } = _b, rest = __objRest(_b, ["block", "math", "inline", "className"]);
+  var _b = _a,
+    { block, math, inline = false, className } = _b,
+    rest = __objRest(_b, ["block", "math", "inline", "className"]);
   const { recordMap } = useNotionContext();
   math = math || getBlockTitle4(block, recordMap);
-  if (!math)
-    return null;
-  return /* @__PURE__ */ React21.createElement("span", {
-    role: "button",
-    tabIndex: 0,
-    className: cs(
-      "notion-equation",
-      inline ? "notion-equation-inline" : "notion-equation-block",
-      className
+  if (!math) return null;
+  return /* @__PURE__ */ React21.createElement(
+    "span",
+    {
+      role: "button",
+      tabIndex: 0,
+      className: cs(
+        "notion-equation",
+        inline ? "notion-equation-inline" : "notion-equation-block",
+        className
+      ),
+    },
+    /* @__PURE__ */ React21.createElement(
+      Katex,
+      __spreadValues(
+        {
+          math,
+          settings: katexSettings,
+        },
+        rest
+      )
     )
-  }, /* @__PURE__ */ React21.createElement(Katex, __spreadValues({
-    math,
-    settings: katexSettings
-  }, rest)));
-};
-export {
-  Equation
+  );
 };
+export { Equation };
